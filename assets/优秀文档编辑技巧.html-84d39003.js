import{_ as r,V as n,W as t,X as e,Y as l,Z as a,$ as o,F as s}from"./framework-2060dede.js";const d={},h=o('<h1 id="优秀文档编辑技巧" tabindex="-1"><a class="header-anchor" href="#优秀文档编辑技巧" aria-hidden="true">#</a> 优秀文档编辑技巧</h1><h2 id="总述" tabindex="-1"><a class="header-anchor" href="#总述" aria-hidden="true">#</a> 总述</h2><ul><li>想清楚，再下笔</li><li>多从「用户视角」出发</li><li>用好的「结构」让读者理解你的思路</li><li>选择合适的「呈现形式」，突出重点</li><li>保持「精简」</li><li>清晰的表达</li><li>「细节」决定成败</li><li>保持输入，不断「迭代」</li></ul><p>写个人博客，已经有近一个月了。以做技术记录出发，「面向小黄鸭编程」的方式,确实更容易坚持下来，做起来也更有成就感。但是，总是感觉自身的写作还不是很好，为此，总结一下「字节跳动优秀文档」的编辑技巧(原文档链接见参考文档)。</p><h2 id="动手前-先「想清楚」" tabindex="-1"><a class="header-anchor" href="#动手前-先「想清楚」" aria-hidden="true">#</a> 动手前，先「想清楚」</h2><ul><li>写作前，我们应当先自己脑中过一遍，思考逻辑是否自洽、准备工作是否有做足。</li></ul><p>这其实很重要，就如个人博客，笔者刚开始时，不大喜欢用图床，觉得较为麻烦。如有必要使用，便选用已有的图床。但是，随着写作的深入，发现这其实是不可持续的，你必须要有自己的图床体系，或者缓存在博客网站中。为此，你还是得学习像 <code>PicGO</code>等软件方法。其实也不算麻烦，能够加快编辑的速度。</p><ul><li>除逻辑是否自洽外，还需要想清楚是否能够将这件事情讲清楚，是否他人能够读懂。</li></ul><p>如果不能将事情表述清楚，如果没能捋顺，说明还没想好，这是大忌。（反应到自身，好像很多都是这样，得改！）</p><h2 id="多从「用户视角」出发" tabindex="-1"><a class="header-anchor" href="#多从「用户视角」出发" aria-hidden="true">#</a> 多从「用户视角」出发</h2><p>应当将文档当做「产品」一样打造，转变自身的视角，以用户的角度进行查看：</p><ul><li><p>我的沟通目标是什么？ 以写一份「产品需求文档」举例，沟通目标就是「评审一次过」！那么文档里写的内容，能不能帮助我达到目标？</p></li><li><p>我的「用户」都是谁？</p><p>结合文档的使用场景去看，例如一份双月汇报材料，读者往往包括管理者+协作者+信息同步对象；</p></li><li><p><code>Ta</code>知道什么?</p><p>需要假想你的「用户」所掌握的信息</p></li><li><p><code>Ta</code>想知道什么?</p><p>假想如果只让对方提 3 个问题，那么对方会问什么？</p></li></ul><p>以上这些，其实是很难的，但是收获其实是很大的。张鑫旭老师就曾说过，自己的博客之所以受欢迎，有很大一部分原因是自己会回读自己写的东西是否能让别人看懂。过于生涩的内容就反复修改，久而久之就形成习惯了。这也是一件很厉害的事。</p><h2 id="用好的「结构」让读者理解你的思路" tabindex="-1"><a class="header-anchor" href="#用好的「结构」让读者理解你的思路" aria-hidden="true">#</a> 用好的「结构」让读者理解你的思路</h2><p>就像高考议论文一样，文章的结构应该为：虎头、猪肚和豹尾。写作博客文档也是一样的。</p><ul><li>虎头：以精炼的语言概括全文。将背景、要解决什么问题、建议方案精简地总结在开头，让读者快速浏览后心里产生一个问号❓，紧接着我们再用正文解答读者的疑问；</li><li>猪肚：也就是正文部分，像金字塔形一样的每个章节按照「总-分」或者「总-分-总」的形式进行写作。</li><li>豹尾：结论是起到总结的作用，以「敲黑板划重点」的方式加强读者对问题的理解，同时明确下一阶段的行动。</li></ul><h2 id="选择合适的「呈现形式」-突出重点" tabindex="-1"><a class="header-anchor" href="#选择合适的「呈现形式」-突出重点" aria-hidden="true">#</a> 选择合适的「呈现形式」，突出重点</h2><p>在表现形式上，纯文字肯定是枯燥乏味的，可以借助其它形式：</p><ul><li><p><strong>借助图表：</strong></p><ul><li>涉及到大量数据的，选择表格比打一堆文字更一目了然；</li><li>此外，还有甘特图(条状图的一种)、脑图、泳道图(一种UML活动图)等不同的图形化表达方式，可以结合内容针对性选择；</li></ul></li><li><p><strong>通过加粗 / 标记颜色 / 斜体等方式高亮重点信息</strong></p><ul><li>高亮内容适用于总结句或关键数据，建议大家克制使用，否则会模糊真正的重点</li></ul></li></ul><p>但是，本人还是喜欢多文字的表现。（o´ﾟ□ﾟ`o）</p><h2 id="保持「精简」" tabindex="-1"><a class="header-anchor" href="#保持「精简」" aria-hidden="true">#</a> 保持「精简」</h2><p>个人的精力是有限的，虽然上文中说到要假设你的读者知道什么，但是也切不可假设读者什么都不知道。否则信息将过量，呈现形式也不会很友好。</p><p>精简，就意味着要多总结。归纳会减少人的记忆成本。</p><p>多用「面向小黄鸭编程」的形式进行写作。如果一部分内容感觉不大需要，就问问自己，如果去掉这部分，会不会出现明显的减损？如果答案不是肯定的，那就可以去掉。</p><h2 id="清晰的表达" tabindex="-1"><a class="header-anchor" href="#清晰的表达" aria-hidden="true">#</a> 清晰的表达</h2><p>清晰的表达，也就是说人话。高大上的词汇很容易劝退他人。如上文中的「甘特图」，虽然我们都用过条状图，但是如果不是专门做过报表，那么一般读者理应是不知道这种词汇的。所以，我们应当给出注释，以便理解。</p><h2 id="「细节」决定成败" tabindex="-1"><a class="header-anchor" href="#「细节」决定成败" aria-hidden="true">#</a> 「细节」决定成败</h2><p>检查的内容应当包括：</p><ul><li><strong>格式检查</strong>：并列呈现的信息要对齐，否则你的“房子”看起来会歪歪扭扭；</li><li>**错字等细节检查：**错别字、大小写、全角/半角标点、单位保持统一、数字小数点等等。</li></ul><h2 id="保持输入-不断「迭代」" tabindex="-1"><a class="header-anchor" href="#保持输入-不断「迭代」" aria-hidden="true">#</a> 保持输入，不断「迭代」</h2><p>技术是会更新的，随着自身对于技术的理解逐渐增加，可以适当对以前的博文进行迭代。这是保证质量的关键，同时，也能巩固自身对于技术的理解。</p><h2 id="软件手册目录结构" tabindex="-1"><a class="header-anchor" href="#软件手册目录结构" aria-hidden="true">#</a> 软件手册目录结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><p><strong>简介</strong>（Introduction）：[必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</p></li><li><p><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</p></li><li><p>入门篇</p><p>（Basics）：[必备] [目录] 又称“使用篇”，提供初级的使用教程</p><ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><p><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称“开发篇”，提供中高级的开发教程</p></li><li><p><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</p></li><li><p><strong>FAQ</strong>：[可选] [文件] 常见问题解答</p></li><li><p>附录</p><p>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容</p><ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>',35),p={href:"https://www.feishu.cn/docs/doccnBYiti3wwLmVGtnAabHIAwe",target:"_blank",rel:"noopener noreferrer"},c={href:"https://github.com/ruanyf/document-style-guide/tree/master",target:"_blank",rel:"noopener noreferrer"};function u(g,_){const i=s("ExternalLinkIcon");return n(),t("div",null,[h,e("ul",null,[e("li",null,[e("a",p,[l("字节跳动优秀文档 8 大秘籍 "),a(i)])]),e("li",null,[e("a",c,[l("中文技术文档的写作规范"),a(i)])])])])}const x=r(d,[["render",u],["__file","优秀文档编辑技巧.html.vue"]]);export{x as default};
