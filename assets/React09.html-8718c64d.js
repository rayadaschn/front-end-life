const n=JSON.parse(`{"key":"v-587367aa","path":"/Framework/React/React09.html","title":"React之技术细节","lang":"zh-CN","frontmatter":{"title":"React之技术细节","icon":"react","date":"2024-12-08T00:00:00.000Z","category":["框架"],"tag":["React"],"sticky":false},"headers":[{"level":2,"title":"setState 的更新逻辑","slug":"setstate-的更新逻辑","link":"#setstate-的更新逻辑","children":[]},{"level":2,"title":"setState 的 Promise 化","slug":"setstate-的-promise-化","link":"#setstate-的-promise-化","children":[]},{"level":2,"title":"什么时候用 Redux?","slug":"什么时候用-redux","link":"#什么时候用-redux","children":[]}],"git":{"createdTime":1733705323000,"updatedTime":1733705323000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.12,"words":636},"filePathRelative":"Framework/React/React09.md","localizedDate":"2024年12月8日","excerpt":"<p>这里用于梳理 React 的一些技术实现细节，以作技术回顾。</p>\\n<h2> setState 的更新逻辑</h2>\\n<p>setState 的更新逻辑有时是同步的有时是异步的，这取决于调用 setState 的环境。实际上，在 React 控制之内的事件处理过程中，setState 是异步的，而在 React 控制之外的事件处理过程中，setState 是同步的。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token function\\">onClick</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setState</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">count</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>state<span class=\\"token punctuation\\">.</span>count <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function\\">componentDidMount</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querrySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'#btn'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'click'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>onClick<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function\\">render</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token operator\\">&lt;</span>React<span class=\\"token punctuation\\">.</span>Fragment<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span>button id<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"btn\\"</span> onClick<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>onClick<span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span>Click out React<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>button<span class=\\"token operator\\">&gt;</span>\\n\\n      <span class=\\"token operator\\">&lt;</span>button onClick<span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">{</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>onClick<span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span>Click <span class=\\"token keyword\\">in</span> React<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>button<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>React<span class=\\"token punctuation\\">.</span>Fragment<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
