const n=JSON.parse(`{"key":"v-53285a92","path":"/JavaScript/JS/JS23.html","title":"JS 事件梳理","lang":"zh-CN","frontmatter":{"title":"JS 事件梳理","icon":"javascript","date":"2022-04-09T00:00:00.000Z","category":["javascript"],"tag":["javascript"],"sticky":false},"headers":[{"level":2,"title":"如何绑定事件的处理函数","slug":"如何绑定事件的处理函数","link":"#如何绑定事件的处理函数","children":[]},{"level":2,"title":"事件流","slug":"事件流","link":"#事件流","children":[]}],"git":{"createdTime":1714317287000,"updatedTime":1714317287000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.65,"words":794},"filePathRelative":"JavaScript/JS/JS23.md","localizedDate":"2022年4月9日","excerpt":"<p>首先明晰定义，事件是用户和浏览器之间的交互行为，比如鼠标点击、鼠标移动、键盘按下等。</p>\\n<p><strong>绑定事件</strong>不是绑定事件本身而是<strong>绑定事件的处理函数</strong>。因为这些事件是元素本身就有的能力，只有处理函数是我们后续添加进去的，绑定的是事件的反馈。</p>\\n<p>事件 ➕ 事件的反馈就是前端交互。</p>\\n<h2> 如何绑定事件的处理函数</h2>\\n<ol>\\n<li>\\n<p>直接绑定</p>\\n<p>内联事件监听器:</p>\\n<div class=\\"language-html line-numbers-mode\\" data-ext=\\"html\\"><pre class=\\"language-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token special-attr\\"><span class=\\"token attr-name\\">onclick</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token value javascript language-javascript\\"><span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'hello'</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">\\"</span></span></span><span class=\\"token punctuation\\">&gt;</span></span>点击我<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><p>但是这种方法不推荐使用，因为这样就写死了，推荐用句柄方式绑定：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> oBtn <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'button'</span><span class=\\"token punctuation\\">)</span>\\noBtn<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onclick</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'hello'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>这种方法的优点是兼容性好，但是缺点是只能绑定一个事件，如果有多个事件处理函数，则后面的事件会覆盖前面的事件处理函数。</p>\\n</li>\\n<li>\\n<p>事件监听</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 获取元素</span>\\n<span class=\\"token keyword\\">const</span> btn <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'button'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 绑定事件</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">clickEvent</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'hello'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\nbtn<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'click'</span><span class=\\"token punctuation\\">,</span> clickEvent<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><code>addEventListener</code>是 W3C 规范，优点是可以绑定多个事件处理函数，缺点是兼容性不好，ie9 以下不兼容。</p>\\n</li>\\n<li>\\n<p>事件代理</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 获取元素</span>\\n<span class=\\"token keyword\\">const</span> ul <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'ul'</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 绑定事件</span>\\nul<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'click'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">e</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 判断点击的元素</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span>target<span class=\\"token punctuation\\">.</span>tagName<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toLowerCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'li'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">alert</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'hello'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>ie8 及以下的绑定方法: <code>element.attachEvent('onclick', eventHandler)</code>。现在已经淘汰了，不做介绍。</p>\\n</li>\\n</ol>"}`);export{n as data};
