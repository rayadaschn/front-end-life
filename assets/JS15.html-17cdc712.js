import{_ as e,X as a,Y as n,$ as t}from"./framework-97fa2d96.js";const s={},r=t,o=a,c=n,i=r(`<p>总结一下在前端中做权限管理的设计思路:</p><h2 id="登录鉴权" tabindex="-1"><a class="header-anchor" href="#登录鉴权" aria-hidden="true">#</a> 登录鉴权</h2><p>在用户登录后，获取 token 并在前端保存，作为用户凭证（LocalStore 或 SessionStore），后面每次发送请求都会携带 Token，后端对 Token 进行验证。当页面发生刷新时，可以用 Token 来获取用户权限。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>authorization <span class="token operator">=</span> token
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="访问权限" tabindex="-1"><a class="header-anchor" href="#访问权限" aria-hidden="true">#</a> 访问权限</h2><p>访问权限是根据用户是否登录判断是否能访问某个页面，通过路由守卫实现判断用户是否有次权限。</p><h2 id="页面权限" tabindex="-1"><a class="header-anchor" href="#页面权限" aria-hidden="true">#</a> 页面权限</h2><p>页面权限，在前端配置俩种路由：通用路由和依据权限获取的路由。</p><p>在权限路由中增加访问权限（meta 中备注），用户登录后可得到对应的权限列表，通过权限列表筛选出符合要求的路由信息，最后通过 addRoutes 方法，动态添加路由。</p><h2 id="按钮权限" tabindex="-1"><a class="header-anchor" href="#按钮权限" aria-hidden="true">#</a> 按钮权限</h2><p>按钮权限一般通过自定义指令实现，当用户登录时获取相应按钮的权限，在按钮上使用权限判断，用户是否有该按钮的权限，若没有则不渲染该按钮元素。</p>`,11),d=[i];function h(p,l){return o(),c("div",null,d)}const _=e(s,[["render",h],["__file","JS15.html.vue"]]);export{_ as default};
