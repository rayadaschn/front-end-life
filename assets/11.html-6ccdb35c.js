const t=JSON.parse('{"key":"v-e97c5d70","path":"/OneMoreThing/interview/11.html","title":"11 综合应用","lang":"zh-CN","frontmatter":{"title":"11 综合应用","icon":"note","date":"2023-08-12T00:00:00.000Z","category":["anonymous"],"tag":["note"],"star":false,"sticky":false},"headers":[{"level":2,"title":"性能优化有哪些?","slug":"性能优化有哪些","link":"#性能优化有哪些","children":[{"level":3,"title":"一、网络加载优化（资源到达浏览器前）","slug":"一、网络加载优化-资源到达浏览器前","link":"#一、网络加载优化-资源到达浏览器前","children":[]},{"level":3,"title":"二、渲染层优化（资源到了后，尽快变成页面）","slug":"二、渲染层优化-资源到了后-尽快变成页面","link":"#二、渲染层优化-资源到了后-尽快变成页面","children":[]},{"level":3,"title":"三、JavaScript 执行优化（JS 别拖累页面）","slug":"三、javascript-执行优化-js-别拖累页面","link":"#三、javascript-执行优化-js-别拖累页面","children":[]},{"level":3,"title":"四、图片与媒体优化","slug":"四、图片与媒体优化","link":"#四、图片与媒体优化","children":[]},{"level":3,"title":"五、构建层优化（Webpack / Vite）","slug":"五、构建层优化-webpack-vite","link":"#五、构建层优化-webpack-vite","children":[]},{"level":3,"title":"六、用户体验提升优化（非指标但直接影响体感）","slug":"六、用户体验提升优化-非指标但直接影响体感","link":"#六、用户体验提升优化-非指标但直接影响体感","children":[]},{"level":3,"title":"常用优化工具推荐","slug":"常用优化工具推荐","link":"#常用优化工具推荐","children":[]}]},{"level":2,"title":"文字超出省略","slug":"文字超出省略","link":"#文字超出省略","children":[]},{"level":2,"title":"手写一个 getType 函数，获取详细的数据类型","slug":"手写一个-gettype-函数-获取详细的数据类型","link":"#手写一个-gettype-函数-获取详细的数据类型","children":[]},{"level":2,"title":"手写一个 new 对象的过程","slug":"手写一个-new-对象的过程","link":"#手写一个-new-对象的过程","children":[]},{"level":2,"title":"instanceof 原理是什么, 请用代码表示","slug":"instanceof-原理是什么-请用代码表示","link":"#instanceof-原理是什么-请用代码表示","children":[]},{"level":2,"title":"手写 bind 函数","slug":"手写-bind-函数","link":"#手写-bind-函数","children":[]},{"level":2,"title":"手写 call 和 apply","slug":"手写-call-和-apply","link":"#手写-call-和-apply","children":[]},{"level":2,"title":"遍历数组，生成 tree node","slug":"遍历数组-生成-tree-node","link":"#遍历数组-生成-tree-node","children":[]}],"git":{"createdTime":1705126883000,"updatedTime":1744124037000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":7.52,"words":2255},"filePathRelative":"OneMoreThing/interview/11.md","localizedDate":"2023年8月12日","excerpt":"<h2> 性能优化有哪些?</h2>\\n<p>性能优化一句话总结：是让「看到页面」这件事情尽量早、尽量轻、尽量流程。</p>\\n<p>可以分为六个方面:</p>\\n<ol>\\n<li>网络加载优化;</li>\\n<li>渲染层优化;</li>\\n<li>JavaScript 执行优化;</li>\\n<li>图片与资源优化;</li>\\n<li>构建层优化(webpack/vite)</li>\\n<li>用户体验提升优化(非性能指标，但影响观感)</li>\\n</ol>\\n<h3> 一、网络加载优化（资源到达浏览器前）</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>技术点</th>\\n<th>说明</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong>CDN</strong></td>\\n<td>加速静态资源分发</td>\\n</tr>\\n<tr>\\n<td><strong>HTTP/2 / HTTP/3</strong></td>\\n<td>多路复用、头部压缩</td>\\n</tr>\\n<tr>\\n<td><strong>Gzip / Brotli 压缩</strong></td>\\n<td>减小资源体积，默认推荐开启</td>\\n</tr>\\n<tr>\\n<td><strong>缓存策略</strong></td>\\n<td>强缓存（Cache-Control, Expires）<br>协商缓存（ETag, Last-Modified）</td>\\n</tr>\\n<tr>\\n<td><strong>懒加载（LazyLoad）</strong></td>\\n<td>图片、资源按需加载</td>\\n</tr>\\n<tr>\\n<td><strong>Preload / Prefetch / Preconnect</strong></td>\\n<td>提前加载关键资源、DNS 预解析</td>\\n</tr>\\n<tr>\\n<td><strong>代码拆分 / 按需加载</strong></td>\\n<td>不打大包，按路由/组件拆</td>\\n</tr>\\n<tr>\\n<td><strong>Tree Shaking</strong></td>\\n<td>移除未用的代码（ESM 前提）</td>\\n</tr>\\n<tr>\\n<td><strong>异步加载第三方脚本</strong></td>\\n<td><code>async</code> / <code>defer</code> 避免阻塞渲染</td>\\n</tr>\\n<tr>\\n<td><strong>资源合并</strong></td>\\n<td>图标合并（icon font / sprite），请求数更少</td>\\n</tr>\\n</tbody>\\n</table>"}');export{t as data};
