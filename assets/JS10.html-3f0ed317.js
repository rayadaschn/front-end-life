const a=JSON.parse('{"key":"v-19239574","path":"/JavaScript/JS/JS10.html","title":"简单手写 lazyMan","lang":"zh-CN","frontmatter":{"title":"简单手写 lazyMan","icon":"javascript","date":"2023-09-11T00:00:00.000Z","category":["javascript"],"tag":["javascript"],"sticky":false},"headers":[{"level":2,"title":"什么是 lazyMan?","slug":"什么是-lazyman","link":"#什么是-lazyman","children":[]},{"level":2,"title":"代码设计","slug":"代码设计","link":"#代码设计","children":[]}],"git":{"createdTime":1711950553000,"updatedTime":1738488663000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":1.94,"words":582},"filePathRelative":"JavaScript/JS/JS10.md","localizedDate":"2023年9月11日","excerpt":"<h2> 什么是 lazyMan?</h2>\\n<p>可以将 lazyMan 视为一个用于管理和按顺序执行任务的工具。它允许我们定义一系列任务，并确保它们按照特定的顺序执行。</p>\\n<p>假设你有一系列任务需要按照特定的顺序执行，比如先介绍自己的名字，然后睡觉一段时间，接着吃早餐，再睡一段时间，最后吃午餐。你可以使用 LazyMan 来管理这些任务的顺序执行。</p>\\n<p>首先，你创建一个 LazyMan 对象，并提供你的名字作为参数。然后你可以链式调用不同的方法来添加任务。例如，使用 sleepFirst 方法来指定首先要睡眠的时间，使用 eat 方法来指定要吃的食物，使用 sleep 方法来指定接下来的睡眠时间。</p>"}');export{a as data};
