const e=JSON.parse('{"key":"v-6983dde0","path":"/Framework/React/React04.html","title":"React之数据管理 Redux","lang":"zh-CN","frontmatter":{"title":"React之数据管理 Redux","icon":"react","date":"2023-03-23T00:00:00.000Z","category":["框架"],"tag":["React"],"star":true,"sticky":false},"headers":[{"level":2,"title":"JavaScript 中的纯函数","slug":"javascript-中的纯函数","link":"#javascript-中的纯函数","children":[]},{"level":2,"title":"JavaScript 中的副概念","slug":"javascript-中的副概念","link":"#javascript-中的副概念","children":[]},{"level":2,"title":"什么是 Redux?","slug":"什么是-redux","link":"#什么是-redux","children":[{"level":3,"title":"哪些数据需要 Redux 进行维护呢?","slug":"哪些数据需要-redux-进行维护呢","link":"#哪些数据需要-redux-进行维护呢","children":[]},{"level":3,"title":"Redux 的三大原则","slug":"redux-的三大原则","link":"#redux-的三大原则","children":[]},{"level":3,"title":"Redux 使用方法","slug":"redux-使用方法","link":"#redux-使用方法","children":[]},{"level":3,"title":"在组件中使用 Redux","slug":"在组件中使用-redux","link":"#在组件中使用-redux","children":[]},{"level":3,"title":"Redux 处理异步函数","slug":"redux-处理异步函数","link":"#redux-处理异步函数","children":[]},{"level":3,"title":"合并多个 Reducer 函数","slug":"合并多个-reducer-函数","link":"#合并多个-reducer-函数","children":[]},{"level":3,"title":"Redux 调试","slug":"redux-调试","link":"#redux-调试","children":[]}]},{"level":2,"title":"Redux 的终极用法","slug":"redux-的终极用法","link":"#redux-的终极用法","children":[{"level":3,"title":"createSlice 的使用","slug":"createslice-的使用","link":"#createslice-的使用","children":[]},{"level":3,"title":"最终实践","slug":"最终实践","link":"#最终实践","children":[]}]},{"level":2,"title":"Redux 之 Hooks","slug":"redux-之-hooks","link":"#redux-之-hooks","children":[{"level":3,"title":"useSelector","slug":"useselector","link":"#useselector","children":[]},{"level":3,"title":"useDispatch","slug":"usedispatch","link":"#usedispatch","children":[]},{"level":3,"title":"优化","slug":"优化","link":"#优化","children":[]}]}],"git":{"createdTime":1703991106000,"updatedTime":1735719245000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":7}]},"readingTime":{"minutes":29.22,"words":8766},"filePathRelative":"Framework/React/React04.md","localizedDate":"2023年3月23日","excerpt":"<h2> JavaScript 中的纯函数</h2>\\n<p>在 JavaScript 中，纯函数是指具有以下两个特性的函数：</p>\\n<ol>\\n<li>相同的输入总是返回相同的输出</li>\\n<li>函数执行期间没有副作用，也就是说它不会修改任何在函数作用域外部的状态，如全局变量、输入参数、引用参数等。</li>\\n</ol>\\n<p>因为纯函数的输出仅仅由输入决定，所以它们在并发编程和缓存数据等方面非常有用。由于不会修改外部状态，纯函数通常比有副作用的函数更容易测试、调试和优化。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">sum</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">a<span class=\\"token punctuation\\">,</span> b</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
