const e=JSON.parse('{"key":"v-0ae1a131","path":"/CSS/TailwindCSS02.html","title":"Tailwind 02 布局","lang":"zh-CN","frontmatter":{"title":"Tailwind 02 布局","date":"2023-06-26T00:00:00.000Z","icon":"style","category":["CSS"],"tag":["CSS"]},"headers":[{"level":2,"title":"总结规律","slug":"总结规律","link":"#总结规律","children":[]},{"level":2,"title":"容器","slug":"容器","link":"#容器","children":[]},{"level":2,"title":"Box Sizing 盒子模型","slug":"box-sizing-盒子模型","link":"#box-sizing-盒子模型","children":[]},{"level":2,"title":"Display 常用布局","slug":"display-常用布局","link":"#display-常用布局","children":[]},{"level":2,"title":"float 浮动","slug":"float-浮动","link":"#float-浮动","children":[]},{"level":2,"title":"Position 定位","slug":"position-定位","link":"#position-定位","children":[]},{"level":2,"title":"Top / Right / Bottom / Left","slug":"top-right-bottom-left","link":"#top-right-bottom-left","children":[]},{"level":2,"title":"visibility 可见性","slug":"visibility-可见性","link":"#visibility-可见性","children":[]},{"level":2,"title":"z-index 层叠顺序","slug":"z-index-层叠顺序","link":"#z-index-层叠顺序","children":[]},{"level":2,"title":"flex 弹性盒子","slug":"flex-弹性盒子","link":"#flex-弹性盒子","children":[{"level":3,"title":"父元素整体布局设置","slug":"父元素整体布局设置","link":"#父元素整体布局设置","children":[]},{"level":3,"title":"对齐特性","slug":"对齐特性","link":"#对齐特性","children":[]},{"level":3,"title":"flex 属性","slug":"flex-属性","link":"#flex-属性","children":[]},{"level":3,"title":"flex-grow 扩展属性","slug":"flex-grow-扩展属性","link":"#flex-grow-扩展属性","children":[]},{"level":3,"title":"flex-shrink 收缩属性","slug":"flex-shrink-收缩属性","link":"#flex-shrink-收缩属性","children":[]}]}],"git":{"createdTime":1687756767000,"updatedTime":1700986372000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":5}]},"readingTime":{"minutes":7.17,"words":2150},"filePathRelative":"CSS/TailwindCSS02.md","localizedDate":"2023年6月26日","excerpt":"<h1> Tailwind 布局</h1>\\n<blockquote>\\n<p>本节梳理记录一些 Tailwind 常用的布局书写方式。</p>\\n<p>内容较多，无需一次性全部记忆，但要有所印象。</p>\\n</blockquote>\\n<h2> 总结规律</h2>\\n<ul>\\n<li><code>box-sizing</code> 盒子模型：盒子模型以 <code>box</code> 开头表示盒子模型，而后跟随盒子模型的边界，如<code>box-border</code>表示以 border 为边界的盒子模型，对应<code>box-sizing: border-box;</code>;</li>\\n<li><code>display</code> 布局：除 <code>display: none</code> 的类名为 <code>hidden</code> 外，其余类名基本为 display 的取值本身。</li>\\n<li><code>float</code> 浮动：直接用 <code>-</code> 将 float 和取值进行连接即可，如 <code>float-left</code> 类名表示 <code>float: left;</code>。</li>\\n<li><code>position</code> 定位：position 的取值本身；</li>\\n<li>定位位置：通用公式为 <code>{top|right|bottom|left|inset}-{number}</code>，若是负值，减号在类名前面；</li>\\n<li>visibility 可见性：取值本身，直接写 <code>visible</code> 或 <code>invisible</code>；</li>\\n<li><code>z-index</code> 层叠顺序：通用公式为<code>z-{indexNumber}</code>，若为负则负号在前；</li>\\n<li><code>flex</code> 弹性盒子：\\n<ul>\\n<li>整体方向和是否换行，通用公式为 <code>flex-{direction|wrap}</code>；</li>\\n<li>content 的整体对齐方向布局，通用公式为 <code>{justify|content}-{value}</code> 分别表示 <code>justify-content</code> 水平方向整体布局和 <code>align-content</code> 垂直方向整体布局;</li>\\n<li>items 的单行沿容器垂直对齐方向，通用公式为 <code>item-{value}</code>；</li>\\n<li>align 的单个子项沿容器的垂直对齐方向，通用公式为 <code>align-{value}</code>；</li>\\n<li>flex 弹性缩放属性，通用公式为 <code>flex-{initial|0|none|1|auto}</code>；</li>\\n</ul>\\n</li>\\n</ul>"}');export{e as data};
