const e=JSON.parse(`{"key":"v-73f83c9a","path":"/%E6%A1%86%E6%9E%B6%E7%B1%BB/React01.html","title":"React 基础语法","lang":"en-US","frontmatter":{"title":"React 基础语法","icon":"react","category":["框架"],"tag":["React"],"star":true,"sticky":false,"description":"React 基础语法 今天开始学习 Reac 系列，先从最基本的语法入手。 本文的 React18 为基础学习（和早期版本略有不同），参考文档为官方文档。 开发依赖 开发React必须依赖三个核心库： react：包含 react 所必须的核心代码，包含 React Web 和 react-native 所共同拥有的代码； react-dom：react 渲染在不同平台所需要的核心代码，针对 web 和 native 所完成的事情不同： web 端：react-dom 会将 jsx 最终渲染成真实的 DOM，显示在浏览器中； native 端：react-dom 会将 jsx 最终渲染成原生的控件（如 Android 中的 Button，IOS 中的 UIButton）。 babel：将 jsx 转换为 React 代码的转换工具，可以将 ES6 等高级语法转换为大多数浏览器都支持的 ES5 语法。默认情况下，React 开发式不需要 babel 的，但是这时需要我们用 React.createElement 来编写代码，导致代码较为臃肿，且可读性较差。所以为了直接上手 jsx（JavaScript XML 语法），我们借助 babel 来帮助我们将 jsx 代码转换 React.createElement。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front-end-life/%E6%A1%86%E6%9E%B6%E7%B1%BB/React01.html"}],["meta",{"property":"og:site_name","content":"Huy's Blog"}],["meta",{"property":"og:title","content":"React 基础语法"}],["meta",{"property":"og:description","content":"React 基础语法 今天开始学习 Reac 系列，先从最基本的语法入手。 本文的 React18 为基础学习（和早期版本略有不同），参考文档为官方文档。 开发依赖 开发React必须依赖三个核心库： react：包含 react 所必须的核心代码，包含 React Web 和 react-native 所共同拥有的代码； react-dom：react 渲染在不同平台所需要的核心代码，针对 web 和 native 所完成的事情不同： web 端：react-dom 会将 jsx 最终渲染成真实的 DOM，显示在浏览器中； native 端：react-dom 会将 jsx 最终渲染成原生的控件（如 Android 中的 Button，IOS 中的 UIButton）。 babel：将 jsx 转换为 React 代码的转换工具，可以将 ES6 等高级语法转换为大多数浏览器都支持的 ES5 语法。默认情况下，React 开发式不需要 babel 的，但是这时需要我们用 React.createElement 来编写代码，导致代码较为臃肿，且可读性较差。所以为了直接上手 jsx（JavaScript XML 语法），我们借助 babel 来帮助我们将 jsx 代码转换 React.createElement。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-03-24T13:50:58.000Z"}],["meta",{"property":"article:tag","content":"React"}],["meta",{"property":"article:modified_time","content":"2023-03-24T13:50:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"React 基础语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-24T13:50:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"开发依赖","slug":"开发依赖","link":"#开发依赖","children":[]},{"level":2,"title":"Hello World","slug":"hello-world","link":"#hello-world","children":[]},{"level":2,"title":"组件化","slug":"组件化","link":"#组件化","children":[]}],"git":{"createdTime":1679665858000,"updatedTime":1679665858000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.05,"words":1215},"filePathRelative":"框架类/React01.md","localizedDate":"March 24, 2023","excerpt":"<h1> React 基础语法</h1>\\n<blockquote>\\n<p>今天开始学习 Reac 系列，先从最基本的语法入手。</p>\\n<p>本文的 React18 为基础学习（和早期版本略有不同），参考文档为<a href=\\"https://react.dev/learn\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a>。</p>\\n</blockquote>\\n<h2> 开发依赖</h2>\\n<p>开发React必须依赖三个核心库：</p>\\n<ul>\\n<li>react：包含 react 所必须的核心代码，包含 React Web 和 react-native 所共同拥有的代码；</li>\\n<li>react-dom：react 渲染在不同平台所需要的核心代码，针对 web 和 native 所完成的事情不同：\\n<ul>\\n<li>web 端：react-dom 会将 jsx 最终渲染成真实的 DOM，显示在浏览器中；</li>\\n<li>native 端：react-dom 会将 jsx 最终渲染成原生的控件（如 Android 中的 Button，IOS 中的 UIButton）。</li>\\n</ul>\\n</li>\\n<li>babel：将 jsx 转换为 React 代码的转换工具，可以将 ES6 等高级语法转换为大多数浏览器都支持的 ES5 语法。默认情况下，React 开发式不需要 babel 的，但是这时需要我们用 <code>React.createElement</code> 来编写代码，导致代码较为臃肿，且可读性较差。所以为了直接上手 jsx（JavaScript XML 语法），我们借助 babel 来帮助我们将 jsx 代码转换 <code>React.createElement</code>。</li>\\n</ul>","autoDesc":true}`);export{e as data};
