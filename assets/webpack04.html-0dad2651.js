import{_ as t,Z as o,a0 as c,F as l,a1 as i,X as r,Y as u,$ as d}from"./framework-97fa2d96.js";const k={},n=o,s=c,m=l,e=i,p=d,v=r,b=u,g=n("h2",{id:"terser-js-压缩",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#terser-js-压缩","aria-hidden":"true"},"#"),s(" Terser JS 压缩")],-1),y=n("p",null,"在 webpack 的优化(Optimization)选项中，还有俩个选择：",-1),h=n("code",null,"optimization.minimize",-1),f={href:"https://webpack.docschina.org/plugins/terser-webpack-plugin/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://webpack.docschina.org/configuration/optimization/#optimizationminimizer",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"optimization.minimizer",-1),_=n("code",null,"optimization.minimizer",-1),T=n("code",null,"[TerserPlugin]",-1),z=n("code",null,"[function (compiler)]",-1),S={href:"https://webpack.docschina.org/plugins/terser-webpack-plugin/",target:"_blank",rel:"noopener noreferrer"},P=p(`<p>TerserPlugin 形式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">minimize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">parallel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">terserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token comment">// https://github.com/webpack-contrib/terser-webpack-plugin#terseroptions</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或函数形式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">minimize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token comment">/* 你的配置 */</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>compiler<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),j={href:"https://terser.org/docs/cli-usage",target:"_blank",rel:"noopener noreferrer"},H=p(`<ul><li><strong>Compress option</strong>： <ul><li><code>arrows</code>：class 或者 object 中的函数，转换成箭头函数；</li><li><code>arguments</code>：将函数中使用 <code>arguments[index]</code>转成对应的形参名称；</li><li><code>dead_code</code>：移除不可达的代码（tree shaking）。如永远为 false 的 if 判断函数。</li></ul></li><li><strong>Mangle option</strong>： <ul><li><code>toplevel</code>：默认值是<code>false</code>，顶层作用域中的变量名称，进行丑化（转换）；</li><li><code>keep_classnames</code>：默认值是<code>false</code>，是否保持依赖的类名称;</li><li><code>keep_fnames</code>：默认值是<code>false</code>，是否保持原来的函数名称;</li></ul></li></ul><blockquote><p>在 terser 中，compress 和 mangle 都是优化 JavaScript 代码的选项。</p><p>compress 选项用于压缩代码并删除没有实际用处的部分，例如空格、注释和未使用的变量。这可以减小代码文件的大小，并帮助加快加载时间。</p><p>而 mangle 选项则用于混淆代码中的变量名，将变量名替换为更短的名称。这可以进一步减小生成的代码文件的大小，并防止他人轻易地读懂和修改代码。</p></blockquote><p>在 webpack 中进行配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">minimize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">(</span><span class="token parameter">compiler</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token comment">/* 你的配置 */</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>compiler<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-压缩" tabindex="-1"><a class="header-anchor" href="#css-压缩" aria-hidden="true">#</a> CSS 压缩</h2><p>除了基本的 JS 压缩外，还可对代码的 CSS 进行压缩。</p><ul><li>CSS 压缩通常是去除无用的空格等，因为很难去修改选择器、属性的名称、值等；</li><li>CSS 的压缩我们可以使用另外一个插件：<code>css-minimizer-webpack-plugin</code>；</li><li><code>css-minimizer-webpack-plugin</code> 是使用 cssnano 工具来优化、压缩 CSS（也可以单独使用）;</li></ul><p>使用步骤：</p><ol><li><p>安装 <code>css-minimizer-webpack-plugin</code> ：<code>npm run css-minimizer-webpack-plugin -D</code> ；</p></li><li><p>在 webpack 中的 <code>optimization.minimizer</code> 进行相应配置：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>
<span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;terser-webpack-plugin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;css-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">minimize</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minimizer</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">parallel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token comment">// other ....</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">parallel</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>此外，在 CSS 中还可用 Tree Shaking 进行优化，有俩种方案：</p><ul><li><code>usedExports</code>：通过标记某些函数是否被使用，之后通过 Terser 来进行优化的；</li><li><code>sideEffects</code>：跳过整个模块/文件，直接查看该文件是否有副作用；</li></ul><h3 id="usedexportd-配置" tabindex="-1"><a class="header-anchor" href="#usedexportd-配置" aria-hidden="true">#</a> usedExportd 配置</h3><p><code>optimization.usedExports</code> 是 Webpack 中的一个优化配置项，用于启用或禁用 Tree Shaking 功能。Tree Shaking 是一种通过静态分析代码中未使用的部分，并将其从最终包中删除的优化技术。</p><p>取值范围： <code>boolean = truestring: &#39;global&#39;</code></p><p>当 <code>usedExports</code> 配置为 <code>true</code> 时，Webpack 将检测代码中的所有导出，并确定哪些导出实际上被使用了。然后，Webpack 只会在最终包中包含那些被使用的导出，而将未使用的导出从最终包中删除。</p><p>这样可以减小最终包的大小，并加快应用程序的加载速度。但是，如果某些导出仅在代码中动态使用（例如通过反射或字符串拼接），则可能会出现问题，因为 Webpack 在这种情况下无法静态分析代码并确定哪些导出实际上被使用。</p><p>因此，在使用 <code>usedExports</code> 时，需要根据具体情况谨慎选择是否启用，以确保不会意外删除必要的代码。</p><blockquote><p>实际上，开启此选项会在相关代码中增加魔法注释：“unused harmony export mul”，意为告知 Terser 在优化时，可以删除这段代码。</p></blockquote><p>此外，当 <code>usedExports</code> 配置为 <code>true</code> 时，Webpack 将只考虑当前模块内部的导出，并且只会将被使用的导出包含在构建结果中。</p><p>而当 <code>usedExports</code> 配置为 <code>&#39;global&#39;</code> 时，Webpack 将会遍历整个项目并找到所有被使用的导出，然后将这些导出包含在构建结果中。这个过程需要更长的时间，但可以确保每个文件都被正确地优化。</p><p>因此，如果应用程序是一个单页应用程序，或者只有少量的入口文件和<strong>依赖项（第三方包）</strong>，那么将 <code>usedExports</code> 配置为 <code>true</code> 可能是更好的选择，因为它可以更快地完成构建过程。</p><p>但是，如果应用程序比较复杂，有许多入口文件和依赖项，并且想要最大限度地减小打包后的文件大小，则可以将 <code>usedExports</code> 配置为 <code>&#39;global&#39;</code>，以确保每个文件都被正确地优化。</p><h3 id="sideeffects-副作用配置" tabindex="-1"><a class="header-anchor" href="#sideeffects-副作用配置" aria-hidden="true">#</a> sideEffects 副作用配置</h3><p>在 Webpack 中，副作用是指模块中的一些代码会影响到其它模块或全局环境，而这些影响不能通过静态分析来检测和优化。例如，在某个模块中调用了全局函数，可能会影响该函数在其他地方的行为。</p><p>在默认情况下，Webpack 会假定所有代码都具有副作用，因此不会将未使用的导出删除。但是，如果确定某个模块中的代码没有副作用，则可以使用 Webpack 的 <code>sideEffects</code> 配置项来告诉 Webpack 这些信息，以便在 Tree Shaking 时进行更精确的判断。</p><p><code>sideEffects</code> 可以是以下几种类型之一：</p><ul><li><code>false</code>：表示模块中不含有任何副作用，所有代码都可以被安全地删除。</li><li><code>true</code>：表示模块中有副作用，不能被删除。</li><li>数组：包含了一些特定的文件路径和/或通配符模式，可以指定哪些文件或目录中的代码具有副作用。</li></ul><p>例如，如果想要告诉 Webpack 在使用 Tree Shaking 时忽略 Lodash 的副作用，则可以将 <code>sideEffects</code> 配置为一个数组，并将 Lodash 的路径添加到其中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...其他配置项</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">usedExports</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 只有 Lodash 中的某些方法会有副作用</span>
  <span class="token comment">// 因此，我们可以使用数组来指定哪些文件或目录中的代码具有副作用</span>
  <span class="token comment">// 注意：该配置仅在 mode 设置为 production 时生效</span>
  <span class="token literal-property property">sideEffects</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lodash/includes.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lodash/isEmpty.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，<code>sideEffects</code> 的配置项仅在 Webpack 的 production 模式下才会生效。在 development 模式下，Webpack 默认会假设所有代码都具有副作用，并且不会进行 Tree Shaking。因此，默认情况下，开发模式下的打包结果更大，但构建速度更快。</p><h3 id="css-实现-tree-shaking" tabindex="-1"><a class="header-anchor" href="#css-实现-tree-shaking" aria-hidden="true">#</a> CSS 实现 Tree Shaking</h3>`,31),M={href:"https://www.purgecss.cn/plugins/webpack/",target:"_blank",rel:"noopener noreferrer"},W=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$: <span class="token function">npm</span> <span class="token function">install</span> purgecss-webpack-plugin <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在生产环境配置插件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js</span>

<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> glob <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;glob&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-css-extract-plugin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> PurgecssPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;purgecss-webpack-plugin&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token constant">PATHS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">src</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">optimization</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">styles</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;styles&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
          <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">enforce</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;[name].css&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">PurgecssPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">paths</span><span class="token operator">:</span> glob<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PATHS</span><span class="token punctuation">.</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/**/*</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">nodir</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="html-压缩" tabindex="-1"><a class="header-anchor" href="#html-压缩" aria-hidden="true">#</a> HTML 压缩</h2><p>HTTP 压缩是一种内置在 服务器 和 客户端 之间的，以改进传输速度和带宽利用率的方式。旨在通过消除不必要的空格、注释和其他冗余内容来提高页面加载速度。在 Webpack 中使用 <code>html-webpack-plugin</code> 插件可以很容易地实现 HTML 压缩。</p><p>以下是一个示例 Webpack 配置，展示了如何在生产模式下使用 <code>html-webpack-plugin</code> 和 <code>html-minifier-terser</code> 插件对 HTML 文件进行压缩：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> HtmlMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-minimizer-webpack-plugin&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;path/to/template.html&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">collapseWhitespace</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">removeRedundantAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">removeScriptTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">removeStyleLinkTypeAttributes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">useShortDoctype</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">HtmlMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码中，我们首先导入了 <code>html-webpack-plugin</code> 和 <code>html-minimizer-webpack-plugin</code> 模块，并将它们添加到 Webpack 配置文件的 <code>plugins</code> 数组中。</p><p>然后，我们配置了 <code>HtmlWebpackPlugin</code> 插件，指定了要使用的 HTML 模板文件的路径以及要应用于 HTML 压缩的选项。这些选项包括：</p><ul><li><code>collapseWhitespace</code>: 删除 HTML 中的空格。</li><li><code>removeComments</code>: 删除注释。</li><li><code>removeRedundantAttributes</code>: 删除 HTML 中的冗余属性。</li><li><code>removeScriptTypeAttributes</code>: 删除 <code>&lt;script&gt;</code> 标签中的 <code>type</code> 属性。</li><li><code>removeStyleLinkTypeAttributes</code>: 删除 <code>&lt;style&gt;</code> 和 <code>&lt;link&gt;</code> 标签中的 <code>type</code> 属性。</li><li><code>useShortDoctype</code>: 在 HTML5 中使用短文档类型声明。</li></ul><p>最后，我们使用 <code>HtmlMinimizerPlugin</code> 插件对压缩后的 HTML 文件进行进一步优化。该插件使用 <code>html-minifier-terser</code> 模块将 HTML 文件压缩为最小体积。</p><blockquote><p><code>HtmlWebpackPlugin</code> 用于生成 HTML 文件，并将打包后的 JavaScript 和 CSS 资源自动注入到 HTML 文件中。它可以从一个模板文件中生成 HTML 文件，并支持多个 HTML 文件的生成。此外，<code>HtmlWebpackPlugin</code> 还提供了一些选项和钩子函数，使用户能够对生成的 HTML 文件进行自定义设置，例如支持不同模板文件、HTML 压缩、多语言配置等。</p><p><code>HtmlMinimizerPlugin</code> 和 <code>CompressionPlugin</code> 都是 Webpack 中用于减小文件体积的插件，但它们的作用和处理对象是不同的。</p><p><code>HtmlMinimizerPlugin</code> 用于压缩 HTML 文件，可以消除不必要的空格、注释和其他冗余内容，从而减小文件大小并加速页面加载速度。通常情况下，它会与 <code>html-webpack-plugin</code> 插件联合使用，在 Webpack 打包过程中自动压缩生成的 HTML 文件。</p><p><code>CompressionPlugin</code> 用于在 Webpack 打包完成后对 JavaScript、CSS 和其他资源文件进行 gzip 压缩，并生成相应的 <code>.gz</code> 文件。这样可以减小浏览器下载这些文件的时间，并节省网络带宽和服务器资源。通常情况下，它会与 Web 服务器一起使用，并在客户端请求文件时自动返回相应的压缩文件。</p><p>需要注意的是，使用 <code>CompressionPlugin</code> 进行 gzip 压缩时需要确保 Web 服务器支持该压缩格式，并且在服务器配置中启用了相应的选项。例如，在 Apache 服务器上，需要使用 <code>mod_deflate</code> 模块来启用 gzip 压缩。</p></blockquote>`,12);function E(L,C){const a=m("ExternalLinkIcon");return v(),b("div",null,[g,y,n("ul",null,[n("li",null,[h,s(": Boolean，告知 webpack 是否使用 "),n("a",f,[s("TerserPlugin"),e(a)]),s(" 或其它在 "),n("a",w,[x,e(a)]),s("定义的插件压缩 bundle。")]),n("li",null,[_,s(": "),T,s(" 或 "),z,s("，允许你通过提供一个或多个定制过的 "),n("a",S,[s("TerserPlugin"),e(a)]),s(" 实例，覆盖默认压缩工具(minimizer)。")])]),P,n("p",null,[s("一些重要的配置，详细配置可看"),n("a",j,[s("官方文档"),e(a)]),s("：")]),H,n("p",null,[s("需要安装 "),n("a",M,[s("PurgeCss"),e(a)]),s(" 的 webpack 插件：")]),W])}const A=t(k,[["render",E],["__file","webpack04.html.vue"]]);export{A as default};
