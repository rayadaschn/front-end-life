const e=JSON.parse(`{"key":"v-097969ef","path":"/JavaScript/Node/Node15.html","title":"Node 中一些方法","lang":"zh-CN","frontmatter":{"title":"Node 中一些方法","icon":"nodeJS","date":"2025-06-22T00:00:00.000Z","category":["javascript"],"tag":["node"]},"headers":[{"level":2,"title":"process 模块","slug":"process-模块","link":"#process-模块","children":[{"level":3,"title":"进程对象属性","slug":"进程对象属性","link":"#进程对象属性","children":[]},{"level":3,"title":"进程方法","slug":"进程方法","link":"#进程方法","children":[]}]},{"level":2,"title":"子进程 child_process 模块","slug":"子进程-child-process-模块","link":"#子进程-child-process-模块","children":[{"level":3,"title":"spawn 衍生方法","slug":"spawn-衍生方法","link":"#spawn-衍生方法","children":[]},{"level":3,"title":"exec 同步开启子进程","slug":"exec-同步开启子进程","link":"#exec-同步开启子进程","children":[]},{"level":3,"title":"execFile 开启子进程","slug":"execfile-开启子进程","link":"#execfile-开启子进程","children":[]}]}],"git":{"createdTime":1751469766000,"updatedTime":1751469766000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":5.44,"words":1633},"filePathRelative":"JavaScript/Node/Node15.md","localizedDate":"2025年6月22日","excerpt":"<p>本文用于记录常用 Node 的一些方法，方便记忆。</p>\\n<h2> <code>process</code> 模块</h2>\\n<p><code>process</code> 在<code>Node.js</code>中每个应用程序都是一个进程类的<strong>实例对象</strong>。</p>\\n<p>使用<code>process</code>对象代表该应用程序,这是一个全局对象，可以通过它来获取<code>Node.js</code>应用程序以及运行该程序的用户、环境等各种信息的属性、方法和事件。</p>\\n<h3> 进程对象属性</h3>\\n<ul>\\n<li>\\n<p><code>execPath</code> 可执行文件的绝对路径,如 <code>/usr/local/bin/node</code></p>\\n</li>\\n<li>\\n<p><code>version</code> 版本号</p>\\n</li>\\n<li>\\n<p><code>versions</code> 依赖库的版本号</p>\\n</li>\\n<li>\\n<p><code>platform</code> 运行平台。 如 <code>darwin</code>、<code>freebsd</code>、<code>linux</code>、<code>sunos</code>、<code>win32</code></p>\\n</li>\\n<li>\\n<p><code>stdin</code> 标准输入流可读流，默认暂停状态</p>\\n</li>\\n<li>\\n<p><code>stdout</code> 标准输出可写流，同步操作</p>\\n</li>\\n<li>\\n<p><code>stderr</code> 错误输出可写流，同步操作</p>\\n</li>\\n<li>\\n<p><code>argv</code> 属性值为数组。\\n如 <code>node your-script.js arg1 arg2 arg3</code>, 则 :</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>process<span class=\\"token punctuation\\">.</span>argv<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 输出结果为:</span>\\n<span class=\\"token punctuation\\">[</span>\\n  <span class=\\"token string\\">'/usr/local/bin/node'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// process.argv[0]：Node 可执行文件路径</span>\\n  <span class=\\"token string\\">'/path/to/your-script.js'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// process.argv[1]：你运行的脚本路径</span>\\n  <span class=\\"token string\\">'arg1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 从 argv[2] 开始是你传的参数</span>\\n  <span class=\\"token string\\">'arg2'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token string\\">'arg3'</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><code>env</code> 操作系统环境信息</p>\\n</li>\\n<li>\\n<p><code>pid</code> 应用程序进程 ID</p>\\n</li>\\n<li>\\n<p><code>title</code> 窗口标题</p>\\n</li>\\n<li>\\n<p><code>arch</code> 处理器架构 <code>arm</code>、<code>ia32</code>、<code>x64</code></p>\\n</li>\\n</ul>"}`);export{e as data};
