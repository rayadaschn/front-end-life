import{_ as n,X as s,Y as a,$ as t}from"./framework-5dd7fabc.js";const e={},p=t,c=s,o=a,i=p(`<p>因为工作需要，需要用 jQuery 写一些 Demo 页面。但此前只会用框架或元素 js 写法去渲染页面，对于 jQuery 一直是半吊子。因此打算花点时间快速学习一下这个前端老前辈。</p><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202408171849955.png" alt="Jquery" tabindex="0" loading="lazy"><figcaption>Jquery</figcaption></figure><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>jQuery 是一个 JavaScript 库，简化了 HTML 文档遍历、事件处理、动画和 Ajax 交互。</p><p>jQuery 的核心特性：</p><ul><li>选择器：jQuery 提供了强大的选择器功能，可以方便地选择 HTML 元素。</li><li>DOM 操作：jQuery 提供了丰富的 DOM 操作方法，可以方便地修改 HTML 元素的内容、属性和样式。</li><li>事件处理：jQuery 提供了简单的事件处理方法，可以方便地绑定事件处理程序。</li><li>动画效果：jQuery 提供了丰富的动画效果，可以方便地实现元素的动画效果。</li><li>Ajax 交互：jQuery 提供了简单易用的 Ajax 交互方法，可以方便地实现与服务器的异步通信。</li></ul><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h2><h3 id="引入-jquery" tabindex="-1"><a class="header-anchor" href="#引入-jquery" aria-hidden="true">#</a> 引入 jQuery</h3><p>在 HTML 文件中引入 jQuery 库，可以通过以下方式：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 通过 CDN 引入 jQuery --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 通过本地文件引入 jQuery --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>path/to/jquery.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="入口函数" tabindex="-1"><a class="header-anchor" href="#入口函数" aria-hidden="true">#</a> 入口函数</h3><p>在 jQuery 中，可以使用 <code>$(document).ready()</code> 方法来代替传统的 <code>window.onload</code> 事件，确保在 DOM 完全加载后再执行代码。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在这里编写 jQuery 代码</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="顶级对象" tabindex="-1"><a class="header-anchor" href="#顶级对象" aria-hidden="true">#</a> 顶级对象<code>$</code></h3><p>jQuery 的顶级对象是 <code>$</code>，它是一个函数，可以用来选择元素、绑定事件、执行动画等。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;selector&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 绑定事件</span>
$element<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在这里编写事件处理程序</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 执行动画</span>
$element<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的是，<code>$</code> 获取的元素对象是 jQuery 对象，而不是原生的 DOM 对象。jQuery 对象提供了一些额外的方法和属性，可以方便地操作元素。</p><p>因此，一般需要先将 DOM 对象转换为 jQuery 对象，可以使用 <code>$(DOMElement)</code> 方法。在 chrome 浏览器中，打断点获取到的 DOM 对象为 string 类型，这并不是 DOM 对象。</p><h2 id="选择器" tabindex="-1"><a class="header-anchor" href="#选择器" aria-hidden="true">#</a> 选择器</h2><p>jQuery 提供了丰富的选择器，可以方便地选择 HTML 元素。</p><h3 id="基本选择器" tabindex="-1"><a class="header-anchor" href="#基本选择器" aria-hidden="true">#</a> 基本选择器</h3><ul><li><code>#id</code>：选择具有指定 id 的元素。</li><li><code>.class</code>：选择具有指定 class 的元素。</li><li><code>element</code>：选择具有指定标签名的元素。</li><li><code>*</code>：选择所有元素。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择 id 为 &quot;myElement&quot; 的元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 选择 class 为 &quot;myClass&quot; 的元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;.myClass&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 选择标签名为 &quot;div&quot; 的元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 选择所有元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="层级选择器" tabindex="-1"><a class="header-anchor" href="#层级选择器" aria-hidden="true">#</a> 层级选择器</h3><ul><li><code>ancestor descendant</code>：选择祖先元素的所有后代元素。</li><li><code>parent &gt; child</code>：选择父元素的所有直接子元素。</li><li><code>prev + next</code>：选择紧接在 prev 元素后的 next 元素。</li><li><code>prev ~ siblings</code>：选择 prev 元素后面的所有兄弟元素。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择 id 为 &quot;myElement&quot; 的元素的所有后代元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement descendant&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 选择 id 为 &quot;myElement&quot; 的元素的直接子元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement &gt; child&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 选择紧接在 id 为 &quot;prevElement&quot; 的元素后的 id 为 &quot;nextElement&quot; 的元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#prevElement + #nextElement&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 选择 id 为 &quot;prevElement&quot; 的元素后面的所有兄弟元素</span>
<span class="token keyword">var</span> $element <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#prevElement ~ siblings&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链式编程" tabindex="-1"><a class="header-anchor" href="#链式编程" aria-hidden="true">#</a> 链式编程</h2><p>jQuery 支持链式编程，可以在一行代码中连续调用多个方法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 选择 id 为 &quot;myElement&quot; 的元素，并设置其背景颜色为红色，然后添加一个点击事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&#39;background-color&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在这里编写事件处理程序</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="操作元素" tabindex="-1"><a class="header-anchor" href="#操作元素" aria-hidden="true">#</a> 操作元素</h2><p>jQuery 提供了一些方法，可以方便地操作 HTML 元素。</p><h3 id="获取和设置属性" tabindex="-1"><a class="header-anchor" href="#获取和设置属性" aria-hidden="true">#</a> 获取和设置属性</h3><p>元素属性分为俩种，一种是固有属性（Property），即元素本身自带的属性；还有一种是自定义属性（Attribute），即用户自定义的属性。俩种的获取和设备方法也不同。</p><ul><li><code>prop(name)</code>：获取固有指定属性的值。</li><li><code>prop(name, value)</code>：设置固有指定属性的值。</li><li><code>removeProp(name)</code>：移除固有指定属性。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 id 为 &quot;myElement&quot; 的元素的 checked 属性值</span>
<span class="token keyword">var</span> checked <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 设置 id 为 &quot;myElement&quot; 的元素的 checked 属性值为 true</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&#39;checked&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token comment">// 移除 id 为 &quot;myElement&quot; 的元素的 checked 属性</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeProp</span><span class="token punctuation">(</span><span class="token string">&#39;checked&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>attr(name)</code>：获取自定义指定属性的值。</li><li><code>attr(name, value)</code>：设置自定义指定属性的值。</li><li><code>removeAttr(name)</code>：移除自定义指定属性。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 id 为 &quot;myElement&quot; 的元素的 href 属性值</span>
<span class="token keyword">var</span> href <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 设置 id 为 &quot;myElement&quot; 的元素的 href 属性值为 &quot;https://www.example.com&quot;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://www.example.com&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 移除 id 为 &quot;myElement&quot; 的元素的 href 属性</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取和设置内容" tabindex="-1"><a class="header-anchor" href="#获取和设置内容" aria-hidden="true">#</a> 获取和设置内容</h3><ul><li><code>html()</code>：获取元素的 HTML 内容，包括子元素的 HTML 标签，相当于原生的 innerHTML 属性。</li><li><code>html(value)</code>：设置元素的 HTML 内容。</li><li><code>text()</code>：获取元素的文本内容。</li><li><code>text(value)</code>：设置元素的文本内容。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 id 为 &quot;myElement&quot; 的元素的 HTML 内容</span>
<span class="token keyword">var</span> htmlContent <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 设置 id 为 &quot;myElement&quot; 的元素的 HTML 内容为 &quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Hello, World!&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 获取 id 为 &quot;myElement&quot; 的元素的文本内容</span>
<span class="token keyword">var</span> textContent <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 设置 id 为 &quot;myElement&quot; 的元素的文本内容为 &quot;Hello, World!&quot;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, World!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取和设置样式" tabindex="-1"><a class="header-anchor" href="#获取和设置样式" aria-hidden="true">#</a> 获取和设置样式</h3><ul><li><code>css(name)</code>：获取指定样式的值。</li><li><code>css(name, value)</code>：设置指定样式的值。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取 id 为 &quot;myElement&quot; 的元素的背景颜色</span>
<span class="token keyword">var</span> backgroundColor <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&#39;background-color&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 设置 id 为 &quot;myElement&quot; 的元素的背景颜色为红色</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&#39;background-color&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 一次设置多组样式</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&#39;background-color&#39;</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;font-size&#39;</span><span class="token operator">:</span> <span class="token string">&#39;16px&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加和移除类" tabindex="-1"><a class="header-anchor" href="#添加和移除类" aria-hidden="true">#</a> 添加和移除类</h3><ul><li><code>addClass(className)</code>：添加指定类。</li><li><code>removeClass(className)</code>：移除指定类。</li><li><code>toggleClass(className)</code>：切换指定类（存在则移除，不存在则添加）。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 添加 id 为 &quot;myElement&quot; 的元素的 active 类</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 移除 id 为 &quot;myElement&quot; 的元素的 active 类</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 切换 id 为 &quot;myElement&quot; 的元素的 active 类，存在则移除，不存在则添加</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">&#39;active&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="操作-dom-元素" tabindex="-1"><a class="header-anchor" href="#操作-dom-元素" aria-hidden="true">#</a> 操作 DOM 元素</h3><ul><li><code>append(content)</code>：在元素内部末尾添加内容。</li><li><code>appendChild(content)</code>：在元素内部末尾添加内容。</li><li><code>prepend(content)</code>：在元素内部开头添加内容。</li><li><code>before(content)</code>：在元素外部之前添加内容。</li><li><code>after(content)</code>：在元素外部之后添加内容。</li><li><code>remove()</code>：移除元素。</li><li><code>empty()</code>：清空元素内容。</li><li><code>each()</code>：遍历元素，并对每个元素执行指定的函数。 <ol><li><code>$(selector).each(function(index, element){})</code>，遍历元素，并传入索引和元素本身；</li><li><code>$(selector).each(function(index){})</code></li><li><code>$.each(object, function(index, value){})</code>，遍历对象；</li><li><code>$.each(array, function(index, value){})</code>，遍历数组。</li></ol></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在 id 为 &quot;myElement&quot; 的元素内部末尾添加一个 &lt;p&gt; 元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Hello, World!&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 在 id 为 &quot;myElement&quot; 的元素内部开头添加一个 &lt;p&gt; 元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Hello, World!&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 在 id 为 &quot;myElement&quot; 的元素外部之前添加一个 &lt;p&gt; 元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Hello, World!&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 在 id 为 &quot;myElement&quot; 的元素外部之后添加一个 &lt;p&gt; 元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Hello, World!&lt;/p&gt;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 移除 id 为 &quot;myElement&quot; 的元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 清空 id 为 &quot;myElement&quot; 的元素内容</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 遍历 id 为 &quot;myElement&quot; 的元素，并对每个元素执行指定的函数</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在这里编写函数体</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事件处理" tabindex="-1"><a class="header-anchor" href="#事件处理" aria-hidden="true">#</a> 事件处理</h3><ul><li><code>on(events, selector, data, handler)</code>：绑定事件。</li><li><code>off(events, selector, handler)</code>：解绑事件。</li><li><code>one(events, selector, data, handler)</code>：绑定一次性事件。</li><li><code>trigger(event, extraParameters)</code>：触发事件。</li><li><code>triggerHandler(event, extraParameters)</code>：触发事件，并返回事件处理函数的返回值。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 绑定 id 为 &quot;myElement&quot; 的元素的 click 事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在这里编写事件处理函数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 批量绑定 id 为 &quot;myElement&quot; 的元素的 click 和 mouseover 事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在这里编写 click 事件处理函数</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">mouseover</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在这里编写 mouseover 事件处理函数</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 解绑 id 为 &quot;myElement&quot; 的元素的 click 事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 绑定 id 为 &quot;myElement&quot; 的元素的 click 事件，只执行一次</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 在这里编写事件处理函数</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 触发 id 为 &quot;myElement&quot; 的元素的 click 事件</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 触发 id 为 &quot;myElement&quot; 的元素的 click 事件，并传递额外的参数</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;param1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;param2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>手动触发事件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 类似原生触发</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// jQuery 触发</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 阻止事件冒泡</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&#39;#myElement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,54),l=[i];function u(d,r){return c(),o("div",null,l)}const m=n(e,[["render",u],["__file","JS28.html.vue"]]);export{m as default};
