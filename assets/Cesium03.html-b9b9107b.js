import{_ as e,Z as t,F as p,a1 as o,a0 as c,X as i,Y as l,$ as u}from"./framework-5dd7fabc.js";const r={},s=t,k=p,d=o,n=c,m=u,v=i,g=l,b=s("p",null,"在上一节，介绍了 cesium 的开发环境配置，在本小节中将在前文的基础上开发第一个 cesium 应用。",-1),y={href:"https://cesium.com/",target:"_blank",rel:"noopener noreferrer"},h=m(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>若开发过程中不展现三维地图，或者控制台报错找不到 API key 或 Invalid access token 等，都是因为令牌 token 未配置好的缘故。</p><p>本项目中的 token 文件未被 git 追踪，请自行申请。</p></div><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202406011540244.png" alt="Token 过期" tabindex="0" loading="lazy"><figcaption>Token 过期</figcaption></figure><h2 id="开发第一个-cesium-应用" tabindex="-1"><a class="header-anchor" href="#开发第一个-cesium-应用" aria-hidden="true">#</a> 开发第一个 cesium 应用</h2><p>首先在页面定义一个铺满整个屏幕的 div 元素，并设置其 id 为 <code>cesiumContainer</code>，在 vue 中要获取到该元素则需要额外挂载 <code>ref</code>。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cesium-viewer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewerDivRef<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">#cesium-viewer</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再创建一个 Cesium 实例，挂载到 <code>ref</code> 定义的 div 元素上。便可以在页面中看到一个三维地球了。值得注意的是，在 vue 中，Cesium 实例的挂载要在 <code>onMounted</code> 生命周期函数中进行（created 时，元素还未创建，无法挂载）。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Ion<span class="token punctuation">,</span> Viewer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cesium&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;cesium/Build/CesiumUnminified/Widgets/widgets.css&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">CESIUM_TOKEN</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/const&#39;</span>

<span class="token keyword">const</span> viewerDivRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token doc-comment comment">/** cesium Token */</span>
Ion<span class="token punctuation">.</span>defaultAccessToken <span class="token operator">=</span> <span class="token constant">CESIUM_TOKEN</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Viewer</span><span class="token punctuation">(</span>viewerDivRef<span class="token punctuation">.</span>value <span class="token keyword">as</span> HTMLElement<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;🚀 ~ onMounted ~ viewer:&#39;</span><span class="token punctuation">,</span> viewer<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cesium-viewer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewerDivRef<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">#cesium-viewer</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202406011555945.png" alt="初始 Cesium 应用" tabindex="0" loading="lazy"><figcaption>初始 Cesium 应用</figcaption></figure><h2 id="开发基础" tabindex="-1"><a class="header-anchor" href="#开发基础" aria-hidden="true">#</a> 开发基础</h2><p>本节将迅速过一遍 Cesium 开发的基础知识，以便开发者能够快速上手。</p><h3 id="cesium-核心类" tabindex="-1"><a class="header-anchor" href="#cesium-核心类" aria-hidden="true">#</a> Cesium 核心类</h3><ol><li>Viewer：三维地球的容器，是 Cesium 应用的核心类。</li><li>Scene：场景，是三维地球的容器，包含相机、光源、渲染器等。</li><li>Entity：实体，是三维场景中的一个对象，可以添加到场景中。</li><li>Primitive：原始图形，是三维场景中的一个对象，可以添加到场景中。</li><li>DataSourceCollection：数据源集合，用于管理数据源。</li></ol><h4 id="viewer" tabindex="-1"><a class="header-anchor" href="#viewer" aria-hidden="true">#</a> Viewer</h4><p>Viewer 类是 Cesium 应用的核心类，它负责创建和维护 Cesium 场景。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">&#39;cesiumContainer&#39;</span><span class="token punctuation">,</span> Options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建语法为，传入一个 Cesium 地图主窗口的 div 的 ID，在 vue 中，需要传入 <code>ref</code> 定义的 div 的 ID。</p><p>而常用的 Options 选项为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">&#39;cesiumContainer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">animation</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示动画控件</span>
  <span class="token literal-property property">baseLayerPicker</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示图层选择控件</span>
  <span class="token literal-property property">fullscreenButton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示全屏按钮</span>
  <span class="token literal-property property">geocoder</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示 Geo(右上角查询按钮)</span>
  <span class="token literal-property property">homeButton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示home按钮</span>
  <span class="token literal-property property">infoBox</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示信息框</span>
  <span class="token literal-property property">sceneModePicker</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示场景控制面板(三维/二维切换按钮)</span>
  <span class="token literal-property property">selectionIndicator</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示图层选择控件(鼠标点击显示绿框)</span>
  <span class="token literal-property property">navigationHelpButton</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示帮助信息控件</span>
  <span class="token literal-property property">timeline</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示时间线控件</span>
  <span class="token literal-property property">navigationInstructionsInitiallyVisible</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示导航说明控件</span>
  <span class="token literal-property property">scene3DOnly</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否只显示三维地图</span>
  <span class="token literal-property property">shouldAnimate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否自动播放动画</span>
  <span class="token literal-property property">shadows</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示光照投射的阴影</span>
  <span class="token literal-property property">clock</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 场景的时钟</span>
  <span class="token comment">// 设置底层地图服务, 仅在 baseLayerPicker 设置为 false 时生效</span>
  <span class="token literal-property property">imageryProvider</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>UrlTemplateImageryProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://a.tile.openstreetmap.org/{z}/{x}/{y}.png&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="scene" tabindex="-1"><a class="header-anchor" href="#scene" aria-hidden="true">#</a> Scene</h4><p>Scene 类是 Cesium 场景配置的容器，包含相机、光源、渲染器等。详细配置在后续展开。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">&#39;cesiumContainer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">sceneModePicker</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="entity" tabindex="-1"><a class="header-anchor" href="#entity" aria-hidden="true">#</a> Entity</h4><p>Entity 类是 Cesium 场景中的一个对象，可以添加到场景中。它是由 Primitive 类派生出来的，可以添加到场景中的对象，比如点、线、面等。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">&#39;cesiumContainer&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">sceneModePicker</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> scene <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene
<span class="token keyword">const</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Entity</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">position</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">116.40332</span><span class="token punctuation">,</span> <span class="token number">39.90498</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">point</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pixelSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Color<span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
scene<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>entity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="primitive" tabindex="-1"><a class="header-anchor" href="#primitive" aria-hidden="true">#</a> Primitive</h4><p>Primitive 类是 Cesium 场景中的一个对象，可以添加到场景中。后续详细介绍。</p><h4 id="datasourcecollection" tabindex="-1"><a class="header-anchor" href="#datasourcecollection" aria-hidden="true">#</a> DataSourceCollection</h4><p>DataSourceCollection 是 Cesium 中加载矢量数据的主要方式之一，最大特点是支持加载矢量数据集与外部文件的调用，主要分为 CzmlDataSource 和 GeoJsonDataSource 和 KmlDataSource 三种，分别对应 CZML、GeoJSON、KML 三种格式。</p><h3 id="cesium-坐标系系统" tabindex="-1"><a class="header-anchor" href="#cesium-坐标系系统" aria-hidden="true">#</a> Cesium 坐标系系统</h3><p>Cesium 坐标系系统分共有三种：屏幕坐标系、笛卡尔空间坐标系和地理坐标系。</p><ol><li>屏幕坐标系：屏幕坐标系是二维笛卡尔坐标系以屏幕左上角为原点的坐标系，x 轴向右，y 轴向下。</li><li>笛卡尔空间坐标系：笛卡尔坐标系是以三维空间中的原点为原点的坐标系，x 轴向垂直屏幕，y 轴向右，z 轴向上。 <img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202406012315509.png" alt="笛卡尔空间坐标系" loading="lazy"></li><li>地理坐标系：地理坐标系一般是指由经度(longitude)、纬度(latitude)和相对高度组成的坐标系，能够标示地球上的任何一个位置。在测绘领域常用的就是 GPS 的 WGS84 坐标系，其坐标原点为地球中心，x 轴指向赤道，y 轴指向东经，z 轴垂直地球表面。 <img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202406012320066.png" alt="地理坐标系" loading="lazy"></li></ol><p>在开发中，需要掌握的就是它们之间的转换关系。</p><ol><li><p>角度和弧度之间的转换。 <strong>弧度</strong>定义是圆弧长度等于半径时的圆心角。以度数表示的角，把数字乘以 <code>𝜋/180</code> 便转换成弧度；以弧度表示的角，乘以 <code>180/𝜋</code> 便转换成度数。</p><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202406012328743.png" alt="弧度" tabindex="0" loading="lazy"><figcaption>弧度</figcaption></figure><p>角度转弧度在 Cesium 中的实现为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> radians <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>degrees<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>弧度转角度在 Cesium 中的实现为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> degrees <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toDegrees</span><span class="token punctuation">(</span>radians<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>经纬度和笛卡尔空间坐标之间的转换。</p><p>2.1 直接通过经纬度进行转化，Cesium 默认 WGS-84 经纬度坐标，可直接使用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cartesian <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.2 通过椭球体进行转化。通过其他空间坐标系转换为笛卡尔空间坐标系。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ellipsoid <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Ellipsoid<span class="token punctuation">.</span><span class="token constant">WGS84</span>
<span class="token keyword">const</span> position <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
<span class="token keyword">const</span> cartographic <span class="token operator">=</span> ellipsoid<span class="token punctuation">.</span><span class="token function">cartesianToCartographic</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token comment">// 经纬度坐标系</span>
<span class="token keyword">const</span> cartesian <span class="token operator">=</span> ellipsoid<span class="token punctuation">.</span><span class="token function">cartographicToCartesian</span><span class="token punctuation">(</span>cartographic<span class="token punctuation">)</span> <span class="token comment">// 笛卡尔空间坐标系</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>屏幕坐标和笛卡尔空间坐标系之间转换。</p><p>通常二维是转换不了三维的，想象一下视线从屏幕上经过一个三维物体，屏幕上显示的只有二维的投影。实际上就是获取三维投影的二维坐标，该点可确定唯一。</p><p>3.1 屏幕坐标系转场景空间直角坐标系，这里的场景包含了地形、倾斜摄影测量模型等其他三维模型的坐标。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> ray <span class="token operator">=</span> viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">getPickRay</span><span class="token punctuation">(</span>windowPosition<span class="token punctuation">)</span> <span class="token comment">// 屏幕坐标系</span>
<span class="token keyword">const</span> cartesian <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>globe<span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>ray<span class="token punctuation">,</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">)</span> <span class="token comment">// 场景空间直角坐标系</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3.2 屏幕坐标系转椭球面笛卡尔空间坐标</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> canvas <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>canvas
<span class="token keyword">const</span> center <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian2</span><span class="token punctuation">(</span>
  canvas<span class="token punctuation">.</span>clientWidth <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">,</span>
  canvas<span class="token punctuation">.</span>clientHeight <span class="token operator">/</span> <span class="token number">2.0</span>
<span class="token punctuation">)</span>
<span class="token keyword">const</span> ellipsoid <span class="token operator">=</span> viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>globe<span class="token punctuation">.</span>ellipsoid
<span class="token keyword">const</span> result <span class="token operator">=</span> viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">pickEllipsoid</span><span class="token punctuation">(</span>center<span class="token punctuation">,</span> ellipsoid<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="cesium-相机系统" tabindex="-1"><a class="header-anchor" href="#cesium-相机系统" aria-hidden="true">#</a> Cesium 相机系统</h3><p>首先明确 cesium 中相机方向 orientation 设定原理和右手笛卡尔坐标系含义相似。如下图所示，将右手的中指指向自己，即为 cesium 中的相机坐标系。</p><ol><li>y 轴（heading）：朝上，默认正北。旋转的正角度同地球自转，自西向东，由<strong>偏航角</strong>。简单理解就是站立的人左右旋转角度。</li><li>x 轴（pitch）：朝右，默认正东。旋转角度像一张平铺的纸，默认旋转角度为 <code>-90</code>，即朝向地面。旋转起来像人俯视向下，或仰视抬头，所以又叫<strong>俯仰角</strong>。</li><li>z 轴（roll）：朝自己。默认旋转角度为 0，正角度向右旋转，像一个人左右侧空翻，所以又叫<strong>翻滚角</strong>。</li></ol><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202406020037386.png" alt="左手坐标系和右手坐标系" tabindex="0" loading="lazy"><figcaption>左手坐标系和右手坐标系</figcaption></figure><p>以上三项构成了相机视角的方向:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> position <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">,</span> height<span class="token punctuation">)</span>
viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">destination</span><span class="token operator">:</span> position<span class="token punctuation">,</span> <span class="token comment">// 相机目的地</span>
  <span class="token literal-property property">orientation</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">heading</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 偏航角</span>
    <span class="token literal-property property">pitch</span><span class="token operator">:</span> Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 俯仰角</span>
    <span class="token literal-property property">roll</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 翻滚角</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39);function w(f,C){const a=k("ExternalLinkIcon");return v(),g("div",null,[b,s("p",null,[n("在开发之前，建议开发者自行申请一个单独令牌（token），便于调用默认的 Bing 地图。申请方式在 cesium "),s("a",y,[n("官网"),d(a)]),n("。")]),h])}const j=e(r,[["render",w],["__file","Cesium03.html.vue"]]);export{j as default};
