import{_ as s,X as n,Y as a,$ as e}from"./framework-5dd7fabc.js";const t={},p=e,o=n,l=a,i=p(`<p>最新需要批量修复 git 分支问题，记录一下。</p><p>需求是有很多项目分支存在一些共性 bug，需要批量修复这些分支。每个分支都 <code>cherry-pick</code> 或者 <code>merge</code> 的话又太费时间。因此有了这个脚本实现，顺便也学习一下 bash 的一些语法。</p><p>最终效果如下,有合并进度条、状态表格等提示输出：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
        🌿 Starting the Merge Process
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token punctuation">[</span><span class="token comment">#############                           ]  33% ➜ Switching to feature/branch1...</span>
<span class="token punctuation">[</span><span class="token comment">#############                           ]  33% ➜ Merging fix/common-issue into feature/branch1...</span>
 ✔ Successfully merged into feature/branch1.
 ➜ Attempting to push feature/branch1 to remote<span class="token punctuation">..</span>.
 ✘ Failed to push feature/branch1 to remote.
<span class="token punctuation">[</span><span class="token comment">##########################              ]  66% ➜ Switching to feature/branch2...</span>
<span class="token punctuation">[</span><span class="token comment">##########################              ]  66% ➜ Merging fix/common-issue into feature/branch2...</span>
 ✘ Merge conflict detected <span class="token keyword">in</span> feature/branch2<span class="token operator">!</span>
 ➜ Aborting merge and restoring clean working directory<span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token comment">########################################] 100% ➜ Switching to feature/branch3...</span>
<span class="token punctuation">[</span><span class="token comment">########################################] 100% ➜ Merging fix/common-issue into feature/branch3...</span>
 ✔ Successfully merged into feature/branch3.
 ➜ Attempting to push feature/branch3 to remote<span class="token punctuation">..</span>.
 ✘ Failed to push feature/branch3 to remote.
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Merge Summary:
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Branch                    <span class="token operator">|</span> Status
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
feature/branch1           <span class="token operator">|</span> ✘ PushFailed
feature/branch2           <span class="token operator">|</span> ✘ Conflict
feature/branch3           <span class="token operator">|</span> ✘ PushFailed
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
 ➜ Returning to the fix branch<span class="token punctuation">..</span>.
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
Merge process completed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实现依据" tabindex="-1"><a class="header-anchor" href="#实现依据" aria-hidden="true">#</a> 实现依据</h2><ol><li>建立一个 <code>fix/common-issue</code> 修复分支，用于修复所有项目的共性 bug。</li><li>将 <code>fix/common-issue</code> 分支的修复内容批量 <code>merge</code> 到待修复的项目分支上。</li></ol><h2 id="实现脚本" tabindex="-1"><a class="header-anchor" href="#实现脚本" aria-hidden="true">#</a> 实现脚本</h2><blockquote><p>在文末还有指令化脚本，方便直接使用</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># 已修复分支</span>
<span class="token assign-left variable">fix_branch</span><span class="token operator">=</span><span class="token string">&quot;fix/common-issue&quot;</span>

<span class="token comment"># 目标分支列表</span>
<span class="token assign-left variable">target_branches</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;feature/branch1&quot;</span> <span class="token string">&quot;feature/branch2&quot;</span> <span class="token string">&quot;feature/branch3&quot;</span><span class="token punctuation">)</span>


<span class="token comment"># --------------- 以下为脚本内容, 无需变更 ---------------</span>

<span class="token comment"># 分支状态记录，替代关联数组</span>
<span class="token assign-left variable">branch_status_file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp<span class="token variable">)</span></span>

<span class="token comment"># 图标和符号定义</span>
<span class="token assign-left variable">CHECK_MARK</span><span class="token operator">=</span><span class="token string">&quot;✔&quot;</span>
<span class="token assign-left variable">CROSS_MARK</span><span class="token operator">=</span><span class="token string">&quot;✘&quot;</span>
<span class="token assign-left variable">ARROW</span><span class="token operator">=</span><span class="token string">&quot;➜&quot;</span>
<span class="token assign-left variable">SEPARATOR</span><span class="token operator">=</span><span class="token string">&quot;=========================================&quot;</span>
<span class="token assign-left variable">PROGRESS_BAR_WIDTH</span><span class="token operator">=</span><span class="token number">40</span>

<span class="token comment"># 动态进度条</span>
<span class="token function-name function">progress_bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">progress</span><span class="token operator">=</span><span class="token variable">$1</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable">$2</span>

  <span class="token comment"># 避免除以零</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$total</span>&quot;</span> <span class="token parameter variable">-le</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s &quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $PROGRESS_BAR_WIDTH<span class="token punctuation">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token number">0</span>
    <span class="token builtin class-name">return</span>
  <span class="token keyword">fi</span>

  <span class="token builtin class-name">local</span> <span class="token assign-left variable">percentage</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> progress <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> total <span class="token variable">))</span></span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">num_hashes</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> progress <span class="token operator">*</span> PROGRESS_BAR_WIDTH <span class="token operator">/</span> total <span class="token variable">))</span></span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">num_spaces</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> PROGRESS_BAR_WIDTH <span class="token operator">-</span> num_hashes <span class="token variable">))</span></span>

  <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s#&quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $num_hashes<span class="token variable">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token variable">$percentage</span>
<span class="token punctuation">}</span>

<span class="token comment"># 打印分隔线</span>
<span class="token function-name function">print_separator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 打印标题</span>
<span class="token function-name function">print_title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;        🌿 Starting the Merge Process&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 确保修复分支已存在</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">git</span> checkout <span class="token variable">$fix_branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to switch to <span class="token variable">$fix_branch</span>. Please ensure the branch exists.&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token comment"># 打印开始信息</span>
print_title

<span class="token comment"># 总分支数量</span>
<span class="token assign-left variable">total_branches</span><span class="token operator">=</span><span class="token variable">\${<span class="token operator">#</span>target_branches<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>

<span class="token comment"># 防止 total_branches 为 0</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$total_branches</span>&quot;</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> No target branches specified. Exiting.&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token assign-left variable">current_branch_index</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token comment"># 遍历目标分支，逐一合并修复</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">branch</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${target_branches<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">current_branch_index</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>current_branch_index <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span>

  <span class="token comment"># 更新动态进度条</span>
  progress_bar <span class="token variable">$current_branch_index</span> <span class="token variable">$total_branches</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Switching to <span class="token variable">$branch</span>...&quot;</span>

  <span class="token keyword">if</span> <span class="token function">git</span> checkout <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Updating <span class="token variable">$branch</span> to the latest from remote...&quot;</span>
    <span class="token function">git</span> pull <span class="token parameter variable">--rebase</span> origin <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">||</span> <span class="token punctuation">{</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to update <span class="token variable">$branch</span>. Skipping merge.&quot;</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:UpdateFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
      <span class="token builtin class-name">continue</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to switch to <span class="token variable">$branch</span>.&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:CheckoutFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token builtin class-name">continue</span>
  <span class="token keyword">fi</span>

  progress_bar <span class="token variable">$current_branch_index</span> <span class="token variable">$total_branches</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Merging <span class="token variable">$fix_branch</span> into <span class="token variable">$branch</span>...&quot;</span>

  <span class="token keyword">if</span> <span class="token function">git</span> merge <span class="token variable">$fix_branch</span> --no-ff <span class="token parameter variable">-m</span> <span class="token string">&quot;Merge <span class="token variable">$fix_branch</span> into <span class="token variable">$branch</span>&quot;</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CHECK_MARK}</span> Successfully merged into <span class="token variable">$branch</span>.&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Attempting to push <span class="token variable">$branch</span> to remote...&quot;</span>
    <span class="token keyword">if</span> <span class="token function">git</span> push origin <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CHECK_MARK}</span> Successfully pushed <span class="token variable">$branch</span> to remote.&quot;</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:Merged&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token keyword">else</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to push <span class="token variable">$branch</span> to remote.&quot;</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:PushFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token keyword">fi</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Merge conflict detected in <span class="token variable">$branch</span>!&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:Conflict&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Aborting merge and restoring clean working directory...&quot;</span>
    <span class="token function">git</span> merge <span class="token parameter variable">--abort</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>

<span class="token comment"># 打印汇总表格</span>
print_separator
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Merge Summary:&quot;</span>
print_separator
<span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;Branch&quot;</span> <span class="token string">&quot;Status&quot;</span>
print_separator

<span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span>: <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> branch status<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$status</span>&quot;</span> <span class="token keyword">in</span>
    Merged<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CHECK_MARK</span> Merged&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    Conflict<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> Conflict&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    CheckoutFailed<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> CheckoutFailed&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    UpdateFailed<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> UpdateFailed&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    PushFailed<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> PushFailed&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> Unknown&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token keyword">esac</span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>

print_separator

<span class="token comment"># 清理修复分支</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Returning to the fix branch...&quot;</span>
<span class="token function">git</span> checkout <span class="token variable">$fix_branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>

<span class="token comment"># 删除临时文件</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>

print_separator
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Merge process completed.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="脚本解释" tabindex="-1"><a class="header-anchor" href="#脚本解释" aria-hidden="true">#</a> 脚本解释</h2><h3 id="变量定义" tabindex="-1"><a class="header-anchor" href="#变量定义" aria-hidden="true">#</a> <strong>变量定义</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">fix_branch</span><span class="token operator">=</span><span class="token string">&quot;fix/common-issue&quot;</span>
<span class="token assign-left variable">target_branches</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&quot;feature/branch1&quot;</span> <span class="token string">&quot;feature/branch2&quot;</span> <span class="token string">&quot;feature/branch3&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>fix_branch</code></strong>：修复分支名称，源分支。</li><li><strong><code>target_branches</code></strong>：目标分支列表，修复分支需要合并到这些分支中。</li></ul><h3 id="脚本工具和常量" tabindex="-1"><a class="header-anchor" href="#脚本工具和常量" aria-hidden="true">#</a> <strong>脚本工具和常量</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">branch_status_file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp<span class="token variable">)</span></span>
<span class="token assign-left variable">CHECK_MARK</span><span class="token operator">=</span><span class="token string">&quot;✔&quot;</span>
<span class="token assign-left variable">CROSS_MARK</span><span class="token operator">=</span><span class="token string">&quot;✘&quot;</span>
<span class="token assign-left variable">ARROW</span><span class="token operator">=</span><span class="token string">&quot;➜&quot;</span>
<span class="token assign-left variable">SEPARATOR</span><span class="token operator">=</span><span class="token string">&quot;=========================================&quot;</span>
<span class="token assign-left variable">PROGRESS_BAR_WIDTH</span><span class="token operator">=</span><span class="token number">40</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong><code>mktemp</code></strong>：创建一个临时文件，用于记录分支状态。</li><li><strong>图标和符号</strong>：用于美化输出，便于快速识别操作结果。</li><li><strong><code>PROGRESS_BAR_WIDTH</code></strong>：动态进度条宽度。</li></ul><h3 id="函数定义" tabindex="-1"><a class="header-anchor" href="#函数定义" aria-hidden="true">#</a> <strong>函数定义</strong></h3><h4 id="动态进度条" tabindex="-1"><a class="header-anchor" href="#动态进度条" aria-hidden="true">#</a> <strong>动态进度条</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function-name function">progress_bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">progress</span><span class="token operator">=</span><span class="token variable">$1</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable">$2</span>

  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$total</span>&quot;</span> <span class="token parameter variable">-le</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s &quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $PROGRESS_BAR_WIDTH<span class="token punctuation">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token number">0</span>
    <span class="token builtin class-name">return</span>
  <span class="token keyword">fi</span>

  <span class="token builtin class-name">local</span> <span class="token assign-left variable">percentage</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> progress <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> total <span class="token variable">))</span></span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">num_hashes</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> progress <span class="token operator">*</span> PROGRESS_BAR_WIDTH <span class="token operator">/</span> total <span class="token variable">))</span></span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">num_spaces</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> PROGRESS_BAR_WIDTH <span class="token operator">-</span> num_hashes <span class="token variable">))</span></span>

  <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s#&quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $num_hashes<span class="token variable">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token variable">$percentage</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>参数说明</strong>： <ul><li><code>progress</code>：当前进度（完成数）。</li><li><code>total</code>：总进度。</li></ul></li><li><strong>作用</strong>：根据当前进度和总进度，动态生成进度条。</li><li><strong>实现逻辑</strong>： <ol><li>计算完成的百分比 <code>percentage</code>。</li><li>生成相应数量的 <code>#</code> 和空格来填充进度条。</li></ol></li></ul><p><code>printf</code> 这里的语法解释：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s#&quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $num_hashes<span class="token variable">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token variable">$percentage</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>功能</strong>：在同一行动态更新进度条。<br><strong>核心逻辑</strong>：</p><ol><li><code>\\r</code>：回到当前行的起始位置，覆盖之前的输出。</li><li><code>[%-\${PROGRESS_BAR_WIDTH}s]</code>：用于格式化进度条，占用固定宽度。</li><li><code>%3d%%</code>：显示当前完成的百分比（右对齐，宽度为 3）。</li><li><code>$(...)</code>：子命令替换，用于生成进度条的内容。</li></ol><p>对于 <strong><code>%-\${PROGRESS_BAR_WIDTH}s</code></strong> 的拆分理解：</p><ul><li><p><strong><code>%-...s</code></strong>：字符串左对齐，宽度由 <code>\${PROGRESS_BAR_WIDTH}</code> 决定。</p></li><li><p><strong>填充内容</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s#&quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $num_hashes<span class="token variable">)</span><span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这一部分生成了进度条中的 <code>#</code>。</p><ol><li><strong><code>seq 1 $num_hashes</code></strong>： <ul><li>生成从 <code>1</code> 到 <code>$num_hashes</code> 的序列。例如，如果 <code>$num_hashes=10</code>，则生成 <code>1 2 3 4 5 6 7 8 9 10</code>。</li></ul></li><li><strong><code>printf &quot;%0.s#&quot;</code></strong>： <ul><li>对每个数字，输出一个 <code>#</code>。</li><li><strong><code>%0.s</code></strong> 的作用：忽略传入值，只输出固定内容 <code>#</code>。</li></ul></li><li><strong>最终结果</strong>： <ul><li>若 <code>$num_hashes=10</code>，生成字符串 <code>##########</code>。</li></ul></li></ol></li><li><p><strong>剩余空格</strong>：总宽度为 <code>PROGRESS_BAR_WIDTH</code>，<code>#</code> 的数量为 <code>$num_hashes</code>，剩余部分用空格填充。</p></li><li><p><code>%-\${PROGRESS_BAR_WIDTH}s</code> 会自动填充不足的部分为空格。</p></li><li><p><strong>显示百分比</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>%3d%%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>%3d</code>：整数，宽度为 3（不足时左侧补空格）。</li><li><code>%%</code>：输出百分号。</li></ul><p>例如：</p><ol><li>如果 <code>$percentage=42</code>，输出 <code>42%</code>。</li><li>如果 <code>$percentage=100</code>，输出 <code>100%</code>。</li></ol></li></ul><p>此外，因为开头有 <code>\\r</code>，每次打印时会覆盖之前的内容，显示动态进度条。</p><h4 id="打印分隔线和标题" tabindex="-1"><a class="header-anchor" href="#打印分隔线和标题" aria-hidden="true">#</a> <strong>打印分隔线和标题</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function-name function">print_separator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token function-name function">print_title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;        🌿 Starting the Merge Process&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="核心逻辑" tabindex="-1"><a class="header-anchor" href="#核心逻辑" aria-hidden="true">#</a> <strong>核心逻辑</strong></h3><h4 id="切换到修复分支" tabindex="-1"><a class="header-anchor" href="#切换到修复分支" aria-hidden="true">#</a> <strong>切换到修复分支</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">git</span> checkout <span class="token variable">$fix_branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to switch to <span class="token variable">$fix_branch</span>. Please ensure the branch exists.&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 <code>git checkout</code> 切换到修复分支。如果失败，打印错误并退出脚本。</li></ul><h4 id="合并循环" tabindex="-1"><a class="header-anchor" href="#合并循环" aria-hidden="true">#</a> <strong>合并循环</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">branch</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${target_branches<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token punctuation">..</span>.
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤</strong>：</p><ol><li><p><strong>动态更新进度条</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>progress_bar <span class="token variable">$current_branch_index</span> <span class="token variable">$total_branches</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示当前分支的处理进度。</p></li><li><p><strong>切换分支</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">git</span> checkout <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:CheckoutFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
  <span class="token builtin class-name">continue</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果切换失败，记录状态并跳过。</p></li><li><p><strong>合并修复分支</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> <span class="token function">git</span> merge <span class="token variable">$fix_branch</span> --no-ff <span class="token parameter variable">-m</span> <span class="token string">&quot;Merge <span class="token variable">$fix_branch</span> into <span class="token variable">$branch</span>&quot;</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token punctuation">..</span>.
<span class="token keyword">else</span>
  <span class="token function">git</span> merge <span class="token parameter variable">--abort</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>成功时： <ul><li>记录状态为 <code>Merged</code>。</li><li>推送到远程，记录推送结果。</li></ul></li><li>失败时： <ul><li>记录状态为 <code>Conflict</code>。</li><li>执行 <code>git merge --abort</code> 恢复工作目录。</li></ul></li></ul></li></ol><h4 id="打印汇总表格" tabindex="-1"><a class="header-anchor" href="#打印汇总表格" aria-hidden="true">#</a> <strong>打印汇总表格</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span>: <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> branch status<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$status</span>&quot;</span> <span class="token keyword">in</span>
    <span class="token punctuation">..</span>.
  <span class="token keyword">esac</span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>遍历状态文件 <code>branch_status_file</code>，根据状态打印结果，提供直观的汇总信息。</li><li><code>IFS</code>（Internal Field Separator）用于指定字段分隔符，这里设置为冒号（<code>:</code>）。因为笔者此前用 <code>declare -A branch_status</code> 来记录状态时发现总是失败，所以改用文件记录状态。</li><li>在这里，如果有一行内容为 <code>feature/branch1:Merged</code>，则 <code>read</code> 命令会将 <code>feature/branch1</code> 分配给变量 <code>branch</code>，<code>Merged</code> 分配给变量 <code>status</code>。</li><li><code>&lt; &quot;$branch_status_file&quot;</code> 将文件 <code>$branch_status_file</code> 的内容逐行输入到 <code>while</code> 循环中。文件的每一行都会被传递给 <code>read</code> 命令。</li></ul><h3 id="清理与结束" tabindex="-1"><a class="header-anchor" href="#清理与结束" aria-hidden="true">#</a> <strong>清理与结束</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token variable">$fix_branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>切换回修复分支。</li><li>删除临时文件，清理运行环境。</li></ul><h3 id="关键技术和语法" tabindex="-1"><a class="header-anchor" href="#关键技术和语法" aria-hidden="true">#</a> <strong>关键技术和语法</strong></h3><ol><li><strong>动态进度条</strong>：通过 <code>printf</code> 和 <code>seq</code> 构建动态、实时更新的输出。</li><li><strong>错误处理</strong>：利用 <code>if</code> 和 <code>continue</code> 等语法捕获错误，保证脚本的健壮性。</li><li><strong>临时文件</strong>：通过 <code>mktemp</code> 创建临时文件，避免变量冲突。</li><li><strong>状态汇总</strong>：通过文件记录和 <code>while</code> 循环实现批量结果分析。</li></ol><h2 id="指令化脚本" tabindex="-1"><a class="header-anchor" href="#指令化脚本" aria-hidden="true">#</a> 指令化脚本</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 帮助信息</span>
<span class="token function-name function">print_usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Usage: <span class="token variable">$0</span> -f &lt;fix_branch&gt; -t &lt;target_branches&gt;&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;  -f  Specify the fix branch to merge from.&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;  -t  Specify the target branches to merge into (comma-separated).&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Example:&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;  <span class="token variable">$0</span> -f fix/common-issue -t feature/branch1,feature/branch2,feature/branch3&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment"># 参数初始化</span>
<span class="token assign-left variable">fix_branch</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
<span class="token assign-left variable">target_branches</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 解析命令行参数</span>
<span class="token keyword">while</span> <span class="token builtin class-name">getopts</span> <span class="token string">&quot;f:t:&quot;</span> opt<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$opt</span>&quot;</span> <span class="token keyword">in</span>
    f<span class="token punctuation">)</span>
      <span class="token assign-left variable">fix_branch</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$OPTARG</span>&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    t<span class="token punctuation">)</span>
      <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span><span class="token string">&#39;,&#39;</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> <span class="token parameter variable">-a</span> target_branches <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;<span class="token variable">$OPTARG</span>&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
      print_usage
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token keyword">esac</span>
<span class="token keyword">done</span>

<span class="token comment"># 检查必需参数是否为空</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$fix_branch</span>&quot;</span> <span class="token operator">||</span> <span class="token variable">\${<span class="token operator">#</span>target_branches<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  print_usage
<span class="token keyword">fi</span>

<span class="token comment"># --------------- 核心逻辑 ---------------</span>

<span class="token comment"># 分支状态记录，替代关联数组</span>
<span class="token assign-left variable">branch_status_file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp<span class="token variable">)</span></span>

<span class="token comment"># 图标和符号定义</span>
<span class="token assign-left variable">CHECK_MARK</span><span class="token operator">=</span><span class="token string">&quot;✔&quot;</span>
<span class="token assign-left variable">CROSS_MARK</span><span class="token operator">=</span><span class="token string">&quot;✘&quot;</span>
<span class="token assign-left variable">ARROW</span><span class="token operator">=</span><span class="token string">&quot;➜&quot;</span>
<span class="token assign-left variable">SEPARATOR</span><span class="token operator">=</span><span class="token string">&quot;=========================================&quot;</span>
<span class="token assign-left variable">PROGRESS_BAR_WIDTH</span><span class="token operator">=</span><span class="token number">40</span>

<span class="token comment"># 动态进度条</span>
<span class="token function-name function">progress_bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">progress</span><span class="token operator">=</span><span class="token variable">$1</span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable">$2</span>

  <span class="token comment"># 避免除以零</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$total</span>&quot;</span> <span class="token parameter variable">-le</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s &quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $PROGRESS_BAR_WIDTH<span class="token punctuation">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token number">0</span>
    <span class="token builtin class-name">return</span>
  <span class="token keyword">fi</span>

  <span class="token builtin class-name">local</span> <span class="token assign-left variable">percentage</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> progress <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">/</span> total <span class="token variable">))</span></span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">num_hashes</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> progress <span class="token operator">*</span> PROGRESS_BAR_WIDTH <span class="token operator">/</span> total <span class="token variable">))</span></span>
  <span class="token builtin class-name">local</span> <span class="token assign-left variable">num_spaces</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span> PROGRESS_BAR_WIDTH <span class="token operator">-</span> num_hashes <span class="token variable">))</span></span>

  <span class="token builtin class-name">printf</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>[%-<span class="token variable">\${PROGRESS_BAR_WIDTH}</span>s] %3d%%&quot;</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%0.s#&quot;</span> <span class="token punctuation">$(</span>seq <span class="token number">1</span> $num_hashes<span class="token variable">)</span><span class="token variable">)</span></span>&quot;</span> <span class="token variable">$percentage</span>
<span class="token punctuation">}</span>

<span class="token comment"># 打印分隔线</span>
<span class="token function-name function">print_separator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 打印标题</span>
<span class="token function-name function">print_title</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;        🌿 Starting the Merge Process&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$SEPARATOR</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># 确保修复分支已存在</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">git</span> checkout <span class="token variable">$fix_branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to switch to <span class="token variable">$fix_branch</span>. Please ensure the branch exists.&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token comment"># 打印开始信息</span>
print_title

<span class="token comment"># 总分支数量</span>
<span class="token assign-left variable">total_branches</span><span class="token operator">=</span><span class="token variable">\${<span class="token operator">#</span>target_branches<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>

<span class="token comment"># 防止 total_branches 为 0</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$total_branches</span>&quot;</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> No target branches specified. Exiting.&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token assign-left variable">current_branch_index</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token comment"># 遍历目标分支，逐一合并修复</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">branch</span> <span class="token keyword">in</span> <span class="token string">&quot;<span class="token variable">\${target_branches<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>&quot;</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token assign-left variable">current_branch_index</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>current_branch_index <span class="token operator">+</span> <span class="token number">1</span><span class="token variable">))</span></span>

  <span class="token comment"># 更新动态进度条</span>
  progress_bar <span class="token variable">$current_branch_index</span> <span class="token variable">$total_branches</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Switching to <span class="token variable">$branch</span>...&quot;</span>

  <span class="token keyword">if</span> <span class="token function">git</span> checkout <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Updating <span class="token variable">$branch</span> to the latest from remote...&quot;</span>
    <span class="token function">git</span> pull <span class="token parameter variable">--rebase</span> origin <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">||</span> <span class="token punctuation">{</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to update <span class="token variable">$branch</span>. Skipping merge.&quot;</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:UpdateFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
      <span class="token builtin class-name">continue</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to switch to <span class="token variable">$branch</span>.&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:CheckoutFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token builtin class-name">continue</span>
  <span class="token keyword">fi</span>

  progress_bar <span class="token variable">$current_branch_index</span> <span class="token variable">$total_branches</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Merging <span class="token variable">$fix_branch</span> into <span class="token variable">$branch</span>...&quot;</span>

  <span class="token keyword">if</span> <span class="token function">git</span> merge <span class="token variable">$fix_branch</span> --no-ff <span class="token parameter variable">-m</span> <span class="token string">&quot;Merge <span class="token variable">$fix_branch</span> into <span class="token variable">$branch</span>&quot;</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CHECK_MARK}</span> Successfully merged into <span class="token variable">$branch</span>.&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Attempting to push <span class="token variable">$branch</span> to remote...&quot;</span>
    <span class="token keyword">if</span> <span class="token function">git</span> push origin <span class="token variable">$branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CHECK_MARK}</span> Successfully pushed <span class="token variable">$branch</span> to remote.&quot;</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:Merged&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token keyword">else</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Failed to push <span class="token variable">$branch</span> to remote.&quot;</span>
      <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:PushFailed&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token keyword">fi</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${CROSS_MARK}</span> Merge conflict detected in <span class="token variable">$branch</span>!&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$branch</span>:Conflict&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Aborting merge and restoring clean working directory...&quot;</span>
    <span class="token function">git</span> merge <span class="token parameter variable">--abort</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>

<span class="token comment"># 打印汇总表格</span>
print_separator
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Merge Summary:&quot;</span>
print_separator
<span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;Branch&quot;</span> <span class="token string">&quot;Status&quot;</span>
print_separator

<span class="token keyword">while</span> <span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span>: <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> branch status<span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$status</span>&quot;</span> <span class="token keyword">in</span>
    Merged<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CHECK_MARK</span> Merged&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    Conflict<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> Conflict&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    CheckoutFailed<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> CheckoutFailed&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    UpdateFailed<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> UpdateFailed&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    PushFailed<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> PushFailed&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>
      <span class="token builtin class-name">printf</span> <span class="token string">&quot;%-25s | %-15s<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$branch</span>&quot;</span> <span class="token string">&quot;<span class="token variable">$CROSS_MARK</span> Unknown&quot;</span>
      <span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token keyword">esac</span>
<span class="token keyword">done</span> <span class="token operator">&lt;</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>

print_separator

<span class="token comment"># 清理修复分支</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot; <span class="token variable">\${ARROW}</span> Returning to the fix branch...&quot;</span>
<span class="token function">git</span> checkout <span class="token variable">$fix_branch</span> <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>

<span class="token comment"># 删除临时文件</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$branch_status_file</span>&quot;</span>

print_separator
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Merge process completed.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时可以通过 node 脚本来指令化调用啦~ 不用额外安装依赖：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 构造指令</span>
<span class="token keyword">const</span> fixBranch <span class="token operator">=</span> <span class="token string">&#39;fix/common-issue&#39;</span>
<span class="token keyword">const</span> targetBranches <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;feature/branch1&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;feature/branch2&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;feature/branch3&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 脚本路径-这里的 \`mergeGit.sh\` 为上述脚本保存名称</span>
<span class="token keyword">const</span> scriptPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./mergeGit.sh&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> command <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">bash </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scriptPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -f </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fixBranch<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -t </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>targetBranches<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

<span class="token comment">// 执行脚本</span>
<span class="token function">exec</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>stderr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stderr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Output:\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),c=[i];function r(u,k){return o(),l("div",null,c)}const v=s(t,[["render",r],["__file","other08.html.vue"]]);export{v as default};
