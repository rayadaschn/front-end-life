import{_ as a,X as n,Y as s,$ as e}from"./framework-97fa2d96.js";const p={},t=e,c=n,o=s,l=t(`<h2 id="开启-happypack-多进程打包" tabindex="-1"><a class="header-anchor" href="#开启-happypack-多进程打包" aria-hidden="true">#</a> 开启 HappyPack 多进程打包</h2><p>Node 是单线程的，而 Webpack 又是基于 Node 构建的，所以 Webpack 也是单线程的。</p><p>开启 HappyPack 可以让 Webpack 同一时间处理多个任务（多进程），从而缩短 Webpack 的打包时间。</p><p>配置过程:</p><ol><li><p>首先，安装 HappyPack 插件及其依赖：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> happypack webpack@4 @happypack/core @happypack/loader --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在 webpack 配置文件中引入 HappyPack 插件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> HappyPack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;happypack&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 其他配置项...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">HappyPack</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;babel&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定唯一的标识符 id 来处理对应的 loader</span>
      <span class="token literal-property property">loaders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 将要使用的 loader</span>
      <span class="token literal-property property">threads</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// 开启多线程</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token comment">// 指定使用 HappyPack 加载器处理匹配的文件</span>
        <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;happypack/loader?id=babel&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><blockquote><p>在 Webpack 5 中，HappyPack 插件已经不再推荐使用，因为 Webpack 5 已经内置了对多线程构建的支持。Webpack 5 通过使用 thread-loader 来实现多线程构建，因此不再需要 HappyPack 插件来管理多线程任务。</p></blockquote>`,6),i=[l];function r(u,k){return c(),o("div",null,i)}const v=a(p,[["render",r],["__file","webpack07.html.vue"]]);export{v as default};
