import{_ as t,Z as e,a0 as l,F as p,a1 as i,X as o,Y as c,$ as d}from"./framework-97fa2d96.js";const u={},n=e,a=l,r=p,k=i,m=d,v=o,h=c,g=n("p",null,"在现代网页开发中，有很多监听页面滚动距离而后触发动画效果的需求。但是这有一个弊病就是滚轮回退想要让效果回退可能又需要重新写一遍动画效果。",-1),b=n("p",null,"AOS（Animate on Scroll）动画库就是用来改善页面滚动交互的一个动画库。使用较为简单，真滴很好用。（虽然 Github 上已经很久没有更新了= =）本文对 AOS 进行梳理。",-1),f=n("h2",{id:"简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),a(" 简介")],-1),y={href:"https://michalsnik.github.io/aos/",target:"_blank",rel:"noopener noreferrer"},x=m(`<h2 id="在-vue3-中集成-aos" tabindex="-1"><a class="header-anchor" href="#在-vue3-中集成-aos" aria-hidden="true">#</a> 在 Vue3 中集成 AOS</h2><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$: <span class="token function">npm</span> <span class="token function">install</span> aos <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入" aria-hidden="true">#</a> 引入</h2><blockquote><p>注意，AOS 要在 APP mounted 挂载之后再进行初始化。</p></blockquote><h3 id="方法-1-在-main-ts-中直接引入-aos-包括其-css-样式-并将其初始化" tabindex="-1"><a class="header-anchor" href="#方法-1-在-main-ts-中直接引入-aos-包括其-css-样式-并将其初始化" aria-hidden="true">#</a> 方法 1: 在 <code>main.ts</code> 中直接引入 AOS(包括其 CSS 样式)，并将其初始化</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token constant">AOS</span> <span class="token keyword">from</span> <span class="token string">&#39;aos&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">import</span> <span class="token string">&#39;./style.css&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;aos/dist/aos.css&#39;</span>

<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 初始化 AOS</span>
<span class="token constant">AOS</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法-2-在-app-vue-中的-onmounted-生命周期内进行初始化" tabindex="-1"><a class="header-anchor" href="#方法-2-在-app-vue-中的-onmounted-生命周期内进行初始化" aria-hidden="true">#</a> 方法 2: 在 App.vue 中的 onmounted 生命周期内进行初始化</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- App.vue --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token constant">AOS</span> <span class="token keyword">from</span> <span class="token string">&#39;aos&#39;</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token constant">AOS</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是样式文件 <code>Aos.css</code> 依旧需要在 <code>main.ts</code> 中进行全局引用。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// main.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>

<span class="token comment">// importing AOS css style globally</span>
<span class="token keyword">import</span> <span class="token string">&#39;aos/dist/aos.css&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>对需要添加动画的元素增加 AOS 的相关属性(attribute)，格式为：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animation_name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中的 <code>animation_name</code> 为动画名。例如:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>displayBox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zoom-in<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Animated element using zoom-in.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就完成了一个基础的动画，用于在元素进入视图时应用缩放动画。即当用户滚动到包含 data-aos=&quot;zoom-in&quot; 属性的元素时，AOS 库会自动为该元素添加缩放动画。</p><h2 id="动画基本功能" tabindex="-1"><a class="header-anchor" href="#动画基本功能" aria-hidden="true">#</a> 动画基本功能</h2><p>还有其他动画设置，如动画持续时间、动画延迟、页面滚动偏移量等。</p><table><thead><tr><th style="text-align:left;">Attribute</th><th style="text-align:left;">Description</th><th style="text-align:left;">Example value</th><th>Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><em><code>data-aos-offset</code></em></td><td style="text-align:left;">更改偏移量以迟早触发动画，单位是 px，但是不用写！直接传入数值即可。</td><td style="text-align:left;">200</td><td>120</td></tr><tr><td style="text-align:left;"><em><code>data-aos-duration</code></em></td><td style="text-align:left;">动画持续时间 (ms)</td><td style="text-align:left;">600</td><td>400</td></tr><tr><td style="text-align:left;"><em><code>data-aos-easing</code></em></td><td style="text-align:left;">缓动函数以不同的方式移动元素</td><td style="text-align:left;">ease-in-sine</td><td>ease</td></tr><tr><td style="text-align:left;"><em><code>data-aos-delay</code></em></td><td style="text-align:left;">动画延迟 (ms)</td><td style="text-align:left;">300</td><td>0</td></tr><tr><td style="text-align:left;"><em><code>data-aos-anchor</code></em></td><td style="text-align:left;">锚元素，其偏移量将被计数以触发动画，而不是实际的元素偏移量</td><td style="text-align:left;">#selector</td><td>null</td></tr><tr><td style="text-align:left;"><em><code>data-aos-anchor-placement</code></em></td><td style="text-align:left;">锚的位置-当指定锚元素出现在屏幕上时触发动画</td><td style="text-align:left;">top-center</td><td>top-bottom</td></tr><tr><td style="text-align:left;"><em><code>data-aos-once</code></em></td><td style="text-align:left;">设置动画是否只触发一次，若为 false 则每次向上/向下滚动到元素时都会重复触发动画</td><td style="text-align:left;">true</td><td>false</td></tr></tbody></table><h2 id="全局设置" tabindex="-1"><a class="header-anchor" href="#全局设置" aria-hidden="true">#</a> 全局设置</h2><p>当然也可以在全局对上述属性设置一些通用属性，需要在 AOS 初始化时进行定义：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
    <span class="token constant">AOS</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
      <span class="token literal-property property">easing</span><span class="token operator">:</span> <span class="token string">&#39;ease-in-sine&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动画样式" tabindex="-1"><a class="header-anchor" href="#动画样式" aria-hidden="true">#</a> 动画样式</h2><p>在 AOS 中，这些动画样式是通过 HTML 属性 <code>data-aos</code> 来指定的，用于在元素进入视图时添加动画效果。以下是每个动画样式的简要说明：</p><ul><li><p>淡入淡出动画:</p><ul><li>fade：元素逐渐变为不透明，创建一个平滑的淡入效果。</li><li>fade-up：元素从底部逐渐淡入，创建一个从下往上的淡入效果。</li><li>fade-down：元素从顶部逐渐淡入，创建一个从上往下的淡入效果。</li><li>fade-left：元素从右侧逐渐淡入，创建一个从右往左的淡入效果。</li><li>fade-right：元素从左侧逐渐淡入，创建一个从左往右的淡入效果。</li><li>fade-up-right：元素从右下角逐渐淡入，创建一个从右下角往上的淡入效果。</li><li>fade-up-left：元素从左下角逐渐淡入，创建一个从左下角往上的淡入效果。</li><li>fade-down-right：元素从右上角逐渐淡入，创建一个从右上角往下的淡入效果。</li><li>fade-down-left：元素从左上角逐渐淡入，创建一个从左上角往下的淡入效果。</li></ul></li><li><p>翻转动画:</p><ul><li>flip-up：元素从下方翻转进入视图。</li><li>flip-down：元素从上方翻转进入视图。</li><li>flip-left：元素从右侧翻转进入视图。</li><li>flip-right：元素从左侧翻转进入视图。</li></ul></li><li><p>滑动动画:</p><ul><li>slide-up：元素从底部滑入视图。</li><li>slide-down：元素从顶部滑入视图。</li><li>slide-left：元素从右侧滑入视图。</li><li>slide-right：元素从左侧滑入视图。</li></ul></li><li><p>缩放动画:</p><ul><li>zoom-in：元素逐渐放大进入视图。</li><li>zoom-in-up：元素从底部放大进入视图。</li><li>zoom-in-down：元素从顶部放大进入视图。</li><li>zoom-in-left：元素从右侧放大进入视图。</li><li>zoom-in-right：元素从左侧放大进入视图。</li><li>zoom-out：元素逐渐缩小进入视图。</li><li>zoom-out-up：元素从底部缩小进入视图。</li><li>zoom-out-down：元素从顶部缩小进入视图。</li><li>zoom-out-left：元素从右侧缩小进入视图。</li><li>zoom-out-right：元素从左侧缩小进入视图。</li></ul></li></ul><h2 id="锚点位置" tabindex="-1"><a class="header-anchor" href="#锚点位置" aria-hidden="true">#</a> 锚点位置</h2><p>在 AOS（Animate On Scroll）中，锚元素位置指的是在页面中特定元素的位置，用于触发 AOS 库中的动画效果。</p><p>AOS 库允许使用各种锚元素位置来触发动画效果，包括：</p><ol><li><p>top-bottom：当元素的顶部进入视图时触发动画。</p></li><li><p>top-center：当元素的中心进入视图时触发动画。</p></li><li><p>top-top：当元素的顶部完全进入视图时触发动画。</p></li><li><p>center-bottom：当元素的底部进入视图时触发动画。</p></li><li><p>center-center：当元素的中心完全进入视图时触发动画。</p></li><li><p>center-top：当元素的顶部与视图的顶部对齐时触发动画。</p></li><li><p>bottom-bottom：当元素的底部完全进入视图时触发动画。</p></li><li><p>bottom-center：当元素的底部与视图的中心对齐时触发动画。</p></li><li><p>bottom-top：当元素的底部与视图的顶部对齐时触发动画。</p></li></ol><p>这些锚元素位置可以在 AOS 的 HTML 属性中指定，例如：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fade-up<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-aos-anchor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bottom-top<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在上面的示例中，当元素的底部与视图的顶部对齐时，AOS 库将添加 fade-up 动画效果。</p><h2 id="缓动函数" tabindex="-1"><a class="header-anchor" href="#缓动函数" aria-hidden="true">#</a> 缓动函数</h2><p>Easing functions（缓动函数）是用于动画和过渡效果中的数学函数，用于控制动画的速度和变化率。在动画中，物体通常不是匀速移动的，而是随着时间的推移逐渐加速或减速。这种变化的速度和程度可以通过缓动函数来控制，从而使动画看起来更加自然流畅。使用缓动函数可以使动画看起来更加自然和舒适，为用户提供更好的用户体验。</p><ol><li>linear：匀速缓动函数，动画的速度保持恒定。</li><li>ease：默认缓动函数，动画开始时加速，然后逐渐减速。</li><li>ease-in：加速缓动函数，动画开始时缓慢，然后加速到最后。</li><li>ease-out：减速缓动函数，动画开始时快速，然后逐渐减速到最后。</li><li>ease-in-out：先加速后减速缓动函数，动画开始时缓慢，然后加速到一半，然后逐渐减速到最后。</li><li>ease-in-back：带回弹效果的加速缓动函数，动画开始时缓慢，然后加速到最后，并在结尾处产生回弹效果。</li><li>ease-out-back：带回弹效果的减速缓动函数，动画开始时快速，然后逐渐减速到最后，并在结尾处产生回弹效果。</li><li>ease-in-out-back：带回弹效果的先加速后减速缓动函数，动画开始时缓慢，然后加速到一半，然后逐渐减速到最后，并在结尾处产生回弹效果。</li><li>ease-in-sine：正弦加速缓动函数，动画开始时缓慢，然后逐渐加速到最后。</li><li>ease-out-sine：正弦减速缓动函数，动画开始时快速，然后逐渐减速到最后。</li><li>ease-in-out-sine：正弦先加速后减速缓动函数，动画开始时缓慢，然后加速到一半，然后逐渐减速到最后。</li><li>ease-in-quad：二次方加速缓动函数，动画开始时缓慢，然后逐渐加速到最后。</li><li>ease-out-quad：二次方减速缓动函数，动画开始时快速，然后逐渐减速到最后。</li><li>ease-in-out-quad：二次方先加速后减速缓动函数，动画开始时缓慢，然后加速到一半，然后逐渐减速到最后。</li><li>ease-in-cubic：三次方加速缓动函数，动画开始时缓慢，然后逐渐加速到最后。</li><li>ease-out-cubic：三次方减速缓动函数，动画开始时快速，然后逐渐减速到最后。</li><li>ease-in-out-cubic：三次方先加速后减速缓动函数，动画开始时缓慢，然后加速到一半，然后逐渐减速到最后。</li><li>ease-in-quart：四次方加速缓动函数，动画开始时缓慢，然后逐渐加速到最后。</li><li>ease-out-quart：四次方减速缓动函数，动画开始时快速，然后逐渐减速到最后。</li><li>ease-in-out-quart：四次方先加速后减速缓动函数，动画开始时缓慢，然后加速到一半，然后逐渐减速到最后。</li></ol>`,36);function A(_,S){const s=r("ExternalLinkIcon");return v(),h("div",null,[g,b,f,n("p",null,[n("a",y,[a("Animate On Scroll Library (AOS)"),k(s)]),a(" 是由 Michał Sajnóg 开发的库。该库的主要目标是检测元素的位置，然后在它们出现在视口中时为动画添加适当的类。")]),x])}const w=t(u,[["render",A],["__file","aos.html.vue"]]);export{w as default};
