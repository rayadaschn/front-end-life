const a=JSON.parse('{"key":"v-640e1125","path":"/JavaScript/JS13.html","title":"组件封装 1 组件的二次封装","lang":"zh-CN","frontmatter":{"title":"组件封装 1 组件的二次封装","icon":"javascript","date":"2024-02-03T00:00:00.000Z","category":["javascript"],"tag":["javascript"],"sticky":false},"headers":[{"level":2,"title":"组件的二次封装","slug":"组件的二次封装","link":"#组件的二次封装","children":[{"level":3,"title":"1. 属性的封装","slug":"_1-属性的封装","link":"#_1-属性的封装","children":[]},{"level":3,"title":"2. 插槽的封装","slug":"_2-插槽的封装","link":"#_2-插槽的封装","children":[]},{"level":3,"title":"3. 引用的封装","slug":"_3-引用的封装","link":"#_3-引用的封装","children":[]}]},{"level":2,"title":"封装组件的传参","slug":"封装组件的传参","link":"#封装组件的传参","children":[]}],"git":{"createdTime":1706958349000,"updatedTime":1707444267000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":3.28,"words":985},"filePathRelative":"JavaScript/JS13.md","localizedDate":"2024年2月3日","excerpt":"<p>本文旨在总结在 vue 中的封装基础逻辑思路。</p>\\n<h2> 组件的二次封装</h2>\\n<p>在 Vue 中，对组件进行二次封装主要涉及三个方面：属性（Attributes）、插槽（Slots）以及引用（Ref）的封装。</p>\\n<h3> 1. 属性的封装</h3>\\n<p>利用 Vue 的 <code>$attrs</code>，可以轻松获取父组件传递的所有属性，通过使用 <code>v-bind</code>，可以将所有属性绑定到子组件上，无需逐个添加。</p>\\n<div class=\\"language-vue line-numbers-mode\\" data-ext=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>BaseComponent</span> <span class=\\"token attr-name\\">v-bind</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>$attrs<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
