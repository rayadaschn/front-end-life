import{_ as e,Z as p,a0 as o,F as c,a1 as l,X as i,Y as u,$ as d}from"./framework-97fa2d96.js";const r={},n=p,s=o,k=c,v=l,a=d,m=i,b=u,g=a(`<h2 id="dom-是什么" tabindex="-1"><a class="header-anchor" href="#dom-是什么" aria-hidden="true">#</a> DOM 是什么？</h2><p>DOM 全称叫 <code>Document Object Model</code>，中文叫文档对象模型。实际上就是一种对象，但是宿主对象。</p><p>在 JavaScript 中，有三种对象：</p><ol><li>本地对象: <ol><li>Object、Function、Array、String、Number 和 Boolean；</li><li>Error、EvalError、SyntaxError、RangeError、ReferenceError、TypeError、URIError；</li><li>本地对象是 JavaScript 语言内置的，它们提供基本的操作和功能。</li></ol></li><li>内置对象: <ol><li>Global、Math；</li><li>内置对象是本地对象的一种，它提供了一些基本的操作和功能。</li></ol></li><li>宿主对象: <ol><li>宿主对象是运行时环境提供的对象，比如浏览器提供的 window（BOM）、document（DOM） 等对象；</li><li>宿主对象是本地对象的一种，它提供了一些基本的操作和功能。</li></ol></li></ol><p>本地对象和内置对象都是 ECMAScript 规范中定义的内部对象，而宿主对象则是运行时环境提供的，即浏览器提供，所以 DOM 存在兼容性问题。</p><p>DOM 存在的意义是，通过浏览器提供的这一套方法去<strong>表示</strong>或<strong>操作</strong> HTML 页面，使得我们可以通过 JavaScript 去操作 HTML 页面。</p><h2 id="dom-节点" tabindex="-1"><a class="header-anchor" href="#dom-节点" aria-hidden="true">#</a> DOM 节点</h2><p>DOM 节点是 DOM 树中的一个节点，它表示文档中的一个元素、文本或注释等。DOM 节点具有以下特征：</p><ol><li>每个节点都有一个父节点；</li><li>每个节点可以有零个或多个子节点；</li><li>每个节点可以有零个或多个兄弟节点；</li><li>每个节点都有一个节点类型（NodeType）；</li></ol><p>节点选择:</p><ol><li>document.getElementById()：通过元素的 id 属性获取元素；</li><li>document.getElementsByTagName()：通过元素的标签名获取元素；</li><li>document.getElementsByClassName()：通过元素的 class 属性获取元素；</li><li>document.querySelector()：通过选择器获取元素；</li><li>document.querySelectorAll()：通过选择器获取所有元素；</li><li>document.createElement()：创建元素；</li><li>document.createTextNode()：创建文本节点；</li></ol><blockquote><p>值得注意的是，一般不建议直接使用 querySelector 和 querySelectorAll，而建议使用 getElementByTagName 等来获取。原因在于 querySelector 的性能问题，以及它获取的元素并不是实时的。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> queryDivs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> getPs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queryDivs<span class="token punctuation">)</span> <span class="token comment">// 返回完整列表</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>getPs<span class="token punctuation">)</span> <span class="token comment">// 返回完整列表</span>

<span class="token comment">// 元素删除</span>
queryDivs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
getPs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>queryDivs<span class="token punctuation">)</span> <span class="token comment">// 返回依旧是完整列表</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>getPs<span class="token punctuation">)</span> <span class="token comment">// 返回删除元素后的列表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>区分元素、元素节点</p><p>像在 document 文档中的 <code>&lt;div&gt;我是元素&lt;/div&gt;</code> 这样的标签实际上是元素; 而元素节点是由元素构造出来的, 并且才会有 nodeName、nodeType、nodeValue 这些属性。 即： 元素 div -&gt; 构造函数实例化 <code>new HTMLDivElement()</code> 将 div DOM 对象存储到了内存中 --&gt; 并由此产生了 div 节点。 此时会有一个现象，当我们操作 <code>removeChild(div)</code> 时, 只是删除了节点，但是内存中还是会有这个 DOM 对象。</p></blockquote><h2 id="遍历元素节点树" tabindex="-1"><a class="header-anchor" href="#遍历元素节点树" aria-hidden="true">#</a> 遍历元素节点树</h2><p>节点包含元素，元素节点就是 DOM 元素。</p><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202404212133176.png" alt="DOM 结构树" tabindex="0" loading="lazy"><figcaption>DOM 结构树</figcaption></figure><p>节点的类型其实很多，并不止上文所述那么简单。一个子节点可能有如下类型：</p><ul><li>元素节点：<code>nodeType</code> 为 1，<code>nodeName</code> 为大写的标签名，<code>nodeValue</code> 为 <code>null</code>；</li><li>属性节点：<code>nodeType</code> 为 2，<code>nodeName</code> 为属性的名称，<code>nodeValue</code> 为属性的值；</li><li>文本节点：<code>nodeType</code> 为 3，<code>nodeName</code> 为 <code>#text</code>，<code>nodeValue</code> 为文本内容，注意换行也算文本节点<code>\\n</code>，可以用 <code>hasChildNodes()</code> 来检测；</li><li>注释节点：<code>nodeType</code> 为 8，<code>nodeName</code> 为 <code>#comment</code>，<code>nodeValue</code> 为注释内容；</li><li>文档节点：<code>nodeType</code> 为 9，<code>nodeName</code> 为 <code>#document</code>，<code>nodeValue</code> 为 <code>null</code>；</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token punctuation">{</span>
  <span class="token comment">/* 
  &lt;li&gt;
    &lt;a&gt;a 标签&lt;/a&gt;
    &lt;p&gt;p 标签&lt;/p&gt;
    &lt;h1&gt;h1 标签&lt;/h1&gt;
  &lt;/li&gt; 
  */</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>li<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 返回结果是 6 !!! 并不是 3, 原因在于还有很多其它的节点, 如 文本等</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遍历节点树的方法:</p><ul><li><code>node.childNodes</code>：返回子节点列表；</li><li><code>node.firstChild</code>：返回第一个子节点；</li><li><code>node.lastChild</code>：返回最后一个子节点；</li><li><code>node.nextSibling</code>：返回下一个兄弟节点；</li><li><code>node.previousSibling</code>：返回上一个兄弟节点；</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment">// 获取第一个子节点</span>
<span class="token keyword">const</span> firstChild <span class="token operator">=</span> li<span class="token punctuation">.</span>firstChild

<span class="token comment">// 获取最后一个子节点</span>
<span class="token keyword">const</span> lastChild <span class="token operator">=</span> li<span class="token punctuation">.</span>lastChild

<span class="token comment">// 获取下一个兄弟节点</span>
<span class="token keyword">const</span> nextSibling <span class="token operator">=</span> li<span class="token punctuation">.</span>nextSibling

<span class="token comment">// 获取上一个兄弟节点</span>
<span class="token keyword">const</span> previousSibling <span class="token operator">=</span> li<span class="token punctuation">.</span>previousSibling

<span class="token comment">// 获取子节点列表</span>
<span class="token keyword">const</span> childNodes <span class="token operator">=</span> li<span class="token punctuation">.</span>childNodes

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>firstChild<span class="token punctuation">)</span> <span class="token comment">// 返回第一个子节点</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lastChild<span class="token punctuation">)</span> <span class="token comment">// 返回最后一个子节点</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nextSibling<span class="token punctuation">)</span> <span class="token comment">// 返回下一个兄弟节点</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>previousSibling<span class="token punctuation">)</span> <span class="token comment">// 返回上一个兄弟节点</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>childNodes<span class="token punctuation">)</span> <span class="token comment">// 返回子节点列表</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建节点" tabindex="-1"><a class="header-anchor" href="#创建节点" aria-hidden="true">#</a> 创建节点</h2><p>创建节点的方法:</p><ul><li><code>document.createElement(tagName)</code>：创建一个元素节点；</li><li><code>document.createTextNode(text)</code>：创建一个文本节点；</li><li><code>document.createComment(text)</code>：创建一个注释节点；</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment">// 创建一个元素节点</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 创建一个文本节点</span>
<span class="token keyword">const</span> text <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token string">&#39;a 标签&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 创建一个注释节点</span>
<span class="token keyword">const</span> comment <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createComment</span><span class="token punctuation">(</span><span class="token string">&#39;注释节点&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 将元素节点添加到 li 元素中</span>
li<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment">// 将文本节点添加到 li 元素中</span>
li<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>

<span class="token comment">// 将注释节点添加到 li 元素中</span>
li<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>踩坑点: JavaScript 实际上是对节点进行管理。</p><p>如通常用 <code>document.body.appendChild(div)</code> 会在文档末尾添加节点，但是若该节点是文档中原本就有的，此时就不是添加了，而是<strong>剪切节点</strong>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>

div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&lt;p&gt;第一段新增段落标签&lt;/p&gt;&#39;</span>

<span class="token comment">// 此方法是文档末尾添加 div</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span>

<span class="token comment">// 此方法是剪切节点，即从文档中剪切出来，然后添加到 div 标签中, 因为 a 标签是原来就有的</span>
div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="插入节点" tabindex="-1"><a class="header-anchor" href="#插入节点" aria-hidden="true">#</a> 插入节点</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>parentDiv<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> referenceNode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>parentDiv</code>：要插入的父节点；</li><li><code>newNode</code>：要插入的节点；</li><li><code>referenceNode</code>：要插入的参考节点。</li></ul><p>即在父级 <code>parentDiv</code> 节点下的子节点 <code>referenceNode</code> 之前插入新的节点 \`newN</p><h2 id="操作元素位置" tabindex="-1"><a class="header-anchor" href="#操作元素位置" aria-hidden="true">#</a> 操作元素位置</h2><h3 id="浏览器的怪异模式和标准模式" tabindex="-1"><a class="header-anchor" href="#浏览器的怪异模式和标准模式" aria-hidden="true">#</a> 浏览器的怪异模式和标准模式</h3><p>虽然 ie 已经淘汰了，但是还是可以过一遍。</p>`,35),h={href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/compatMode",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"document.compatMode",-1),y=n("code",null,"CSS1Compat",-1),w=n("code",null,"BackCompat",-1),x=n("code",null,"<!DOCTYPE html>",-1),q=a(`<h3 id="可视宽高" tabindex="-1"><a class="header-anchor" href="#可视宽高" aria-hidden="true">#</a> 可视宽高</h3><p><strong>两种模式下的浏览器可视区域尺寸(窗口的宽高)</strong>:</p><p>常规: <code>window.innerWidth/innerHeight</code>;</p><p>IE9/IE8 及以下: <code>document.documentElement.clientWidth/clientHeight</code>;</p><p>怪异模式: <code>document.body.clientWidth/clientHeight</code>。</p><p>封装一个获取窗口的宽高方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getViewSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 兼容 ie 及 怪异模式</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>compatMode <span class="token operator">===</span> <span class="token string">&#39;BackCompat&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 怪异模式</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// IE9/IE8 及以下</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>现代浏览器中的 <code>window.innerWidth/innerHeight</code> 是视口宽高，还有一个属性是 <code>window.outerWidth/outerHeight</code> 会比这个视口宽高大一点，它还包括浏览器的菜单栏、工具栏、滚动条等的大小。</p></blockquote><h3 id="查看滚动条距离" tabindex="-1"><a class="header-anchor" href="#查看滚动条距离" aria-hidden="true">#</a> 查看滚动条距离</h3><p>常规方法: <code>window.pageXOffset</code> 和 <code>window.pageYOffset</code>;</p><p>IE9/IE8 以下: <code>document.body.scrollLeft</code> 和 <code>document.body.scrollTop</code>。</p><blockquote><p>滚动条的距离是缩放距离, 而不是实际距离！！！值是页面实际滚动的距离。</p><p>window.pageYOffset === window.scrollY; // 永远相等</p></blockquote><p>封装一个获取滚动条的距离方法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>pageXOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> window<span class="token punctuation">.</span>pageXOffset<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> window<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// 兼容 ie 等怪异浏览器，因为下述方法只可用其一，另一值为 0，所以相加判断</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="整个页面的宽高" tabindex="-1"><a class="header-anchor" href="#整个页面的宽高" aria-hidden="true">#</a> 整个页面的宽高</h3><p>常规: <code>document.body.scrollHeight/scrollWidth</code>;</p><p>兼容写法: <code>document.documentElement.scrollHeight/scrollWidth</code>。</p><blockquote><p>值得注意的是, 这俩种写法可能都同时存在。</p></blockquote><p>这个 scrollWidth 实际上等于 <code>widow.innerWidth</code> + <code>widow.pageXOffset</code>，及就是整个页面的实际宽度。</p><p>封装方法:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getScrollSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素相对位置" tabindex="-1"><a class="header-anchor" href="#元素相对位置" aria-hidden="true">#</a> 元素相对位置</h3><p>获取元素位置的方法:</p><ul><li><code>element.offsetLeft</code>：返回元素相对于其<strong>定位父元素</strong>的水平偏移量；</li><li><code>element.offsetTop</code>：返回元素相对于其<strong>定位父元素</strong>的垂直偏移量；</li><li><code>element.offsetParent</code>：返回元素的<strong>定位父元素</strong>；</li><li><code>element.offsetWidth</code>：返回元素的宽度（包括内边距、滚动条和边框）；</li><li><code>element.offsetHeight</code>：返回元素的高度（包括内边距、滚动条和边框）；</li><li><code>element.offsetParent</code>：返回元素的<strong>定位父元素</strong>；</li></ul><p>获取元素定位方法:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getElementPosition</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> parent <span class="token operator">=</span> el<span class="token punctuation">.</span>offsetParent
  <span class="token keyword">let</span> offsetLeft <span class="token operator">=</span> el<span class="token punctuation">.</span>offsetLeft
  <span class="token keyword">let</span> offsetTop <span class="token operator">=</span> el<span class="token punctuation">.</span>offsetTop

  <span class="token comment">// 递归向上遍历</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    offsetLeft <span class="token operator">+=</span> parent<span class="token punctuation">.</span>offsetLeft
    offsetTop <span class="token operator">+=</span> parent<span class="token punctuation">.</span>offsetTop
    parent <span class="token operator">=</span> parent<span class="token punctuation">.</span>offsetParent
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">left</span><span class="token operator">:</span> offsetLeft<span class="token punctuation">,</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span> offsetTop<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="封装获取元素位置" tabindex="-1"><a class="header-anchor" href="#封装获取元素位置" aria-hidden="true">#</a> 封装获取元素位置</h3><p>首先鼠标点击的位置是基于页面左上角的，即：</p><ol><li>clientX/clientY: 鼠标点击位置相对于<strong>页面</strong>左上角的距离(不包括滚动条距离);</li><li>pageX/pageY: 鼠标点击位置相对于<strong>页面</strong>左上角的距离，加上滚动条滚动的距离;</li><li>screenX/screenY: 鼠标点击位置相对于<strong>屏幕</strong>左上角的距离(浏览器在屏幕上也会移动);</li><li>offsetX/offsetY: 鼠标点击位置相对于<strong>元素</strong>左上角的距离;</li><li>x/y: 同 clientX/clientY 相同,但火狐浏览器不支持;</li><li>layerX/layerY: 同 pageX/pageY 相同,但 IE 浏览器不支持;</li></ol><p>封装方法:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 获取滚动条距离 */</span>
<span class="token keyword">function</span> <span class="token function">getScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>pageXOffset<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">left</span><span class="token operator">:</span> window<span class="token punctuation">.</span>pageXOffset<span class="token punctuation">,</span>
      <span class="token literal-property property">top</span><span class="token operator">:</span> window<span class="token punctuation">.</span>pageYOffset<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">left</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
      <span class="token literal-property property">top</span><span class="token operator">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">+</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getPagePosition</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> sLeft <span class="token operator">=</span> <span class="token function">getScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span>
    sTop <span class="token operator">=</span> <span class="token function">getScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">,</span>
    <span class="token comment">// 浏览器中页面偏移量, 普通为 8px 像素</span>
    cLeft <span class="token operator">=</span>
      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientLeft <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientLeft <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
    cTop <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientTop <span class="token operator">||</span> <span class="token number">0</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> e<span class="token punctuation">.</span>clientX <span class="token operator">+</span> sLeft <span class="token operator">-</span> cLeft<span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> e<span class="token punctuation">.</span>clientY <span class="token operator">+</span> sTop <span class="token operator">-</span> cTop<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="移动元素" tabindex="-1"><a class="header-anchor" href="#移动元素" aria-hidden="true">#</a> 移动元素</h3><p>基础方法: <code>window.scroll(x, y)</code> 和 <code>window.scrollTo(x, y)</code> 俩种方法效果一直, 相对于页面原点<code>(0,0)</code>移动到指定位置;</p><p>还有一个现对于自身位置进行移动: <code>window.scrollBy(x ,y)</code>。</p><p>判断是否滚动到底部: <code>window.pageYOffset + window.innerHeight === document.body.scrollHeight</code>。即可视高度加上滚动条滚动距离为页面高度。</p><h2 id="dom-间接操作-css" tabindex="-1"><a class="header-anchor" href="#dom-间接操作-css" aria-hidden="true">#</a> DOM 间接操作 CSS</h2><p>先来看一个踩坑点: DOM 是无法直接操作 CSS 样式表的，它操作的是标签 style li 的属性。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">.box</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;初始 width:&#39;</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token comment">// 返回初始 width: undefined</span>

      box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">&#39;200px&#39;</span> <span class="token comment">// 更改标签上 style 属性, 变成内联样式</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;内联 width:&#39;</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token comment">// 返回内联 width: 200px</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，上面的初始 width 返回的是 <code>undefined</code>，而更改后的内联样式返回的是 <code>200px</code>。</p><p>所以 DOM 是无法直接获取操作 CSS 样式表的。</p><p>书写 style 的内联样式时，注意事项：</p><ol><li>所有属性要用小驼峰格式书写，且值都是字符串;</li><li>若是复合值，则进行拆解，分成一个一个的样式;</li><li>保留字问题，遇到保留字，则在前面加上 css，并用小驼峰格式书写。如 <code>oBox.style.float = &#39;left&#39;</code> 应当写成 <code>oBox.style.cssFloat = &#39;left&#39;</code>。实际上只有 float 需要如此。</li></ol><h3 id="查看计算-css-值" tabindex="-1"><a class="header-anchor" href="#查看计算-css-值" aria-hidden="true">#</a> 查看计算 css 值</h3><p>方法: <code>window.getComputedStyle(element, [pseudoElt])</code>;</p><p>参数:</p><ul><li><code>element</code>：要获取计算样式的元素;</li><li><code>pseudoElt</code>：【只读】伪元素，可选参数，传则获取伪元素的样式，不传则返回元素计算后的样式。</li></ul><p>返回值: 计算后的样式对象。但 ie8 及以下不支持。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> style <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token comment">// 返回 100px</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="封装页面拖拽函数" tabindex="-1"><a class="header-anchor" href="#封装页面拖拽函数" aria-hidden="true">#</a> 封装页面拖拽函数</h2><p>点击元素后，元素开始移动，直到松开鼠标。</p><p>简单实现:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>点击移动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span>
      <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        height: 200px;
        width: 200px;
        background-color: red;
        position: absolute;
        left: 0;
        top: 0;
      <span class="token punctuation">&quot;</span></span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span>

      box<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetLeft
        <span class="token keyword">let</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> box<span class="token punctuation">.</span>offsetTop

        document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> x <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
          box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> y <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
        <span class="token punctuation">}</span>

        document<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token keyword">null</span>
          document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>封装成函数:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>点击移动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span>
      <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        height: 200px;
        width: 200px;
        background-color: red;
        position: absolute;
        left: 0;
        top: 0;
      <span class="token punctuation">&quot;</span></span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.box&#39;</span><span class="token punctuation">)</span>

      <span class="token comment">// box.onmousedown = function (e) {</span>
      <span class="token comment">//   let x = e.pageX - box.offsetLeft;</span>
      <span class="token comment">//   let y = e.pageY - box.offsetTop;</span>

      <span class="token comment">//   document.onmousemove = function (e) {</span>
      <span class="token comment">//     box.style.left = e.pageX - x + &quot;px&quot;;</span>
      <span class="token comment">//     box.style.top = e.pageY - y + &quot;px&quot;;</span>
      <span class="token comment">//   };</span>

      <span class="token comment">//   document.onmouseup = function () {</span>
      <span class="token comment">//     document.onmousemove = null;</span>
      <span class="token comment">//     document.onmouseup = null;</span>
      <span class="token comment">//   };</span>
      <span class="token comment">// };</span>

      <span class="token keyword">function</span> <span class="token function">elemDrag</span><span class="token punctuation">(</span><span class="token parameter">elem</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span>

        elem<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousedown&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event
          x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> elem<span class="token punctuation">.</span>offsetLeft
          y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> elem<span class="token punctuation">.</span>offsetTop

          document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> mouseMove<span class="token punctuation">)</span>
          document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mouseup&#39;</span><span class="token punctuation">,</span> mouseUp<span class="token punctuation">)</span>
          e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token keyword">function</span> <span class="token function">mouseMove</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          e <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event
          elem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX <span class="token operator">-</span> x <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
          elem<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> y <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function">mouseUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> mouseMove<span class="token punctuation">)</span>
          document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mouseup&#39;</span><span class="token punctuation">,</span> mouseUp<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token function">elemDrag</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,54);function E(T,S){const t=k("ExternalLinkIcon");return m(),b("div",null,[g,n("p",null,[s("标准模式和怪异模式的判断方法: "),n("a",h,[f,v(t)]),s(" 该属性若返回 "),y,s(" 则为标准模式，若返回 "),w,s(" 则为怪异模式。实际上就是浏览器在检测是否有 "),x,s(" 标签，若有则使用 W3C 的规范，若无则使用浏览器自己的规范，较老浏览器可能产生怪异模式。")]),q])}const O=e(r,[["render",E],["__file","DOM01.html.vue"]]);export{O as default};
