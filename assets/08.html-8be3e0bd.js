const e=JSON.parse('{"key":"v-624d8260","path":"/OneMoreThing/interview/08.html","title":"Interview -- JS 进阶","lang":"zh-CN","frontmatter":{"title":"Interview -- JS 进阶","icon":"note","date":"2023-08-11T00:00:00.000Z","category":["anonymous"],"tag":["note"],"star":false,"sticky":false},"headers":[{"level":2,"title":"函数声明和函数表达式的区别","slug":"函数声明和函数表达式的区别","link":"#函数声明和函数表达式的区别","children":[]},{"level":2,"title":"new Object() 和 Object.create() 的区别","slug":"new-object-和-object-create-的区别","link":"#new-object-和-object-create-的区别","children":[]},{"level":2,"title":"手写字符串 trim 方法，保证浏览器兼容性","slug":"手写字符串-trim-方法-保证浏览器兼容性","link":"#手写字符串-trim-方法-保证浏览器兼容性","children":[]},{"level":2,"title":"如何捕获 JS 中的异常","slug":"如何捕获-js-中的异常","link":"#如何捕获-js-中的异常","children":[]},{"level":2,"title":"解析 url 参数","slug":"解析-url-参数","link":"#解析-url-参数","children":[]},{"level":2,"title":"Map 和 Object 的区别","slug":"map-和-object-的区别","link":"#map-和-object-的区别","children":[]},{"level":2,"title":"Set 和 Array 的区别","slug":"set-和-array-的区别","link":"#set-和-array-的区别","children":[]},{"level":2,"title":"WeakMap 和 WeakSet","slug":"weakmap-和-weakset","link":"#weakmap-和-weakset","children":[]},{"level":2,"title":"for-in 遍历对象的可枚举性","slug":"for-in-遍历对象的可枚举性","link":"#for-in-遍历对象的可枚举性","children":[]}],"git":{"createdTime":1705126883000,"updatedTime":1705126883000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.71,"words":2314},"filePathRelative":"OneMoreThing/interview/08.md","localizedDate":"2023年8月11日","excerpt":"<h2> 函数声明和函数表达式的区别</h2>\\n<ul>\\n<li>函数声明 <code>function fn() {}</code></li>\\n<li>函数表达式 <code>const fn = function() {}</code></li>\\n<li>函数声明会在代码执行前预加载，而函数表达式不会;</li>\\n<li>函数声明无法立即执行，函数表达式可以通过添加括号或调用立即执行。</li>\\n</ul>\\n<h2> new Object() 和 Object.create() 的区别</h2>\\n<ul>\\n<li><code>{}</code> 等同于 <code>new Object()</code>，原型均为 <code>Object.prototype</code>；</li>\\n<li><code>Object.create(null)</code> 没有原型，为空对象;</li>\\n<li><code>Object.create({...})</code> 可指定原型，并以此为原型返回一个“空对象”。</li>\\n</ul>"}');export{e as data};
