const t=JSON.parse(`{"key":"v-9d590286","path":"/JavaScript/%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E5%9F%8B%E7%82%B9%E5%AE%9E%E7%8E%B0.html","title":"前端代码埋点实现","lang":"zh-CN","frontmatter":{"title":"前端代码埋点实现","icon":"javascript","order":7,"category":["javascript"],"tag":["javascript"],"description":"前端代码埋点实现 1. 环境及需求介绍 环境： Vue2.7 需求：全页面访问、事件点击等全监听 2. 封装逻辑 由于需要监听页面访问事件，为了统一封装，我们将用到 Mixins 混入监听页面的生命周期； 所有的事件发送参数分为公参和特定事件参数，因此我们需要将公参数据进行提取，统一修改。 埋点的核心逻辑，用到的是 GIF 请求发送 使用 GIF 请求发送的原因其实很好理解：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front-end-life/JavaScript/%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E5%9F%8B%E7%82%B9%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"Huy's Blog"}],["meta",{"property":"og:title","content":"前端代码埋点实现"}],["meta",{"property":"og:description","content":"前端代码埋点实现 1. 环境及需求介绍 环境： Vue2.7 需求：全页面访问、事件点击等全监听 2. 封装逻辑 由于需要监听页面访问事件，为了统一封装，我们将用到 Mixins 混入监听页面的生命周期； 所有的事件发送参数分为公参和特定事件参数，因此我们需要将公参数据进行提取，统一修改。 埋点的核心逻辑，用到的是 GIF 请求发送 使用 GIF 请求发送的原因其实很好理解："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-03T07:59:18.000Z"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-03-03T07:59:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端代码埋点实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-03T07:59:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. 环境及需求介绍","slug":"_1-环境及需求介绍","link":"#_1-环境及需求介绍","children":[]},{"level":2,"title":"2. 封装逻辑","slug":"_2-封装逻辑","link":"#_2-封装逻辑","children":[]},{"level":2,"title":"3. 封装基础库","slug":"_3-封装基础库","link":"#_3-封装基础库","children":[]}],"git":{"createdTime":1675926038000,"updatedTime":1677830358000,"contributors":[{"name":"Huy","email":"rayadaschn@gmail.com","commits":3},{"name":"rayadaschn","email":"rayadaschn@gmail.com","commits":1}]},"readingTime":{"minutes":4.28,"words":1285},"filePathRelative":"JavaScript/前端代码埋点实现.md","localizedDate":"2023年2月9日","excerpt":"<h1> 前端代码埋点实现</h1>\\n<h2> 1. 环境及需求介绍</h2>\\n<ul>\\n<li>环境： <code>Vue2.7</code></li>\\n<li>需求：全页面访问、事件点击等全监听</li>\\n</ul>\\n<h2> 2. 封装逻辑</h2>\\n<ul>\\n<li>由于需要监听页面访问事件，为了统一封装，我们将用到 <code>Mixins</code> 混入监听页面的生命周期；</li>\\n<li>所有的事件发送参数分为公参和特定事件参数，因此我们需要将公参数据进行提取，统一修改。</li>\\n<li>埋点的核心逻辑，用到的是 GIF 请求发送</li>\\n</ul>\\n<p>使用 GIF 请求发送的原因其实很好理解：</p>","autoDesc":true}`);export{t as data};
