const n=JSON.parse(`{"key":"v-f34c8598","path":"/JavaScript/JS/JS32.html","title":"封装一个简易 fetch 请求库","lang":"zh-CN","frontmatter":{"title":"封装一个简易 fetch 请求库","icon":"javascript","date":"2025-02-26T00:00:00.000Z","category":["javascript"],"tag":["javascript"],"sticky":false},"headers":[],"git":{"createdTime":1740577151000,"updatedTime":1740577151000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.94,"words":581},"filePathRelative":"JavaScript/JS/JS32.md","localizedDate":"2025年2月26日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token doc-comment comment\\">/**\\n * 封装一个 fetch 请求\\n * url 请求地址\\n * method 请求方式 * GET POST PUT DELETE OPTIONS\\n * credentials 携带资源凭证 * include same-origin * omit * credentials\\n * headers: null 自定义的请求头信息 「格式必须是纯粹对象」\\n * body：null 请求主体信息「只针对 POST 系列请求， 根据当前服务器要求，如果用户传递的是一个纯粹对象, 则需要把其变为 urlencoded 格式字符串(设定请求头中的 Content-Type) 」\\n * params: null 设定问号传参信息「格式必须是纯粹对象, 在内部把其拼接到 url 的末尾」\\n * responseType: 'json' 请求响应的数据类型 * json text blob arrayBuffer\\n * timeout: 5000 请求超时时间\\n * signal: 中断请求的信号\\n */</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">http</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">config</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> config <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span> config <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n  config <span class=\\"token operator\\">=</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">assign</span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">url</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">method</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'GET'</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">credentials</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'include'</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">headers</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">body</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">params</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">responseType</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'json'</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">timeout</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">5000</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token literal-property property\\">signal</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    config\\n  <span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// 必要参数判断</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>config<span class=\\"token punctuation\\">.</span>url<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'url is required'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> config<span class=\\"token punctuation\\">.</span>headers <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span> config<span class=\\"token punctuation\\">.</span>headers <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>config<span class=\\"token punctuation\\">.</span>params <span class=\\"token operator\\">!==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">typeof</span> config<span class=\\"token punctuation\\">.</span>params <span class=\\"token operator\\">!==</span> <span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span>\\n    config<span class=\\"token punctuation\\">.</span>params <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span>\\n\\n  <span class=\\"token comment\\">// 处理细节</span>\\n  <span class=\\"token keyword\\">let</span> <span class=\\"token punctuation\\">{</span>\\n    url<span class=\\"token punctuation\\">,</span>\\n    method<span class=\\"token punctuation\\">,</span>\\n    credentials<span class=\\"token punctuation\\">,</span>\\n    headers<span class=\\"token punctuation\\">,</span>\\n    body<span class=\\"token punctuation\\">,</span>\\n    params<span class=\\"token punctuation\\">,</span>\\n    responseType<span class=\\"token punctuation\\">,</span>\\n    timeout<span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> config\\n\\n  <span class=\\"token comment\\">// 处理问号传参</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>params<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> paramsStr <span class=\\"token operator\\">=</span> Object<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">keys</span><span class=\\"token punctuation\\">(</span>params<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">key</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>key<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">=</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>params<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'&amp;'</span><span class=\\"token punctuation\\">)</span>\\n    url <span class=\\"token operator\\">+=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>url<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'?'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">'&amp;'</span> <span class=\\"token operator\\">:</span> <span class=\\"token string\\">'?'</span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>paramsStr<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span> <span class=\\"token comment\\">// 拼接时是否带问号</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">// 处理请求主体信息</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> body <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    body <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">JSON</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stringify</span><span class=\\"token punctuation\\">(</span>body<span class=\\"token punctuation\\">)</span>\\n    headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Content-Type'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'application/json'</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">const</span> token <span class=\\"token operator\\">=</span> localStorage<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getItem</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'token'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'Authorization'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">Bearer </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>token<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token comment\\">// 超时处理</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>signal <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    signal <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">AbortController</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>signal\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">const</span> timeoutId <span class=\\"token operator\\">=</span> <span class=\\"token function\\">setTimeout</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    signal<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">abort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> timeout<span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token comment\\">// 发起请求</span>\\n  method <span class=\\"token operator\\">=</span> method<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toUpperCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n  config <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n    method<span class=\\"token punctuation\\">,</span>\\n    credentials<span class=\\"token punctuation\\">,</span>\\n    headers<span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">cache</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'no-cache'</span><span class=\\"token punctuation\\">,</span>\\n    signal<span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'POST'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'PUT'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'PATCH'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span>method<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    config<span class=\\"token punctuation\\">.</span>body <span class=\\"token operator\\">=</span> body\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span>url<span class=\\"token punctuation\\">,</span> config<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">response</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> status<span class=\\"token punctuation\\">,</span> statusText <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> response\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>status <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">200</span> <span class=\\"token operator\\">&amp;&amp;</span> status <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">300</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 请求成功</span>\\n        <span class=\\"token keyword\\">let</span> result\\n\\n        <span class=\\"token keyword\\">switch</span> <span class=\\"token punctuation\\">(</span>responseType<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toLowerCase</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'json'</span><span class=\\"token operator\\">:</span>\\n            result <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'text'</span><span class=\\"token operator\\">:</span>\\n            result <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">text</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'blob'</span><span class=\\"token operator\\">:</span>\\n            result <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">blob</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token string\\">'arraybuffer'</span><span class=\\"token operator\\">:</span>\\n            result <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">arrayBuffer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span>\\n            result <span class=\\"token operator\\">=</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token keyword\\">return</span> response<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">}</span>\\n\\n      <span class=\\"token comment\\">// 请求失败: HTTP 状态码失败</span>\\n      <span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">code</span><span class=\\"token operator\\">:</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span>\\n        status<span class=\\"token punctuation\\">,</span>\\n        statusText<span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">catch</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">reason</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> code<span class=\\"token punctuation\\">,</span> status <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> reason\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>code <span class=\\"token operator\\">===</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">switch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">+</span>status<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token number\\">401</span><span class=\\"token operator\\">:</span>\\n            console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'未授权，请重新登录！'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token number\\">403</span><span class=\\"token operator\\">:</span>\\n            console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'禁止访问！'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token number\\">404</span><span class=\\"token operator\\">:</span>\\n            console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'请求的资源不存在！'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">case</span> <span class=\\"token number\\">500</span><span class=\\"token operator\\">:</span>\\n            console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'服务器内部错误，请稍后再试！'</span><span class=\\"token punctuation\\">)</span>\\n            <span class=\\"token keyword\\">break</span>\\n          <span class=\\"token keyword\\">default</span><span class=\\"token operator\\">:</span>\\n            console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'当前网络繁忙，请稍后再试！'</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">return</span> Promise<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reject</span><span class=\\"token punctuation\\">(</span>reason<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 快捷方法</span>\\n<span class=\\"token comment\\">// [\\"GET\\", \\"HEAD\\", \\"DELETE\\", \\"OPTIONS\\"].forEach(method =&gt; {</span>\\n<span class=\\"token comment\\">//   http[method.toLowerCase()] = function(url, config) {</span>\\n<span class=\\"token comment\\">//     if (typeof config !== 'object') {</span>\\n<span class=\\"token comment\\">//       config['url'] = url</span>\\n<span class=\\"token comment\\">//       config['method'] = method</span>\\n<span class=\\"token comment\\">//       return http(config)</span>\\n<span class=\\"token comment\\">//     }</span>\\n<span class=\\"token comment\\">//   }</span>\\n<span class=\\"token comment\\">// })</span>\\n\\n<span class=\\"token comment\\">// [\\"POST\\", \\"PUT\\", \\"PATCH\\"].forEach(method =&gt; {</span>\\n<span class=\\"token comment\\">//   http[method.toLowerCase()] = function(url, body, config) {</span>\\n<span class=\\"token comment\\">//     if (typeof config !== 'object') {</span>\\n<span class=\\"token comment\\">//       config['url'] = url</span>\\n<span class=\\"token comment\\">//       config['method'] = method</span>\\n<span class=\\"token comment\\">//       config[\\"body\\"] = body;</span>\\n<span class=\\"token comment\\">//       return http(config)</span>\\n<span class=\\"token comment\\">//     }</span>\\n<span class=\\"token comment\\">//   }</span>\\n<span class=\\"token comment\\">// })</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> http\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
