import{_ as e,Z as d,a0 as o,F as p,a1 as i,X as r,Y as l,$ as c}from"./framework-97fa2d96.js";const u={},t=d,n=o,m=p,h=i,a=c,k=r,x=l,g=a('<h2 id="总结规律" tabindex="-1"><a class="header-anchor" href="#总结规律" aria-hidden="true">#</a> 总结规律</h2><ul><li>默认尺寸的是 <code>1rem = 4px</code>，所以具体尺寸可以将数字乘以 4 为实际尺寸大小；</li><li>间距的通用公式：<code>{p|m|width|height|max-w|min-h|gap|inset|space}-[number]</code>，若是负间距则在类名前加负号。<code>p</code> 和 <code>m</code> 为 padding 和 margin 的缩写；</li><li>间距方向 x 表示水平，y 表示垂直方向，s 表示 start，e 表示 end，t 表示 top，b 表示 bottom，使用公式如：<code>p{x|y|t|r|b|l|s|e}-[number]</code>；</li><li>数值，可用分数表示百分比，另有特殊字符如 full 表示 100%，screen 表示屏幕视口因此有通用公式：<code>w-{2/5|full|screen|min|max}</code>等；</li><li>任意值可以用中括号<code>[]</code>书写属性值如 <code>p-[5px]</code> 表示间距为 5px。</li></ul>',2),b={href:"https://tailwindcss.com/docs/customizing-spacing",target:"_blank",rel:"noopener noreferrer"},v=a(`<h2 id="默认配置" tabindex="-1"><a class="header-anchor" href="#默认配置" aria-hidden="true">#</a> 默认配置</h2><p>先看部分默认基础尺寸对照表：</p><table><thead><tr><th>Name</th><th>Size</th><th>Pixels</th></tr></thead><tbody><tr><td>0</td><td>0px</td><td>0px</td></tr><tr><td>px</td><td>1px</td><td>1px</td></tr><tr><td>0.5</td><td>0.125rem</td><td>2px</td></tr><tr><td>1</td><td>0.25rem</td><td>4px</td></tr><tr><td>1.5</td><td>0.375rem</td><td>6px</td></tr><tr><td>2</td><td>0.5rem</td><td>8px</td></tr><tr><td>2.5</td><td>0.625rem</td><td>10px</td></tr><tr><td>3</td><td>0.75rem</td><td>12px</td></tr><tr><td>3.5</td><td>0.875rem</td><td>14px</td></tr><tr><td>4</td><td>1rem</td><td>16px</td></tr><tr><td>5</td><td>1.25rem</td><td>20px</td></tr><tr><td>6</td><td>1.5rem</td><td>24px</td></tr></tbody></table><p>从上大概可以看出，默认配置中是 <code>1rem = 4px</code>，所以也允许小数的存在。</p><p>若需要自定义覆盖设置，则需要在 <code>tailwind.config.js</code> 中的 <code>theme.spacing</code> 中进行自定义：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// tailwind.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">spacing</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;8px&#39;</span><span class="token punctuation">,</span>
      <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;12px&#39;</span><span class="token punctuation">,</span>
      <span class="token number">3</span><span class="token operator">:</span> <span class="token string">&#39;16px&#39;</span><span class="token punctuation">,</span>
      <span class="token number">4</span><span class="token operator">:</span> <span class="token string">&#39;24px&#39;</span><span class="token punctuation">,</span>
      <span class="token number">5</span><span class="token operator">:</span> <span class="token string">&#39;32px&#39;</span><span class="token punctuation">,</span>
      <span class="token number">6</span><span class="token operator">:</span> <span class="token string">&#39;48px&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本规律" tabindex="-1"><a class="header-anchor" href="#基本规律" aria-hidden="true">#</a> 基本规律</h2><p>tailwind 在间距上还是有一定的规律的，默认情况下，间距比例由 padding、 margin、 width、 height、 maxHeight、 gap、 inset、 space 类名和 translate 核心插件继承。</p><blockquote><p>同样的，若为负值，则在类名前添加负号如：<code>-mx-1</code> 表示：<code>margin-left: -0.25rem; margin-right: -0.25rem;</code></p></blockquote><ul><li><p>Padding.(内间距)：</p><ul><li>&quot;p&quot;: padding，表示所有方向（上、右、下、左）的内边距。</li><li>&quot;py&quot;：表示上下方向的内边距（垂直方向）。</li><li>&quot;px&quot;：表示左右方向的内边距（水平方向）。</li><li>&quot;pt&quot;、&quot;pr&quot;、&quot;pb&quot;、&quot;pl&quot;：分别表示上、右、下、左方向的内边距。</li></ul></li><li><p>Margin（外边距）：通常使用类名&quot;m&quot;表示所有方向的外边距，以及&quot;mt&quot;、&quot;mr&quot;、&quot;mb&quot;、&quot;ml&quot;分别表示上、右、下、左方向的外边距。</p></li><li><p>Width（宽度）和 Height（高度）：这些属性默认以完整的名称表示，并<strong>没有对应的缩写形式</strong>。</p></li><li><p>Max Height（最大高度）：类名为&quot;max-h&quot;，后续可以跟尺寸值或命名尺寸（如&quot;max-h-64&quot;）。</p></li><li><p>Gap（间距）：类名为&quot;gap&quot;，可在其后加上具体数值或命名尺寸（如&quot;gap-4&quot;）。</p></li><li><p>Inset（插入内边距/定位）：有对应的缩写形式。例如，&quot;inset-x&quot;表示左右方位的插入内边距，&quot;inset-y&quot;表示上下方位的插入内边距。</p></li><li><p>Space（空间）：目前在 Tailwind CSS 中没有类似的缩写方式来指定空间相关的属性。</p></li><li><p>Translate（平移）：类名为&quot;translate-x&quot;和&quot;translate-y&quot;，分别表示水平和垂直方向的平移。</p></li></ul><h2 id="宽度" tabindex="-1"><a class="header-anchor" href="#宽度" aria-hidden="true">#</a> 宽度</h2><p>在宽度中，除了上述基础数字外，可能还经常能看见分数，转换成百分比即可。如： <code>w-2/5</code> 表示 <code>width: 40%;</code>。</p><p>还有一些特殊视口：</p><table><thead><tr><th><strong>Class</strong></th><th><strong>Properties</strong></th></tr></thead><tbody><tr><td>w-2/5</td><td>width: 40%;</td></tr><tr><td>w-full</td><td>width: 100%;</td></tr><tr><td>w-screen</td><td>width: 100vw;</td></tr><tr><td>w-min</td><td>width: min-content;</td></tr><tr><td>w-max</td><td>width: max-content;</td></tr><tr><td>min-w-0</td><td>min-width: 0px;</td></tr><tr><td>min-w-full</td><td>min-width: 100%;</td></tr><tr><td>min-w-min</td><td>min-width: min-content;</td></tr><tr><td>min-w-max</td><td>min-width: max-content;</td></tr></tbody></table><p>其余高度等都是类似书写，不再赘述。</p><h2 id="任意值" tabindex="-1"><a class="header-anchor" href="#任意值" aria-hidden="true">#</a> 任意值</h2><p>若想要一个元素是自定义的任意值可以使用类似 js 中的中括号<code>[]</code>书写属性值:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-[5px]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 表示间距为 5px --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function q(w,_){const s=m("ExternalLinkIcon");return k(),x("div",null,[g,t("blockquote",null,[t("p",null,[n("关于间距的详细介绍亦可参考"),t("a",b,[n("官网-间距"),h(s)])])]),v])}const y=e(u,[["render",q],["__file","TailwindCSS03.html.vue"]]);export{y as default};
