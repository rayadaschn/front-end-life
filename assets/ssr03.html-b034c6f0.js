import{_ as l,X as o,Z as p,$ as i,V as c,W as d,F as r,Y as u}from"./framework-2eee3422.js";const k={},e=o,n=p,g=r,s=i,a=u,v=c,f=d,m=a(`<h1 id="nuxt-3-之基础入门" tabindex="-1"><a class="header-anchor" href="#nuxt-3-之基础入门" aria-hidden="true">#</a> Nuxt 3 之基础入门</h1><h2 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由</h2><p>不同于常规的 Vue 项目是以 <code>index.js</code> 为项目的入口文件，Nuxt 将 <code>App.vue</code> 作为文件入口点，并为应用程序的每个路由展示内容。这是 Nuxt 的一个核心特性是文件系统路由器。<code>pages/</code> 目录中的每个 Vue 文件都会创建一个相应的 URL(或路由)来显示文件的内容。</p><blockquote><p>路由的嵌套: 路由的嵌套则直接是文件夹形式：pages 文件夹下新建子文件夹。</p></blockquote><ol><li><p>路由的占位：</p><p>同 Vue 一样，Nuxt 也是通过路由占位切换不同的页面。在 Vue 中是通过 <code>RouterView</code> ，而 Nuxt 为 <code>NuxtPage</code>。</p></li><li><p>路由的切换:</p><p>通常在 Nuxt 中是通过 <code>&lt;NuxtLink&gt;</code> 组件在它们之间链接页面。它呈现一个 <code>&lt;a&gt;</code> 标记，其中 href 属性设置为页面的路由。</p><p>当然可以通过 <code>navigateTo</code> 或者 <code>useRouter</code> 等函数式编程进行路由切换，但是这不利于 SEO 的解析。此时效果等同于 SPA 。</p></li><li><p>路由参数 params:</p><p>通过 <code>useRoute</code> 可以获取路由参数。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
  <span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 当访问 /posts/1, route.params.id 值为 1</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>导航守卫: 中间件 Middleware</p><p>在 Nuxt 中有一个中间件 Middleware 的概念。实际上就是导航守卫的作用。使用流程如下：</p><ul><li><p>创建 middleware 文件</p><p>在 Nuxt 项目中，在 <code>middleware</code> 目录下创建一个新的 JavaScript 文件。该文件将包含所有的 middleware 代码。例如，可以创建一个名为 <code>auth.js</code> 的新文件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// auth.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> store<span class="token punctuation">,</span> redirect <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 如果用户未经身份验证，则重定向到登录页面</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>loggedIn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们定义了一个名为 <code>auth</code> 的 middleware，用于确保用户已经登录。如果用户未经身份验证，则该函数将使用 <code>redirect</code> 方法将用户重定向到登录页面。</p></li><li><p>注册 middleware</p><p>在 Nuxt 中，可以在路由配置对象或页面组件中注册 middleware。例如，可以在 <code>nuxt.config.js</code> 文件中为全局路由注册 middleware：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">router</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">middleware</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;auth&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们将 <code>auth</code> middleware 注册为全局路由 middleware。这意味着每个路由都将使用该 middleware。</p><p>此外，我们还可以在路由配置对象或页面组件中注册 middleware。在页面组件中注册 middleware：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// page/xxx.vue</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">middleware</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;auth&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们将 <code>auth</code> middleware 注册为该页面组件的 middleware。这意味着该页面将使用该 middleware。</p></li><li><p>使用 middleware</p><p>现在，当用户访问需要身份验证的页面时，middleware 将运行并检查用户是否已经登录。如果用户未经身份验证，则 middleware 将将用户重定向到登录页面。</p><p>这就是使用 middleware 的基本步骤。你可以使用 middleware 完成许多任务，例如身份验证、页面初始化、请求处理、性能指标跟踪等。在编写 middleware 时，请记住将其注册到正确的路由或页面上，并在 middleware 函数中执行必要的逻辑。</p></li></ul></li></ol><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><p>Nuxt 的生命周期，全交由 Hooks 进行管理，先梳理一下：</p>`,7),x=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Hook"),e("th",{style:{"text-align":"left"}},"Arguments"),e("th",{style:{"text-align":"left"}},"Environment"),e("th",{style:{"text-align":"left"}},"Description")])],-1),_=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:created")]),e("td",{style:{"text-align":"left"}},[e("code",null,"vueApp")]),e("td",{style:{"text-align":"left"}},"Server & Client"),e("td",{style:{"text-align":"left"}},[n("创建初始"),e("code",null,"vueApp"),n(" 实例时调用。")])],-1),h=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:error")]),e("td",{style:{"text-align":"left"}},[e("code",null,"err")]),e("td",{style:{"text-align":"left"}},"Server & Client"),e("td",{style:{"text-align":"left"}},"发生致命错误时调用。")],-1),y=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:error:cleared")]),e("td",{style:{"text-align":"left"}},[e("code",null,"{ redirect? }")]),e("td",{style:{"text-align":"left"}},"Server & Client"),e("td",{style:{"text-align":"left"}},"发生致命错误时调用。")],-1),b=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:data:refresh")]),e("td",{style:{"text-align":"left"}},[e("code",null,"keys?")]),e("td",{style:{"text-align":"left"}},"Server & Client"),e("td",{style:{"text-align":"left"}},"(internal)")],-1),w=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"vue:setup")]),e("td",{style:{"text-align":"left"}},"-"),e("td",{style:{"text-align":"left"}},"Server & Client"),e("td",{style:{"text-align":"left"}},"(internal)")],-1),j=e("td",{style:{"text-align":"left"}},[e("code",null,"vue:error")],-1),N=e("td",{style:{"text-align":"left"}},[e("code",null,"err, target, info")],-1),C=e("td",{style:{"text-align":"left"}},"Server & Client",-1),S={style:{"text-align":"left"}},V={href:"https://vuejs.org/api/composition-api-lifecycle.html#onerrorcaptured",target:"_blank",rel:"noopener noreferrer"},A=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:rendered")]),e("td",{style:{"text-align":"left"}},[e("code",null,"renderContext")]),e("td",{style:{"text-align":"left"}},"Server"),e("td",{style:{"text-align":"left"}},"在 SSR 渲染完成时调用。")],-1),E=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:redirected")]),e("td",{style:{"text-align":"left"}},"-"),e("td",{style:{"text-align":"left"}},"Server"),e("td",{style:{"text-align":"left"}},"在 SSR 重定向之前调用。")],-1),R=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:beforeMount")]),e("td",{style:{"text-align":"left"}},[e("code",null,"vueApp")]),e("td",{style:{"text-align":"left"}},"Client"),e("td",{style:{"text-align":"left"}},"在安装应用程序之前调用，仅在客户端调用。")],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"app:mounted")]),e("td",{style:{"text-align":"left"}},[e("code",null,"vueApp")]),e("td",{style:{"text-align":"left"}},"Client"),e("td",{style:{"text-align":"left"}},"Vue 应用程序初始化并 mounted 浏览器时调用。")],-1),B=e("td",{style:{"text-align":"left"}},[e("code",null,"app:suspense:resolve")],-1),M=e("td",{style:{"text-align":"left"}},[e("code",null,"appComponent")],-1),I=e("td",{style:{"text-align":"left"}},"Client",-1),T={style:{"text-align":"left"}},q={href:"https://vuejs.org/guide/built-ins/suspense.html#suspense",target:"_blank",rel:"noopener noreferrer"},H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"link:prefetch")]),e("td",{style:{"text-align":"left"}},[e("code",null,"to")]),e("td",{style:{"text-align":"left"}},"Client"),e("td",{style:{"text-align":"left"}},[n("当观察到"),e("code",null,"<NuxtLink>"),n(" 被预取时调用。")])],-1),P=e("td",{style:{"text-align":"left"}},[e("code",null,"page:start")],-1),D=e("td",{style:{"text-align":"left"}},[e("code",null,"pageComponent?")],-1),F=e("td",{style:{"text-align":"left"}},"Client",-1),J={style:{"text-align":"left"}},O={href:"https://vuejs.org/guide/built-ins/suspense.html#suspense",target:"_blank",rel:"noopener noreferrer"},U=e("td",{style:{"text-align":"left"}},[e("code",null,"page:finish")],-1),W=e("td",{style:{"text-align":"left"}},[e("code",null,"pageComponent?")],-1),X=e("td",{style:{"text-align":"left"}},"Client",-1),Y={style:{"text-align":"left"}},Z={href:"https://vuejs.org/guide/built-ins/suspense.html#suspense",target:"_blank",rel:"noopener noreferrer"},$=e("td",{style:{"text-align":"left"}},[e("code",null,"page:transition:finish")],-1),z=e("td",{style:{"text-align":"left"}},[e("code",null,"pageComponent?")],-1),G=e("td",{style:{"text-align":"left"}},"Client",-1),K={style:{"text-align":"left"}},Q={href:"https://vuejs.org/guide/built-ins/transition.html#javascript-hooks",target:"_blank",rel:"noopener noreferrer"},ee=a(`<p>使用方法也很简单:</p><p>在 <code>nuxt.config.ts</code> 全局生命周期:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  hooks<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">close</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在模块中使用:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineNuxtModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nuxt/kit&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineNuxtModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token punctuation">,</span> nuxt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nuxt<span class="token punctuation">.</span><span class="token function">hook</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function ne(te,se){const t=g("ExternalLinkIcon");return v(),f("div",null,[m,e("table",null,[x,e("tbody",null,[_,h,y,b,w,e("tr",null,[j,N,C,e("td",S,[n("当 vue 错误跳转到根组件时调用。"),e("a",V,[n("了解更多"),s(t)]),n(".")])]),A,E,R,L,e("tr",null,[B,M,I,e("td",T,[n("关于 "),e("a",q,[n("Suspense"),s(t)]),n(" resolved 事件。")])]),H,e("tr",null,[P,D,F,e("td",J,[n("在"),e("a",O,[n("Suspense"),s(t)]),n(" 等待事件中调用。")])]),e("tr",null,[U,W,X,e("td",Y,[n("调用 "),e("a",Z,[n("Suspense"),s(t)]),n(" resolved 事件。")])]),e("tr",null,[$,z,G,e("td",K,[n("页面转换 "),e("a",Q,[n("onAfterLeave"),s(t)]),n(" 事件.")])])])]),ee])}const le=l(k,[["render",ne],["__file","ssr03.html.vue"]]);export{le as default};
