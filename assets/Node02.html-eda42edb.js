const e=JSON.parse(`{"key":"v-fc5eb6e8","path":"/JavaScript/Node02.html","title":"Node 服务器开发基础","lang":"zh-CN","frontmatter":{"title":"Node 服务器开发基础","icon":"node","category":["javascript"],"tag":["node"],"description":"Node 服务器开发基础 首先要理解一个概念，在前面的文章中，谈到文件读取的几种方法。但是这些方法都是直接将文件读取放到内存中进行管理，但是如果我们需要读取一部超长的电影，这个时候服务器的内存可能并没有那么大，所以，导致我们不能够直接读取到完整的一部电影。我们可以片段的读取想要的电影片段（这并不会打断我们看电影的过程）。 那么 Node 是如何实现的呢？通过 Stream 流，是连续字节的一种表现形式和抽象概念，它可以读也可以写。 文件读写的 Stream 实际上，Node 中很多对象是基于流实现的，并且所有的流都是 EventEmitter 的实例。在 Node.js 中，有四种基本流类型：","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front-end-life/JavaScript/Node02.html"}],["meta",{"property":"og:site_name","content":"Huy's Blog"}],["meta",{"property":"og:title","content":"Node 服务器开发基础"}],["meta",{"property":"og:description","content":"Node 服务器开发基础 首先要理解一个概念，在前面的文章中，谈到文件读取的几种方法。但是这些方法都是直接将文件读取放到内存中进行管理，但是如果我们需要读取一部超长的电影，这个时候服务器的内存可能并没有那么大，所以，导致我们不能够直接读取到完整的一部电影。我们可以片段的读取想要的电影片段（这并不会打断我们看电影的过程）。 那么 Node 是如何实现的呢？通过 Stream 流，是连续字节的一种表现形式和抽象概念，它可以读也可以写。 文件读写的 Stream 实际上，Node 中很多对象是基于流实现的，并且所有的流都是 EventEmitter 的实例。在 Node.js 中，有四种基本流类型："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-10T05:27:08.000Z"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:modified_time","content":"2023-04-10T05:27:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Node 服务器开发基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-10T05:27:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"文件读写的 Stream","slug":"文件读写的-stream","link":"#文件读写的-stream","children":[{"level":3,"title":"可读流（Readable Stream）","slug":"可读流-readable-stream","link":"#可读流-readable-stream","children":[]}]}],"git":{"createdTime":1681104428000,"updatedTime":1681104428000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1042},"filePathRelative":"JavaScript/Node02.md","localizedDate":"2023年4月10日","excerpt":"<h1> Node 服务器开发基础</h1>\\n<p>首先要理解一个概念，在前面的文章中，谈到文件读取的几种方法。但是这些方法都是直接将文件读取放到内存中进行管理，但是如果我们需要读取一部超长的电影，这个时候服务器的内存可能并没有那么大，所以，导致我们不能够直接读取到完整的一部电影。我们可以片段的读取想要的电影片段（这并不会打断我们看电影的过程）。</p>\\n<p>那么 Node 是如何实现的呢？通过 Stream 流，是连续字节的一种表现形式和抽象概念，它可以读也可以写。</p>\\n<h2> 文件读写的 Stream</h2>\\n<p>实际上，Node 中很多对象是基于流实现的，并且所有的流都是 <code>EventEmitter</code> 的实例。在 Node.js 中，有四种基本流类型：</p>","autoDesc":true}`);export{e as data};
