const e=JSON.parse('{"key":"v-dff41abe","path":"/JavaScript/cli01.html","title":"自定义 Cli","lang":"zh-CN","frontmatter":{"title":"自定义 Cli","icon":"nodeJS","category":["javascript"],"tag":["node"]},"headers":[{"level":2,"title":"初始化 npm init","slug":"初始化-npm-init","link":"#初始化-npm-init","children":[]},{"level":2,"title":"初探 commander","slug":"初探-commander","link":"#初探-commander","children":[{"level":3,"title":"program 命令行的主/子命令","slug":"program-命令行的主-子命令","link":"#program-命令行的主-子命令","children":[]},{"level":3,"title":"version 包版本","slug":"version-包版本","link":"#version-包版本","children":[]},{"level":3,"title":"option 命令行选项方法","slug":"option-命令行选项方法","link":"#option-命令行选项方法","children":[]},{"level":3,"title":"command 定义子命令","slug":"command-定义子命令","link":"#command-定义子命令","children":[]},{"level":3,"title":"定义多个子命令","slug":"定义多个子命令","link":"#定义多个子命令","children":[]},{"level":3,"title":"action 指定回调函数","slug":"action-指定回调函数","link":"#action-指定回调函数","children":[]}]}],"git":{"createdTime":1683783782000,"updatedTime":1683986337000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":9.79,"words":2936},"filePathRelative":"JavaScript/cli01.md","localizedDate":"2023年5月11日","excerpt":"<h1> 自定义 Cli 01 之 commander</h1>\\n<p>问题：当我们在用脚手架时，究竟发生了什么？当我们在 terminal 中键入 <code>create-react-app project-name</code> 时，究竟发生了什么？</p>\\n<h2> 初始化 npm init</h2>\\n<p>脚手架实际上也是一个工具包，只不过它替我们自动化完成了很多初始任务。我们先 <code>npm init</code> 初始化一个项目。</p>\\n<p>最终会生成一个 <code>package.json</code> 包，在这个包中，我们还需要新建一个 “ bin ” 字段，它可以指定一些可以作为命令行工具使用的 JavaScript 脚本文件。当用户全局安装时，这些脚本文件会被添加到系统的可执行路径中，从而可以在任何地方通过命令行来执行这些脚本。</p>"}');export{e as data};
