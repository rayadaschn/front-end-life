const n=JSON.parse(`{"key":"v-02088592","path":"/Mac_Linux%E9%85%8D%E7%BD%AE/Linux%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95.html","title":"Linux 服务器配置记录","lang":"en-US","frontmatter":{"title":"Linux 服务器配置记录","index":5,"icon":"linux","date":"2023-02-1","category":["linux"],"tag":["linux"],"star":true,"sticky":false,"description":"Linux 服务器配置记录 目录 [toc] 操作指令记录 linux 操作指令语法 [命令 可选参数 操作的对象] 基本操作指令(增删改查) 增 mkdir 文件夹1 文件夹2 touch fileName.txt 删除 remove rm [可选参数] [文件名] 可选参数如: -f : 强制删除, 无提示。 rm -f /removeDir -r : 递归删除文件夹，有提示，需输入 y 同意 。 rm -r /removeDir rm -rf /tmp/* # 删除tmp下所有内容 rm -rf /tmp/ # 不加*是会直接删除这个文件夹 改 cd / # 切换到根目录 cd ./tmp # 切换到当前的子目录 cd .. # 切换到上一级目录 cd ~ # 切换到自身用户的 home 目录 cd - # 切换到上一次工作目录 exit # 退出Linux clear # 清空屏幕 history # 查看历史指令 移动复制文件操作 复制 cp [options] source dest # -f 为覆盖已存在的文件而不提示; -r 为递归复制目标文件夹 $: cp test.txt test.txt.bak # 拷贝单个文件 $: cp –r test/ newtest # 将当前目录 test/ 下的所有文件复制到新目录 newtest 下 移动和重命名 mv $: mv ./test.txt ../ # 把当前目录下的test.txt移动到上一级目录去 $: mv name.txt newName.txt # 将“name.txt”重命名为 newName.txt” 重定向符号 &gt; 和 &gt;&gt; &gt; # 重定向输出覆盖符，覆盖写 &gt;&gt; # 重定向追加输出符，追加写入 $: echo \\"覆盖写入txt文件的内容\\" &gt; test.txt $: echo \\"追加写入txt文件的内容\\" &gt; test.txt # echo 是通用 shell 指令,用于字符串的输出, 写在其它指令为显示命令执行结果 查 首先看用户信息的一些操作: [root@localhost ~]# [指令] $: whoami # 查看用户名,当前为 root $: hostname # 查看主机名,当前为 localhost $: pwd # 查看当前所在文件目录(绝对路径),当前为 ~ # 指令前的 \\"#\\" 为用户权限提示符: \\"#\\" 为root用户; \\"$\\" 为普通用户 查看文件夹内容 ls (list) $: ls -l # 查看文件详细信息, 可用 ll 代替 $: ll # -a 可查看隐藏文件, 即以 \\".\\"开头的文件 查看文件内容 cat [文件名] $: cat -n [文件名] # 显示行号 $: head -5 file.txt # 显示文件的头5行 $: tail -5 file.txt # 显示文件的后5行 查找 find find [查找位置] -name [查找文件名称] $: find / -name \\"*.txt\\" # 在根目录开始查找 \\".txt\\"结尾的文件, \\"*\\"为通配符 添加用户权限(读写权限)","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front-end-life/Mac_Linux%E9%85%8D%E7%BD%AE/Linux%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95.html"}],["meta",{"property":"og:site_name","content":"Huy's Blog"}],["meta",{"property":"og:title","content":"Linux 服务器配置记录"}],["meta",{"property":"og:description","content":"Linux 服务器配置记录 目录 [toc] 操作指令记录 linux 操作指令语法 [命令 可选参数 操作的对象] 基本操作指令(增删改查) 增 mkdir 文件夹1 文件夹2 touch fileName.txt 删除 remove rm [可选参数] [文件名] 可选参数如: -f : 强制删除, 无提示。 rm -f /removeDir -r : 递归删除文件夹，有提示，需输入 y 同意 。 rm -r /removeDir rm -rf /tmp/* # 删除tmp下所有内容 rm -rf /tmp/ # 不加*是会直接删除这个文件夹 改 cd / # 切换到根目录 cd ./tmp # 切换到当前的子目录 cd .. # 切换到上一级目录 cd ~ # 切换到自身用户的 home 目录 cd - # 切换到上一次工作目录 exit # 退出Linux clear # 清空屏幕 history # 查看历史指令 移动复制文件操作 复制 cp [options] source dest # -f 为覆盖已存在的文件而不提示; -r 为递归复制目标文件夹 $: cp test.txt test.txt.bak # 拷贝单个文件 $: cp –r test/ newtest # 将当前目录 test/ 下的所有文件复制到新目录 newtest 下 移动和重命名 mv $: mv ./test.txt ../ # 把当前目录下的test.txt移动到上一级目录去 $: mv name.txt newName.txt # 将“name.txt”重命名为 newName.txt” 重定向符号 &gt; 和 &gt;&gt; &gt; # 重定向输出覆盖符，覆盖写 &gt;&gt; # 重定向追加输出符，追加写入 $: echo \\"覆盖写入txt文件的内容\\" &gt; test.txt $: echo \\"追加写入txt文件的内容\\" &gt; test.txt # echo 是通用 shell 指令,用于字符串的输出, 写在其它指令为显示命令执行结果 查 首先看用户信息的一些操作: [root@localhost ~]# [指令] $: whoami # 查看用户名,当前为 root $: hostname # 查看主机名,当前为 localhost $: pwd # 查看当前所在文件目录(绝对路径),当前为 ~ # 指令前的 \\"#\\" 为用户权限提示符: \\"#\\" 为root用户; \\"$\\" 为普通用户 查看文件夹内容 ls (list) $: ls -l # 查看文件详细信息, 可用 ll 代替 $: ll # -a 可查看隐藏文件, 即以 \\".\\"开头的文件 查看文件内容 cat [文件名] $: cat -n [文件名] # 显示行号 $: head -5 file.txt # 显示文件的头5行 $: tail -5 file.txt # 显示文件的后5行 查找 find find [查找位置] -name [查找文件名称] $: find / -name \\"*.txt\\" # 在根目录开始查找 \\".txt\\"结尾的文件, \\"*\\"为通配符 添加用户权限(读写权限)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-02-11T15:06:01.000Z"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:published_time","content":"2023-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-11T15:06:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 服务器配置记录\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-11T15:06:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"操作指令记录","slug":"操作指令记录","link":"#操作指令记录","children":[]},{"level":2,"title":"Linux 目录划分","slug":"linux-目录划分","link":"#linux-目录划分","children":[]},{"level":2,"title":"搭建 Nginx 服务器","slug":"搭建-nginx-服务器","link":"#搭建-nginx-服务器","children":[]},{"level":2,"title":"参考文件","slug":"参考文件","link":"#参考文件","children":[]}],"git":{"createdTime":1675694747000,"updatedTime":1676127961000,"contributors":[{"name":"Huy","email":"rayadaschn@gmail.com","commits":4}]},"readingTime":{"minutes":5.55,"words":1666},"filePathRelative":"Mac&Linux配置/Linux操作记录.md","localizedDate":"February 1, 2023","excerpt":"<h1> Linux 服务器配置记录</h1>\\n<h2> 目录</h2>\\n<p>[toc]</p>\\n<h2> 操作指令记录</h2>\\n<blockquote>\\n<p>linux 操作指令语法 <strong>[<code>命令 可选参数 操作的对象</code>]</strong></p>\\n</blockquote>\\n<ol>\\n<li>\\n<p>基本操作指令(增删改查)</p>\\n<ul>\\n<li>增</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">mkdir</span> 文件夹1 文件夹2\\n<span class=\\"token function\\">touch</span> fileName.txt\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>删除 remove</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">rm</span> <span class=\\"token punctuation\\">[</span>可选参数<span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">[</span>文件名<span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><p>可选参数如:</p>\\n<ol>\\n<li>\\n<p><strong>-f</strong> : 强制删除, 无提示。 <code>rm -f /removeDir</code></p>\\n</li>\\n<li>\\n<p><strong>-r</strong> : 递归删除文件夹，有提示，需输入 y 同意 。 <code>rm -r /removeDir</code></p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">rm</span>  <span class=\\"token parameter variable\\">-rf</span>  /tmp/*  <span class=\\"token comment\\"># 删除tmp下所有内容</span>\\n<span class=\\"token function\\">rm</span>  <span class=\\"token parameter variable\\">-rf</span>  /tmp/   <span class=\\"token comment\\"># 不加*是会直接删除这个文件夹</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>\\n<ul>\\n<li>改</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token builtin class-name\\">cd</span> /     <span class=\\"token comment\\"># 切换到根目录</span>\\n<span class=\\"token builtin class-name\\">cd</span> ./tmp <span class=\\"token comment\\"># 切换到当前的子目录</span>\\n<span class=\\"token builtin class-name\\">cd</span> <span class=\\"token punctuation\\">..</span>    <span class=\\"token comment\\"># 切换到上一级目录</span>\\n<span class=\\"token builtin class-name\\">cd</span> ~     <span class=\\"token comment\\"># 切换到自身用户的 home 目录</span>\\n<span class=\\"token builtin class-name\\">cd</span> -     <span class=\\"token comment\\"># 切换到上一次工作目录</span>\\n\\n<span class=\\"token builtin class-name\\">exit</span>     <span class=\\"token comment\\"># 退出Linux</span>\\n<span class=\\"token function\\">clear</span>    <span class=\\"token comment\\"># 清空屏幕</span>\\n<span class=\\"token function\\">history</span>  <span class=\\"token comment\\"># 查看历史指令</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>移动复制文件操作\\n<ol>\\n<li>复制 <code>cp [options] source dest</code></li>\\n</ol>\\n</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># -f 为覆盖已存在的文件而不提示; -r 为递归复制目标文件夹</span>\\n$: <span class=\\"token function\\">cp</span> test.txt test.txt.bak  <span class=\\"token comment\\"># 拷贝单个文件</span>\\n\\n$: <span class=\\"token function\\">cp</span> –r test/ newtest\\n<span class=\\"token comment\\"># 将当前目录 test/ 下的所有文件复制到新目录 newtest 下</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ol start=\\"2\\">\\n<li>移动和重命名 mv</li>\\n</ol>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>$: <span class=\\"token function\\">mv</span> ./test.txt  <span class=\\"token punctuation\\">..</span>/   <span class=\\"token comment\\"># 把当前目录下的test.txt移动到上一级目录去</span>\\n\\n$: <span class=\\"token function\\">mv</span> name.txt  newName.txt    <span class=\\"token comment\\"># 将“name.txt”重命名为 newName.txt”</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>重定向符号 &gt; 和 &gt;&gt;</li>\\n</ul>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token operator\\">&gt;</span>  <span class=\\"token comment\\"># 重定向输出覆盖符，覆盖写</span>\\n<span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token comment\\"># 重定向追加输出符，追加写入</span>\\n\\n$: <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"覆盖写入txt文件的内容\\"</span> <span class=\\"token operator\\">&gt;</span> test.txt\\n$: <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"追加写入txt文件的内容\\"</span> <span class=\\"token operator\\">&gt;</span> test.txt\\n<span class=\\"token comment\\"># echo 是通用 shell 指令,用于字符串的输出, 写在其它指令为显示命令执行结果</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ul>\\n<li>\\n<p>查</p>\\n<ol>\\n<li>首先看用户信息的一些操作:</li>\\n</ol>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token punctuation\\">[</span>root@localhost ~<span class=\\"token punctuation\\">]</span><span class=\\"token comment\\"># [指令]</span>\\n$: <span class=\\"token function\\">whoami</span>    <span class=\\"token comment\\"># 查看用户名,当前为 root</span>\\n$: <span class=\\"token function\\">hostname</span>  <span class=\\"token comment\\"># 查看主机名,当前为 localhost</span>\\n$: <span class=\\"token builtin class-name\\">pwd</span>       <span class=\\"token comment\\"># 查看当前所在文件目录(绝对路径),当前为 ~</span>\\n<span class=\\"token comment\\"># 指令前的 \\"#\\" 为用户权限提示符: \\"#\\" 为root用户; \\"$\\" 为普通用户</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ol start=\\"2\\">\\n<li>查看文件夹内容 ls (list)</li>\\n</ol>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>$: <span class=\\"token function\\">ls</span> <span class=\\"token parameter variable\\">-l</span>     <span class=\\"token comment\\"># 查看文件详细信息, 可用 ll 代替</span>\\n$: ll\\n \\n<span class=\\"token comment\\"># -a 可查看隐藏文件, 即以 \\".\\"开头的文件</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ol start=\\"3\\">\\n<li>查看文件内容</li>\\n</ol>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">cat</span> <span class=\\"token punctuation\\">[</span>文件名<span class=\\"token punctuation\\">]</span>\\n$: <span class=\\"token function\\">cat</span> <span class=\\"token parameter variable\\">-n</span> <span class=\\"token punctuation\\">[</span>文件名<span class=\\"token punctuation\\">]</span>    <span class=\\"token comment\\"># 显示行号</span>\\n \\n$: <span class=\\"token function\\">head</span> <span class=\\"token parameter variable\\">-5</span> file.txt  <span class=\\"token comment\\"># 显示文件的头5行</span>\\n$: <span class=\\"token function\\">tail</span> <span class=\\"token parameter variable\\">-5</span> file.txt  <span class=\\"token comment\\"># 显示文件的后5行</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><ol start=\\"4\\">\\n<li>查找 find</li>\\n</ol>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">find</span> <span class=\\"token punctuation\\">[</span>查找位置<span class=\\"token punctuation\\">]</span> <span class=\\"token parameter variable\\">-name</span> <span class=\\"token punctuation\\">[</span>查找文件名称<span class=\\"token punctuation\\">]</span>\\n$: <span class=\\"token function\\">find</span> / <span class=\\"token parameter variable\\">-name</span> <span class=\\"token string\\">\\"*.txt\\"</span>  <span class=\\"token comment\\"># 在根目录开始查找 \\".txt\\"结尾的文件, \\"*\\"为通配符</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n<li>\\n<p>添加用户权限(读写权限)</p>\\n</li>\\n</ol>","autoDesc":true}`);export{n as data};
