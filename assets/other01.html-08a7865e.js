const e=JSON.parse('{"key":"v-601f0f1e","path":"/JavaScript/other01.html","title":"代码规范和自动格式化","lang":"zh-CN","frontmatter":{"title":"代码规范和自动格式化","icon":"javascript","date":"2023-02-26T00:00:00.000Z","category":["javascript"],"tag":["javascript"]},"headers":[{"level":2,"title":"安装和使用","slug":"安装和使用","link":"#安装和使用","children":[{"level":3,"title":"ESlint 配合 VScode 插件使用","slug":"eslint-配合-vscode-插件使用","link":"#eslint-配合-vscode-插件使用","children":[]},{"level":3,"title":"设置 Prettier","slug":"设置-prettier","link":"#设置-prettier","children":[]},{"level":3,"title":"配合 Typescript","slug":"配合-typescript","link":"#配合-typescript","children":[]}]},{"level":2,"title":"统一代码风格实战","slug":"统一代码风格实战","link":"#统一代码风格实战","children":[]}],"git":{"createdTime":1683516320000,"updatedTime":1684810775000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":4}]},"readingTime":{"minutes":5.63,"words":1689},"filePathRelative":"JavaScript/other01.md","localizedDate":"2023年2月26日","excerpt":"<h1> 代码规范和自动格式化</h1>\\n<p>在团队开发中，统一代码规范是必不可少的。<a href=\\"https://cn.eslint.org/docs/user-guide/configuring\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><strong>ESlint</strong></a> 是我们前端工程化中代码检测的一款常用工具。它不仅可以检测 <code>JS</code> 还支持 <code>Vue</code> 和 <code>JSX</code> 。</p>\\n<blockquote>\\n<p>前置知识——最佳实践：</p>\\n<ul>\\n<li>ESlint 检测不合规的代码，npm 包也有修复功能，但是没有 Prettier 强大。</li>\\n<li>Prettier 修复不合规的代码</li>\\n<li>Editorconfig 统一不同操作系统下的编码格式</li>\\n</ul>\\n<p>三者都有对应的 VScode 插件。但需要明白的是，VScode 插件是通过本地的配置，在编写代码时就帮开发者 检测、修复代码！而通过 npm 安装的包，是通过指令的方式检测、修复。俩者的功能和用途是不一样的！</p>\\n</blockquote>"}');export{e as data};
