const n=JSON.parse(`{"key":"v-7004f8c5","path":"/OneMoreThing/effect.html","title":"高效开发 之命名规范","lang":"zh-CN","frontmatter":{"title":"高效开发 之命名规范","icon":"note","date":"2023-08-19T00:00:00.000Z","category":["anonymous"],"tag":["note"],"star":false,"sticky":false},"headers":[{"level":2,"title":"文件命名","slug":"文件命名","link":"#文件命名","children":[]},{"level":2,"title":"代码变量命名","slug":"代码变量命名","link":"#代码变量命名","children":[]},{"level":2,"title":"Vue 中变量","slug":"vue-中变量","link":"#vue-中变量","children":[]},{"level":2,"title":"参考文件","slug":"参考文件","link":"#参考文件","children":[]}],"git":{"createdTime":1693300347000,"updatedTime":1693300347000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.09,"words":926},"filePathRelative":"OneMoreThing/effect.md","localizedDate":"2023年8月19日","excerpt":"<h2> 文件命名</h2>\\n<ul>\\n<li>\\n<p>路由组件: 通常放置于 <code>src/views</code> 下，一般情况下以单个名词或动词进行命名。对于一些需要用多个单词才能描述的资源，可以使用 kebab-case 短横线风格命名。</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// src/router/routes.ts</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token keyword\\">type</span> <span class=\\"token punctuation\\">{</span> RouteRecordRaw <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue-router'</span>\\n\\n<span class=\\"token keyword\\">const</span> routes<span class=\\"token operator\\">:</span> RouteRecordRaw<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n  <span class=\\"token comment\\">// 面对面栏目</span>\\n  <span class=\\"token punctuation\\">{</span>\\n    path<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'/face-to-face'</span><span class=\\"token punctuation\\">,</span>\\n    name<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'face-to-face'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">component</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">import</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'@views/face-to-face.vue'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">]</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> routes\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>公共组件: 通常放置于 <code>src/components</code> 下，也可以视不同的使用情况，在路由文件夹下创建属于当前路由的 components 目录，作为一个小范围共享的公共组件目录来管理，而 src/components 则只存放全局性质的公共组件。</p>\\n<p>公共组件一般采用 PascalCase 帕斯卡大驼峰命名。这在 VSCode 里可以得到不同颜色的高亮效果。</p>\\n</li>\\n<li>\\n<p>types 文件, 通常放置于'src/types'目录作为管理公共类型, 统一使用<code>.ts</code>作为拓展名管理。而不是用<code>.d.ts</code>作为类型声明文件，好处是可以通过 <code>import type</code>显示导入。</p>\\n</li>\\n</ul>"}`);export{n as data};
