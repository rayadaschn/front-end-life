const e=JSON.parse('{"key":"v-ffc86826","path":"/JavaScript/Node01.html","title":"node 基础","lang":"zh-CN","frontmatter":{"title":"node 基础","icon":"nodeJS","category":["javascript"],"tag":["node"]},"headers":[{"level":2,"title":"Node 是什么?","slug":"node-是什么","link":"#node-是什么","children":[{"level":3,"title":"体系架构","slug":"体系架构","link":"#体系架构","children":[]}]},{"level":2,"title":"文件系统 File System","slug":"文件系统-file-system","link":"#文件系统-file-system","children":[{"level":3,"title":"CommonJS 导入模块","slug":"commonjs-导入模块","link":"#commonjs-导入模块","children":[]},{"level":3,"title":"读取文件的三种方式","slug":"读取文件的三种方式","link":"#读取文件的三种方式","children":[]},{"level":3,"title":"文件描述符的使用","slug":"文件描述符的使用","link":"#文件描述符的使用","children":[]},{"level":3,"title":"文件写入","slug":"文件写入","link":"#文件写入","children":[]},{"level":3,"title":"文件夹操作","slug":"文件夹操作","link":"#文件夹操作","children":[]}]},{"level":2,"title":"Events 模块","slug":"events-模块","link":"#events-模块","children":[]},{"level":2,"title":"Buffer 类","slug":"buffer-类","link":"#buffer-类","children":[{"level":3,"title":"创建 Buffer","slug":"创建-buffer","link":"#创建-buffer","children":[]},{"level":3,"title":"Buffer 的创建过程","slug":"buffer-的创建过程","link":"#buffer-的创建过程","children":[]}]},{"level":2,"title":"OneMoreThing: 浏览器与 Node 的事件循环区别","slug":"onemorething-浏览器与-node-的事件循环区别","link":"#onemorething-浏览器与-node-的事件循环区别","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1683516320000,"updatedTime":1691896604000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":5}]},"readingTime":{"minutes":26.62,"words":7987},"filePathRelative":"JavaScript/Node01.md","localizedDate":"2023年5月8日","excerpt":"<h1> Node 基础</h1>\\n<p>首先要理解服务器开发是什么？简单的说就是通过一门语音，操作处理各种文件——增删改查。</p>\\n<p>例如 Java 、Python 等可以作为全栈的高级语言，就是因为其满足服务器开发要求。前端如今的工厂化，实际上都源于 Node，在本地运行一个服务，持续运行编辑中的代码。这是本质，而浏览器呢？如 V8 引擎实际上只是做了 js 代码的解析工作。</p>\\n<h2> Node 是什么?</h2>\\n<p><strong>Node.js</strong> 是一个基于 V8 JavaScript 引擎的 JavaScrip t 运行时环境。简单理解，就是 Node 是基于 V8 引擎的能够在本地运行 JavaScript 代码的环境。当然由于 Chrome 浏览器内部还需要解析、渲染 HTML 和 CSS 等相关渲染引擎，另外还需要提供支持浏览器操作的 API、浏览器自己的事件循环等，这部分做了取舍。但是同时由于要处理本地文件，所以 Node 自身也添加了一些额外的 API 如文件系统读/写、网络 IO、加密、压缩解压文件等。</p>"}');export{e as data};
