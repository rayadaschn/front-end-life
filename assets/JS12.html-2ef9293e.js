const n=JSON.parse(`{"key":"v-62593886","path":"/JavaScript/JS12.html","title":"简单手写 EventBus","lang":"zh-CN","frontmatter":{"title":"简单手写 EventBus","icon":"javascript","date":"2023-09-12T00:00:00.000Z","category":["javascript"],"tag":["javascript"],"sticky":false},"headers":[],"git":{"createdTime":1694564835000,"updatedTime":1694564835000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.02,"words":306},"filePathRelative":"JavaScript/JS12.md","localizedDate":"2023年9月12日","excerpt":"<p>EventBus 是一种事件发布/订阅模式的设计模式。</p>\\n<p>自定义事件的要点有：</p>\\n<ul>\\n<li><code>on</code> 事件，注册监听</li>\\n<li><code>once</code>事件，只执行一次</li>\\n<li><code>off</code> 事件，注销监听</li>\\n<li><code>emit</code> 事件，触发监听</li>\\n</ul>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token doc-comment comment\\">/**\\n * <span class=\\"token keyword\\">@description</span> Event Bus 事件总线\\n * <span class=\\"token punctuation\\">{</span>\\n *    'key': [\\n *        <span class=\\"token punctuation\\">{</span>fn: string, isOnce: boolean<span class=\\"token punctuation\\">}</span>\\n *     ]\\n * <span class=\\"token punctuation\\">}</span>\\n */</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">EventBus</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">private</span> events<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token punctuation\\">[</span>key<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Array</span><span class=\\"token operator\\">&lt;</span><span class=\\"token punctuation\\">{</span> fn<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Function</span><span class=\\"token punctuation\\">;</span> isOnce<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token punctuation\\">}</span><span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span>type<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> fn<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Function</span><span class=\\"token punctuation\\">,</span> isOnce<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">boolean</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> event <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>event <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> fn<span class=\\"token punctuation\\">,</span> isOnce <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">once</span><span class=\\"token punctuation\\">(</span>type<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> fn<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span>type<span class=\\"token punctuation\\">,</span> fn<span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">off</span><span class=\\"token punctuation\\">(</span>type<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> fn<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Function</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>fn<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 解绑所有 type 类型的函数</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 解绑单个 fn</span>\\n      <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        item<span class=\\"token punctuation\\">.</span>fn <span class=\\"token operator\\">!==</span> fn\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span>type<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span>args<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> fnList <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>fnList <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span>\\n\\n    <span class=\\"token comment\\">// 注意是否有 once, 执行一次则需要过滤</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>events<span class=\\"token punctuation\\">[</span>type<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> fnList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> fn<span class=\\"token punctuation\\">,</span> isOnce <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> item\\n      <span class=\\"token function\\">fn</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span>args<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>isOnce<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 功能测试</span>\\n\\n<span class=\\"token keyword\\">const</span> e <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">EventBus</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn1</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fn1'</span><span class=\\"token punctuation\\">,</span> a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn2</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fn2'</span><span class=\\"token punctuation\\">,</span> a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">fn3</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">,</span> b<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'fn3'</span><span class=\\"token punctuation\\">,</span> a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key1'</span><span class=\\"token punctuation\\">,</span> fn1<span class=\\"token punctuation\\">)</span>\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">on</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key2'</span><span class=\\"token punctuation\\">,</span> fn2<span class=\\"token punctuation\\">)</span>\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">once</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key3'</span><span class=\\"token punctuation\\">,</span> fn3<span class=\\"token punctuation\\">)</span>\\n\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 触发 fn1 fn2 fn3</span>\\n\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">off</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key1'</span><span class=\\"token punctuation\\">,</span> fn1<span class=\\"token punctuation\\">)</span>\\n\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key1'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 不再触发</span>\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key2'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">200</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">400</span><span class=\\"token punctuation\\">)</span>\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key3'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">300</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">600</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 触发一次</span>\\ne<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">emit</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'key3'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">400</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">800</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// 不再触发</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
