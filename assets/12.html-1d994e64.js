const n=JSON.parse(`{"key":"v-e612ac32","path":"/OneMoreThing/interview/12.html","title":"12 webpack 相关应用","lang":"zh-CN","frontmatter":{"title":"12 webpack 相关应用","icon":"note","date":"2023-08-12T00:00:00.000Z","category":["anonymous"],"tag":["note"],"star":false,"sticky":false},"headers":[{"level":2,"title":"基础梳理","slug":"基础梳理","link":"#基础梳理","children":[]},{"level":2,"title":"module、chunk 和 bundle 的区别是什么？","slug":"module、chunk-和-bundle-的区别是什么","link":"#module、chunk-和-bundle-的区别是什么","children":[]},{"level":2,"title":"webpack 的性能优化-构建速度","slug":"webpack-的性能优化-构建速度","link":"#webpack-的性能优化-构建速度","children":[{"level":3,"title":"优化 babel-loader","slug":"优化-babel-loader","link":"#优化-babel-loader","children":[]},{"level":3,"title":"IgnorePlugins 避免引入无用模块","slug":"ignoreplugins-避免引入无用模块","link":"#ignoreplugins-避免引入无用模块","children":[]},{"level":3,"title":"noParse 避免重复打包","slug":"noparse-避免重复打包","link":"#noparse-避免重复打包","children":[]},{"level":3,"title":"happyPack 多进程打包","slug":"happypack-多进程打包","link":"#happypack-多进程打包","children":[]},{"level":3,"title":"ParallelUglifyPlugin 多进程压缩 JS","slug":"paralleluglifyplugin-多进程压缩-js","link":"#paralleluglifyplugin-多进程压缩-js","children":[]},{"level":3,"title":"自动刷新和热更新","slug":"自动刷新和热更新","link":"#自动刷新和热更新","children":[]},{"level":3,"title":"DllPlugin 动态链接库插件","slug":"dllplugin-动态链接库插件","link":"#dllplugin-动态链接库插件","children":[]}]},{"level":2,"title":"webpack 性能优化-产出代码","slug":"webpack-性能优化-产出代码","link":"#webpack-性能优化-产出代码","children":[]},{"level":2,"title":"babel 的基础使用","slug":"babel-的基础使用","link":"#babel-的基础使用","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"babel-polyfill","slug":"babel-polyfill","link":"#babel-polyfill","children":[]}]},{"level":2,"title":"前端代码为何要进行构建和打包?","slug":"前端代码为何要进行构建和打包","link":"#前端代码为何要进行构建和打包","children":[]},{"level":2,"title":"loader 和 plugin 的区别是什么?","slug":"loader-和-plugin-的区别是什么","link":"#loader-和-plugin-的区别是什么","children":[]},{"level":2,"title":"babel 和 webpack 的区别是什么?","slug":"babel-和-webpack-的区别是什么","link":"#babel-和-webpack-的区别是什么","children":[]},{"level":2,"title":"webpack 如何实现懒加载?","slug":"webpack-如何实现懒加载","link":"#webpack-如何实现懒加载","children":[]},{"level":2,"title":"babel-runtime 和 babel-polyfill 的区别是什么?","slug":"babel-runtime-和-babel-polyfill-的区别是什么","link":"#babel-runtime-和-babel-polyfill-的区别是什么","children":[]},{"level":2,"title":"为什么 Proxy 不能被 Polyfill?","slug":"为什么-proxy-不能被-polyfill","link":"#为什么-proxy-不能被-polyfill","children":[]}],"git":{"createdTime":1705126883000,"updatedTime":1738672263000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":6.73,"words":2018},"filePathRelative":"OneMoreThing/interview/12.md","localizedDate":"2023年8月12日","excerpt":"<p>对于 webpack，在框架类中有几篇<a href=\\"../Framework/webpack01\\">专题</a>介绍，此处仅做面试题集梳理。</p>\\n<h2> 基础梳理</h2>\\n<ul>\\n<li>\\n<p>多入口，通常 SPA 为单入口。多入口配置：</p>\\n<ul>\\n<li>\\n<p>在 entry 中配置多入口；</p>\\n</li>\\n<li>\\n<p>在 output 中配置多出口 <code>filename: [name].[contentHash:8].js</code></p>\\n</li>\\n<li>\\n<p>在 plugins 中为每个入口做插件解析。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HtmlWebpackPlugin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 生成 index.html</span>\\n  <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> path<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span>srcPath<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'index.html'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">filename</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'index.html'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">chunks</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'index'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 只引用 index.js</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HtmlWebpackPlugin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 生成 other.html</span>\\n    <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> path<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span>srcPath<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'other.html'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">filename</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'other.html'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">chunks</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'other'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 只引用 other.js</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n<li>\\n<p>抽离公共代码</p>\\n<ul>\\n<li>\\n<p>在<code>optimization</code>中的<code>splitChunks</code>配置生成单独的 chunks 文件。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token literal-property property\\">optimization</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 生成单独的chunks文件配置</span>\\n  <span class=\\"token literal-property property\\">splitChunks</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">chunks</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'all'</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">minSize</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">maxAsyncRequests</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">maxInitialRequests</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">cacheGroups</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">Axios</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">test</span><span class=\\"token operator\\">:</span> <span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">[\\\\\\\\/]node_modules[\\\\\\\\/]axios[\\\\\\\\/]</span><span class=\\"token regex-delimiter\\">/</span></span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'common/axios'</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>还需要在入口插件的<code>HtmlWebpackPlugin</code>中的 chunk 内加入抽离的公共组件，如上的 axios，这样在入口文件中才会导入该公共抽离的组件：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HtmlWebpackPlugin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 生成 index.html</span>\\n  <span class=\\"token literal-property property\\">template</span><span class=\\"token operator\\">:</span> path<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span>srcPath<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'index.html'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">filename</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'index.html'</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">chunks</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'index'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'common/axios'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 引用 index.js 和 common/axios.js</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>\\n</li>\\n<li>\\n<p>懒加载</p>\\n</li>\\n<li>\\n<p>处理 Vue 等特殊格式文件</p>\\n</li>\\n</ul>"}`);export{n as data};
