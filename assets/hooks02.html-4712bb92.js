const e=JSON.parse('{"key":"v-42d02c70","path":"/JavaScript/hooks02.html","title":"用 canvas 绘制一个矩形并实现其拖动","lang":"zh-CN","frontmatter":{"title":"用 canvas 绘制一个矩形并实现其拖动","icon":"typescript","date":"2024-02-05T00:00:00.000Z","category":["javascript"],"tag":["hooks"],"sticky":false},"headers":[],"git":{"createdTime":1707234222000,"updatedTime":1710605179000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":3.16,"words":949},"filePathRelative":"JavaScript/hooks02.md","localizedDate":"2024年2月5日","excerpt":"<p>该文为上篇<a href=\\"./hooks01\\">《手写一个具备拖拉拽多功能的弹窗》</a>的延续。</p>\\n<p>首先需要区分 <code>e.clientX</code> 和 <code>e.offsetX</code> 的区别:</p>\\n<ul>\\n<li><code>e.clientX</code> 是相对于整个文档左上角的坐标。</li>\\n<li><code>e.offsetX</code> 是相对于触发事件的元素左上角的坐标。</li>\\n</ul>\\n<p>设计思路:</p>\\n<ol>\\n<li>绘制获取 Canvas 元素。</li>\\n<li>创建存储绘制矩形的数组, 后续依据这个数组来遍历绘制矩阵;</li>\\n<li>创建绘制矩阵的类, 包含绘制矩阵的方法, 以及矩形的四角信息;</li>\\n<li>监听 Canvas 的鼠标按下事件 onmousedown, 分俩种情况, 一种是点击了已绘制矩形, 另一种是点击了空白处开始绘制矩形;</li>\\n<li>创建判断是否是绘制块, 创建依据遍历绘制数组, 绘制 Canvas。</li>\\n</ol>"}');export{e as data};
