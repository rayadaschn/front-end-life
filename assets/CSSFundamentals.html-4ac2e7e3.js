const e=JSON.parse(`{"key":"v-e76ffe66","path":"/CSS/CSSFundamentals.html","title":"CSS 基本常识","lang":"zh-CN","frontmatter":{"title":"CSS 基本常识","icon":"style","category":["CSS"],"tag":["CSS"],"description":"CSS 基本常识 三读《CSS 世界》，记录一些基本常识笔记，以便加固理解。 说是基本常识，实际上还是算内容进阶。 基础内容 长度单位 相对字体长度单位：em 、rem、ch（字符 0 的宽度）； 相对视区长度单位： vh（视高）、vw（视宽）。 选择器 类 选择器：“.” 开头； ID 选择器：“#” 开头； 属性选择器： 指含有“[]”选择器，如 [title]{}； 伪类选择器： 指前面有一个英文冒号（:） 伪元素选择器： 指前面有一个英文冒号（::），如： ::before、::after。 关系选择器 后代选择器： 空格连接； 相邻后代选择器：&gt; 连接； 兄弟选择器：~ 连接； 相邻兄弟选择器：+连接。 块级元素 display 为 block、table和如 &lt;li&gt;元素的 list-item 。 代表: &lt;div&gt;、&lt;p&gt;、&lt;table&gt; 等 块级元素具有换行特性，可以配合 clear 属性清除浮动带来的影响。 list-item是标记盒子，专门用于存放圆点和数字这些项目符号。 如行内块 display：inline-block ，实际上是由俩个盒子共同组成，一个内部块级的“容器盒子”和一个外部的内联级的外在盒子共同组成。 内联元素 display 为inline、 inline-bloc 和 inline-table。 如： &lt;span&gt;、 &lt;button&gt; 、 &lt;img&gt; 、&lt;em&gt; 需要注意的是，内联盒子模型中，存在一个幽灵空白节点，在 line-height 和 vertical-align 影响巨大。 内容区域、内联盒子、行框盒子、包含盒子 内容区域(content area)：是一种围绕文字看不见的盒子，其大小仅受字符本身特性控制，本质上是一个字符盒子（character box）。内容区域的大小与 font-size 大小和 font-family 相关，与 line-height 没有任何关系。 内联盒子(inline boxes)：每个行内元素会生成一个行内框，行内框是一个浏览器渲染模型中的一个概念，无法显示出来。内联盒子不会让内容成块显示，而是排成一行。 如：外部包含inline水平的标签(span、a、em、strong等)，则属于内联盒子。如果是个光秃秃的文字，则属于匿名内联盒子。行内框默认等于内容区域，除非设置了padding。 行框盒子(line boxes)： 每一行就是一个行框盒子，每个行框盒子又是由一个一个内联盒子组成。行框盒子是浏览器渲染模式中的一个概念，无法显示出来。行框高度等于本行中所有行内框高度的最大值。当有多行内容时，每一行都有自己的行框。 包含盒子(containing box)：或者准确为包含块，由一行一行的行框盒子组成，高度就是单行文本高度的累加。 盒子模型 幽灵空白节点，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个“空白节点”，这个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就如同幽灵一样，但又确确实实地存在，表现如图文本节点一般。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/front-end-life/CSS/CSSFundamentals.html"}],["meta",{"property":"og:site_name","content":"Huy's Blog"}],["meta",{"property":"og:title","content":"CSS 基本常识"}],["meta",{"property":"og:description","content":"CSS 基本常识 三读《CSS 世界》，记录一些基本常识笔记，以便加固理解。 说是基本常识，实际上还是算内容进阶。 基础内容 长度单位 相对字体长度单位：em 、rem、ch（字符 0 的宽度）； 相对视区长度单位： vh（视高）、vw（视宽）。 选择器 类 选择器：“.” 开头； ID 选择器：“#” 开头； 属性选择器： 指含有“[]”选择器，如 [title]{}； 伪类选择器： 指前面有一个英文冒号（:） 伪元素选择器： 指前面有一个英文冒号（::），如： ::before、::after。 关系选择器 后代选择器： 空格连接； 相邻后代选择器：&gt; 连接； 兄弟选择器：~ 连接； 相邻兄弟选择器：+连接。 块级元素 display 为 block、table和如 &lt;li&gt;元素的 list-item 。 代表: &lt;div&gt;、&lt;p&gt;、&lt;table&gt; 等 块级元素具有换行特性，可以配合 clear 属性清除浮动带来的影响。 list-item是标记盒子，专门用于存放圆点和数字这些项目符号。 如行内块 display：inline-block ，实际上是由俩个盒子共同组成，一个内部块级的“容器盒子”和一个外部的内联级的外在盒子共同组成。 内联元素 display 为inline、 inline-bloc 和 inline-table。 如： &lt;span&gt;、 &lt;button&gt; 、 &lt;img&gt; 、&lt;em&gt; 需要注意的是，内联盒子模型中，存在一个幽灵空白节点，在 line-height 和 vertical-align 影响巨大。 内容区域、内联盒子、行框盒子、包含盒子 内容区域(content area)：是一种围绕文字看不见的盒子，其大小仅受字符本身特性控制，本质上是一个字符盒子（character box）。内容区域的大小与 font-size 大小和 font-family 相关，与 line-height 没有任何关系。 内联盒子(inline boxes)：每个行内元素会生成一个行内框，行内框是一个浏览器渲染模型中的一个概念，无法显示出来。内联盒子不会让内容成块显示，而是排成一行。 如：外部包含inline水平的标签(span、a、em、strong等)，则属于内联盒子。如果是个光秃秃的文字，则属于匿名内联盒子。行内框默认等于内容区域，除非设置了padding。 行框盒子(line boxes)： 每一行就是一个行框盒子，每个行框盒子又是由一个一个内联盒子组成。行框盒子是浏览器渲染模式中的一个概念，无法显示出来。行框高度等于本行中所有行内框高度的最大值。当有多行内容时，每一行都有自己的行框。 包含盒子(containing box)：或者准确为包含块，由一行一行的行框盒子组成，高度就是单行文本高度的累加。 盒子模型 幽灵空白节点，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个“空白节点”，这个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就如同幽灵一样，但又确确实实地存在，表现如图文本节点一般。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-01T15:55:51.000Z"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:modified_time","content":"2023-04-01T15:55:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS 基本常识\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-01T15:55:51.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基础内容","slug":"基础内容","link":"#基础内容","children":[]},{"level":2,"title":"width 宽度特性","slug":"width-宽度特性","link":"#width-宽度特性","children":[]},{"level":2,"title":"height 高度特性","slug":"height-高度特性","link":"#height-高度特性","children":[]},{"level":2,"title":"替换元素 和 非替换元素","slug":"替换元素-和-非替换元素","link":"#替换元素-和-非替换元素","children":[]},{"level":2,"title":"盒子模型","slug":"盒子模型","link":"#盒子模型","children":[{"level":3,"title":"padding 较为温和","slug":"padding-较为温和","link":"#padding-较为温和","children":[]},{"level":3,"title":"margin 较为激进","slug":"margin-较为激进","link":"#margin-较为激进","children":[]},{"level":3,"title":"border 边框","slug":"border-边框","link":"#border-边框","children":[]}]},{"level":2,"title":"最难内联元素","slug":"最难内联元素","link":"#最难内联元素","children":[{"level":3,"title":"俩大难点：line-height和vertical-align","slug":"俩大难点-line-height和vertical-align","link":"#俩大难点-line-height和vertical-align","children":[]}]}],"git":{"createdTime":1680364551000,"updatedTime":1680364551000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":14.55,"words":4364},"filePathRelative":"CSS/CSSFundamentals.md","localizedDate":"2023年4月1日","excerpt":"<h1> CSS 基本常识</h1>\\n<blockquote>\\n<p>三读《CSS 世界》，记录一些基本常识笔记，以便加固理解。</p>\\n<p>说是基本常识，实际上还是算内容进阶。</p>\\n</blockquote>\\n<h2> 基础内容</h2>\\n<ul>\\n<li>\\n<p><strong>长度单位</strong></p>\\n<ul>\\n<li>相对字体长度单位：<code>em</code> 、<code>rem</code>、<code>ch</code>（字符 0 的宽度）；</li>\\n<li>相对视区长度单位： <code>vh</code>（视高）、<code>vw</code>（视宽）。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>选择器</strong></p>\\n<ul>\\n<li>类 选择器：“<code>.</code>” 开头；</li>\\n<li>ID 选择器：“<code>#</code>” 开头；</li>\\n<li>属性选择器： 指含有“<code>[]</code>”选择器，如 <code>[title]{}</code>；</li>\\n<li>伪类选择器： 指前面有一个英文冒号（<code>:</code>）</li>\\n<li>伪元素选择器： 指前面有一个英文冒号（<code>::</code>），如： <code>::before</code>、<code>::after</code>。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>关系选择器</strong></p>\\n<ul>\\n<li>后代选择器： 空格连接；</li>\\n<li>相邻后代选择器：<code>&gt;</code> 连接；</li>\\n<li>兄弟选择器：<code>~</code> 连接；</li>\\n<li>相邻兄弟选择器：+连接。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>块级元素</strong></p>\\n<p><code>display</code> 为 <code>block</code>、<code>table</code>和如 <code>&lt;li&gt;</code>元素的 <code>list-item</code> 。</p>\\n<p>代表: <code>&lt;div&gt;</code>、<code>&lt;p&gt;</code>、<code>&lt;table&gt;</code> 等</p>\\n<p>块级元素具有换行特性，可以配合 <code>clear</code> 属性清除浮动带来的影响。</p>\\n<ul>\\n<li><code>list-item</code>是标记盒子，专门用于存放圆点和数字这些项目符号。</li>\\n<li>如行内块 <code>display：inline-block</code> ，实际上是由俩个盒子共同组成，一个内部块级的“容器盒子”和一个外部的内联级的外在盒子共同组成。</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>内联元素</strong></p>\\n<p><code>display</code> 为<code>inline</code>、 <code>inline-bloc</code> 和 <code>inline-table</code>。</p>\\n<p>如： <code>&lt;span&gt;</code>、 <code>&lt;button&gt;</code> 、 <code>&lt;img&gt;</code> 、<code>&lt;em&gt;</code></p>\\n<p>需要注意的是，内联盒子模型中，存在一个幽灵空白节点，在 <code>line-height</code> 和 <code>vertical-align</code> 影响巨大。</p>\\n<h3> 内容区域、内联盒子、行框盒子、包含盒子</h3>\\n<ul>\\n<li>\\n<p><strong>内容区域(content area)</strong>：是一种围绕文字看不见的盒子，其大小仅受字符本身特性控制，本质上是一个字符盒子（character box）。内容区域的大小与 <code>font-size</code> 大小和 <code>font-family</code> 相关，与 <code>line-height</code> 没有任何关系。</p>\\n</li>\\n<li>\\n<p><strong>内联盒子(inline boxes)</strong>：<strong>每个行内元素会生成一个行内框</strong>，行内框是一个浏览器渲染模型中的一个概念，无法显示出来。内联盒子不会让内容成块显示，而是排成一行。</p>\\n<p>如：外部包含inline水平的标签(span、a、em、strong等)，则属于内联盒子。如果是个光秃秃的文字，则属于匿名内联盒子。行内框默认等于内容区域，除非设置了padding。</p>\\n</li>\\n<li>\\n<p><strong>行框盒子(line boxes)：</strong> <strong>每一行就是一个行框盒子，每个行框盒子又是由一个一个内联盒子组成</strong>。行框盒子是浏览器渲染模式中的一个概念，无法显示出来。行框高度等于本行中所有行内框高度的最大值。<strong>当有多行内容时，每一行都有自己的行框</strong>。</p>\\n</li>\\n<li>\\n<p><strong>包含盒子(containing box)</strong>：或者准确为<strong>包含块</strong>，<strong>由一行一行的行框盒子组成</strong>，<strong>高度就是单行文本高度的累加</strong>。</p>\\n</li>\\n</ul>\\n<figure><img src=\\"https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/20230318123201.png\\" alt=\\"盒子模型\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>盒子模型</figcaption></figure>\\n</li>\\n<li>\\n<p><strong>幽灵空白节点</strong>，内联元素的所有解析和渲染表现就如同每个行框盒子的前面有一个“空白节点”，这个“空白节点”永远透明，不占据任何宽度，看不见也无法通过脚本获取，就如同幽灵一样，但又确确实实地存在，表现如图文本节点一般。</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
