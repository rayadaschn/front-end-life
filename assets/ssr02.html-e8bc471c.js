const e=JSON.parse('{"key":"v-c793bdb2","path":"/Framework/Nuxt/ssr02.html","title":"Nuxt 之项目创建","lang":"zh-CN","frontmatter":{"title":"Nuxt 之项目创建","icon":"vue","date":"2023-06-08T00:00:00.000Z","category":["框架"],"tag":["ssr"],"star":false,"sticky":false},"headers":[{"level":2,"title":"环境配置","slug":"环境配置","link":"#环境配置","children":[]},{"level":2,"title":"安装 Nuxt3","slug":"安装-nuxt3","link":"#安装-nuxt3","children":[]},{"level":2,"title":"配置项目规范","slug":"配置项目规范","link":"#配置项目规范","children":[{"level":3,"title":"ESLint 和 Prettier 规范 JS 代码","slug":"eslint-和-prettier-规范-js-代码","link":"#eslint-和-prettier-规范-js-代码","children":[]},{"level":3,"title":"Stylelint 规范 CSS","slug":"stylelint-规范-css","link":"#stylelint-规范-css","children":[]},{"level":3,"title":"Husk 代码提交检测","slug":"husk-代码提交检测","link":"#husk-代码提交检测","children":[]}]},{"level":2,"title":"状态管理 Pinia","slug":"状态管理-pinia","link":"#状态管理-pinia","children":[]},{"level":2,"title":"Vueuse hook 配置","slug":"vueuse-hook-配置","link":"#vueuse-hook-配置","children":[]}],"git":{"createdTime":1703991106000,"updatedTime":1749566591000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":5.87,"words":1760},"filePathRelative":"Framework/Nuxt/ssr02.md","localizedDate":"2023年6月8日","excerpt":"<p>在上一篇文章<a href=\\"./ssr01\\">《服务端渲染 SSR 概述》</a> 中，简单介绍了一下关于 Nuxt 的一些基本概念。该文接着记录一下从头创建一个 Nuxt 服务端渲染的项目过程。</p>\\n<p>项目最终配置地址可见 <a href=\\"https://github.com/rayadaschn/nuxt3-demo.git\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Github</a>。</p>\\n<p>该项目包含以下内容：</p>\\n<ul>\\n<li>Nuxt3 以 Vue3、Typescript 和 Vite 进行开发；</li>\\n<li>利用 Sass 进行 css 代码编写;</li>\\n<li>利用 Pinia 代替 Vuex 进行状态管理；</li>\\n<li>路由为文件式管理；</li>\\n<li>Git Husk 进行 代码提交验证</li>\\n<li>使用 ESlint、Prettier 和 Stylelint 进行代码检测修复；</li>\\n<li>集成 Vueuse 作为 Hooks 库（不是项目必须项）；</li>\\n</ul>"}');export{e as data};
