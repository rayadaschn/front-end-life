import{_ as s,Z as t,a0 as e,F as p,a1 as o,X as c,Y as i,$ as l}from"./framework-97fa2d96.js";const r={},n=t,u=e,d=p,k=o,v=l,m=c,g=i,b=v(`<h2 id="适用场景" tabindex="-1"><a class="header-anchor" href="#适用场景" aria-hidden="true">#</a> 适用场景</h2><p>不同的技术对应不同的应用场景，下面是小程序、APP 和 H5 的比较</p><table><thead><tr><th style="text-align:center;">运行载体</th><th style="text-align:center;">运行环境</th><th style="text-align:center;">功能性</th><th style="text-align:center;">便捷性</th><th style="text-align:center;">交互体验</th><th style="text-align:center;">开发成本</th><th style="text-align:center;">推广难度</th><th style="text-align:center;">消息推送</th></tr></thead><tbody><tr><td style="text-align:center;">小程序</td><td style="text-align:center;">微信</td><td style="text-align:center;">轻应用</td><td style="text-align:center;">无需安装</td><td style="text-align:center;">解决原生 APP</td><td style="text-align:center;">中</td><td style="text-align:center;">低</td><td style="text-align:center;">受限</td></tr><tr><td style="text-align:center;">公众号</td><td style="text-align:center;">H5</td><td style="text-align:center;">简单</td><td style="text-align:center;">无需安装</td><td style="text-align:center;">一般</td><td style="text-align:center;">低</td><td style="text-align:center;">低</td><td style="text-align:center;">支持</td></tr><tr><td style="text-align:center;">APP</td><td style="text-align:center;">原生系统</td><td style="text-align:center;">丰富</td><td style="text-align:center;">需要安装</td><td style="text-align:center;">最流畅</td><td style="text-align:center;">高</td><td style="text-align:center;">高</td><td style="text-align:center;">支持</td></tr></tbody></table><p>为什么会快？这个实际上和小程序的架构有关。</p><p>传统的 Web 技术在做页面渲染时，页面的逻辑执行脚本和页面 DOM 渲染是共用同一个线程。因此，业务逻辑和 UI 渲染常常相互抢占资源，容易出现性能问题。</p><p>而小程序是采用了 Hybrid 技术，使用的是混合开发模式。界面采用 Web 技术渲染，再将客户端原生能力封装成接口供开发者调用，并通过双线程模型分离界面渲染和逻辑处理，从而提高小程序的渲染性能和管控安全。</p><h2 id="小程序的文件结构" tabindex="-1"><a class="header-anchor" href="#小程序的文件结构" aria-hidden="true">#</a> 小程序的文件结构</h2><div class="language-tree line-numbers-mode" data-ext="tree"><pre class="language-tree"><code>├──app.wxss              小程序公共样式表【非必须】
├──app.json              小程序公共应用配置【必须】
├──app.js                小程序逻辑【必须】
├──project.config.json   小程序项目配置【必须】
└──pages
    ├─index.js           页面逻辑【必须】
    ├─index.json         页面配置【必须】
    ├─index.wxml         页面结构【非必须】
    └─index.wxss         页面样式表【非必须】
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：为了方便开发者减少配置项，<strong>描述页面的四个文件必须具有相同的路径与文件名</strong>。 在小程序中，<code>project.config.json</code> 和 <code>app.json</code> 是两个重要的配置文件，它们之间有以下区别：</p><ul><li><code>project.config.json</code>：这个文件是整个小程序项目的配置文件，用于配置项目的基本信息，如项目名称、版本号、appid、开发者信息等。它是整个小程序项目的配置文件中<strong>最高级别的文件</strong>，它的配置会影响到整个小程序项目的所有部分。</li><li><code>app.json</code>：这个文件是小程序应用的配置文件，用于配置小程序的全局设置，如页面路径、窗口背景色、导航栏样式、底部 tab 栏等。它是小程序中每个页面的配置文件的父级文件，它的配置会影响到所有小程序页面的表现和功能。</li></ul></blockquote><p>由上可知，一个小程序项目主要分为两部分：主体文件和页面文件。</p><ul><li>主体文件必须放在项目的根目录，它的配置会影响整个小程序项目。</li><li>页面文件必须放在 pages 目录下，每个页面都有一个独立的文件夹。</li></ul><h2 id="小程序的生命周期" tabindex="-1"><a class="header-anchor" href="#小程序的生命周期" aria-hidden="true">#</a> 小程序的生命周期</h2><figure><img src="https://cdn.jsdelivr.net/gh/rayadaschn/blogImage@master/img/202307041625994.png" alt="小程序的主要生命周期" tabindex="0" loading="lazy"><figcaption>小程序的主要生命周期</figcaption></figure><p>如上图所示，一个完整的小程序生命周期实际上包括<strong>组件生命周期</strong>和<strong>页面生命周期</strong>两部分。</p><ul><li>一个微信小程序启动后，首次加载页面，会触发页面的 <strong>onLoad</strong> 事件（这个事件只会在页面首次加载时才会触发）；</li><li>当页面显示的时候会触发 <strong>onShow</strong> 事件，若这个页面是首次渲染完成，则会接着触发 <strong>onReady</strong> 事件；</li><li>若将小程序切换到后台，页面就会被隐藏同时触发 <strong>onHide</strong> 事件；下次从后台切换到前台时，则会再次触发 <strong>onShow</strong> 事件。</li><li>最后，当页面被回收销毁时，会触发 <strong>onUnload</strong> 事件。</li></ul><p>完整的生命周期：</p><figure><img src="https://res.wx.qq.com/wxdoc/dist/assets/img/page-lifecycle.2e646c86.png" alt="完整的生命周期" tabindex="0" loading="lazy"><figcaption>完整的生命周期</figcaption></figure><h3 id="项目生命周期" tabindex="-1"><a class="header-anchor" href="#项目生命周期" aria-hidden="true">#</a> 项目生命周期</h3><p>小程序的生命周期一般使用 App（Object object）来注册小程序， 从而管理自己的生命周期。</p><blockquote><p>注意，App() 方法有且只有一个,不能注册多个,否则会出现无法与其的后果。</p></blockquote><p>在根目录下的 <code>app.js</code> 文件中书写生命周期:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// app.js</span>
<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">onLaunch</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 监听小程序初始化</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onShow</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 监听小程序 显示</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onHide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 监听小程序隐藏</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onError</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 监听错误</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 全局数据对象</span>
  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="页面生命周期的注册" tabindex="-1"><a class="header-anchor" href="#页面生命周期的注册" aria-hidden="true">#</a> 页面生命周期的注册</h3><p>在页面下的 index.js 中使用 Page 构造器注册页面:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;页面注册生命周期&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onReady</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onShow</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onHide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onUnload</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onPullDownRefresh</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onReachBottom</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onShareAppMessage</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,26),h=n("li",null,"《小程序开发原理与实战》",-1),f={href:"https://developers.weixin.qq.com/miniprogram/dev/framework/",target:"_blank",rel:"noopener noreferrer"};function x(y,_){const a=d("ExternalLinkIcon");return m(),g("div",null,[b,n("ul",null,[h,n("li",null,[n("a",f,[u("微信小程序官方文档"),k(a)])])])])}const w=s(r,[["render",x],["__file","mini-app-02.html.vue"]]);export{w as default};
