import{_ as e,X as l,Y as o,$ as i}from"./framework-5dd7fabc.js";const r={},a=i,t=l,n=o,p=a('<p>在这一节里，回顾一遍 WeBGis 的一些相关概念。</p><h2 id="什么是-webgis" tabindex="-1"><a class="header-anchor" href="#什么是-webgis" aria-hidden="true">#</a> 什么是 WebGis？</h2><p>WebGIS（网络地理信息系统）是指基于网络平台，客户端应用软件采用网络协议，运行在网络上的地理信息系统，即将 GIS 所能提供的功能通过网络展现给用户。</p><blockquote><p>顾名思义，WebGIS 就是展现在网络上的 GIS，是 GIS 与 Web 融合的产物。GIS 通过 Web 功能得以扩展，使得 GIS 冲破专业圈子，真正成为大众化的 GIS。</p></blockquote><h2 id="什么是-openlayers" tabindex="-1"><a class="header-anchor" href="#什么是-openlayers" aria-hidden="true">#</a> 什么是 OpenLayers?</h2><p>OpenLayers 是一个专门为 WebGIS 客户端提供的 JavaScript 类库。用于访问以标准格式发布的地图数据，实现访问空间数据的方法都符合行业标准，支持各种公开的和私有的数据标准和资源。</p><p>支持的数据格式有: XML、JSON、GeoJSON、MVT、GML、GPX、KML、WFS 等。</p><h2 id="核心类" tabindex="-1"><a class="header-anchor" href="#核心类" aria-hidden="true">#</a> 核心类</h2><ol><li><p>Map(ol.Map): 地图容器, 加载各类地图和功能控件;</p></li><li><p>WebGlMap(ol.WebGlMap): 使用 WebGl 进行渲染的地图容器, 但对矢量数据的支持有限, 且不支持矢量瓦片数据;</p></li><li><p>View(ol.View): 地图视图, 控制地图缩放等基本交互, 以及地图投影坐标系、地图中心点、分辨率和旋转角等；</p></li><li><p>Layers(ol.Layers): 图层, 包含多个调用数据的子类, 由子类的实例加载地图数据, 必须结合图层数据源匹配使用;</p></li><li><p>Source(ol.source.Source): 图层数据源, 与图层子类对应, 由图层数据源的实例来加载各种类型的地图数据;</p></li><li><p>Format(ol.format.Feature): 数据解析类, 此类由于读/写各种格式的数据, 并创建了多种格式的子类, 即数据解析器。目前支持多种数据格式， 如 GeoJSON、GML 等；</p></li><li><p>Geometry(ol.geom.Geometry): 地理空间对象的几何实体, 由其子类(如 Point、LineString、 Polygon)的实例构成所看到的矢量地图；</p></li><li><p>Overlay(ol.Overlay): 叠加层, 即叠加到地图上显示的要素, 关联了一个自定义的 HTML 元素, 由一个单一的地图坐标点确定叠加位置。与控件类似， 但不同的是叠加元素不是一个固定的屏幕位置上，而是通过关联一个地图逻辑坐标点跟随地图移动， 如标注点等；</p></li><li><p>Control(ol.control.Control): 即通常所说的控件类, 可提供各种各样的地图功能控件, 如地图缩放控件(Zoom)、鼠标位置控件（MousePosition）、鹰眼（OverViewMao）和比例尺（ScaleLine）等；</p></li><li><p>Interaction（ol.interaction.Interaction）: 地图交互控件类。地图交互一般是通过鼠标与键盘进行的，因此 Interaction 的子类为基于鼠标和键盘操作的地图交互功能控件；</p></li><li><p>Style（ol.style.Style）: 样式类, 可通过其子类实例来渲染矢量要素的样式,包括填充样式(Fill)、边界样式（Stroke）、图例样式（Image 和 Icon）和文字样式（Text）等；</p></li><li><p>Projections（ol.pro.Projection）: 地图投影定义类, 包括 EPSG:44326(ol.proj.EPSG4326)和 EPSG:3857(ol.proj.EPSG3857)</p><blockquote><p>EPSG 是空间参考系统的标识符，用于描述地理空间数据的坐标系统和投影方法。</p></blockquote><ul><li>EPSG:4326 是指 WGS84 地理坐标系统，其投影方式是经纬度坐标系统，地球是一个球体，坐标以经度和纬度表示。这是一种常见的地理坐标系统，被广泛应用于地理信息系统（GIS）和全球定位系统（GPS）等领域。</li><li>EPSG:3857 是指 Web Mercator 投影坐标系统，也称为 Spherical Mercator 或 Google Mercator。这种投影方式是将地球视为一个椭球体，并将其投影到一个平面上，用于 Web 地图服务中常见的坐标系统。EPSG:3857 在 Web 开发中广泛使用，例如在 OpenLayers（ol.proj.EPSG3857）等地图库中。</li></ul></li><li><p>Renderer(ol.renderer.Renderer): 渲染器，支持 Canvas 和 webGL 俩种渲染方式，类似于 虚拟 DOM 的渲染。</p></li></ol><h2 id="类的事件" tabindex="-1"><a class="header-anchor" href="#类的事件" aria-hidden="true">#</a> 类的事件</h2><ol><li>ol.MapEvent: 地图事件类, 继承与 <code>ol.events.Event</code>, 其子类为 ol.MapBrowserEvent, 可查看 ol.Map 中有哪些事件触发了地图事件, 如单击(click)、双击（dbclick）、鼠标拖拽（pointerdrag）、鼠标移动（pointermove）等事件可触发地图浏览器事件（ol.MapBrowserEvent）, 而移动结束(moveend)事件可触发地图事件。</li><li>ol.Object.Event: 可提供属性变更事件(Propertychange), 属性变化发生变更时触发此事件。</li></ol><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><ol><li>ol.Tile: 瓦片基类;</li><li>ol.Image: 图像类;</li><li>ol.Collection: 集合类;</li><li>ol.Geolocation: 地理位置;</li><li>ol.Graticule: 网格标线。</li></ol>',13),c=[p];function s(d,G){return t(),n("div",null,c)}const S=e(r,[["render",s],["__file","Gis01.html.vue"]]);export{S as default};
