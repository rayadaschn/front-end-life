import{_ as t,Z as o,a0 as p,F as c,a1 as r,X as l,Y as i,$ as d}from"./framework-5dd7fabc.js";const u={},n=o,a=p,m=c,e=r,g=d,k=l,v=i,b=g(`<h1 id="javascript-中的位运算" tabindex="-1"><a class="header-anchor" href="#javascript-中的位运算" aria-hidden="true">#</a> JavaScript 中的位运算</h1><p>在 <strong>JavaScript</strong> 中, <strong>移位运算</strong>就是对二进制进行有规律低移位。在本篇中, 将要简要总结 <strong>js 位运算</strong> 的常用方法及技巧。在 <strong>算法中的整除和整乘</strong> 常以 <strong>位运算</strong> 代替 <strong><code>Math</code></strong> 方法，速度确实提升很多。常用的位移运算有三种:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;&lt;</span>     <span class="token comment">//左移</span>
<span class="token operator">&gt;&gt;</span>     <span class="token comment">//带符号右移</span>
<span class="token operator">&gt;&gt;&gt;</span>    <span class="token comment">//无符号右移</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="左移" tabindex="-1"><a class="header-anchor" href="#左移" aria-hidden="true">#</a> 左移 &lt;&lt;</h2><p><strong>左移操作符 (<code>&lt;&lt;</code>)</strong> 将第一个操作数向左移动指定位数，左边超出的位数将会被清除，右边将会补零。</p><ul><li><p><strong>正、负数相同， 且不区分奇偶:</strong> 左移 <strong>n</strong> 位, 即结果乘以 <strong>2 的 n 次方</strong> ;</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/** 正数 */</span>
<span class="token number">2</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token comment">// 结果为 4</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;&lt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// 结果为 6</span>
    <span class="token doc-comment comment">/** 负数 */</span>
    <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// 结果为 -4</span>
    <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span>
  <span class="token number">1</span> <span class="token comment">// 结果为 -6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="带符号右移" tabindex="-1"><a class="header-anchor" href="#带符号右移" aria-hidden="true">#</a> 带符号右移 &gt;&gt;</h2><p><strong>右移操作符 (<code>&gt;&gt;</code>)</strong> 是将一个操作数按指定移动的位数向右移动，右边移出位被丢弃，左边移出的空位补符号位（最左边那位）。</p><ul><li><p><strong>正、负数相同:</strong> 右移 <strong>n</strong> 位, 相当于<strong>整除 n 且 向下取整</strong> , 等同于 <code>Math.floor( Num/(2^n) )</code> ;</p><p>【<strong>Tips</strong>】若想要得到 <strong>整除向上取整</strong> 结果, 可以 预先 <strong>给<code>Num+1</code></strong> ： <code>( (Num+1) &gt;&gt; n )</code> 等同于 <code>Math.floor( Num/(2^n) )</code> ;</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 正数</span>
<span class="token number">3</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span> <span class="token comment">// 1</span>
<span class="token number">4</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span> <span class="token comment">// 2</span>
<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">&gt;&gt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// 2</span>
    <span class="token comment">// 负数</span>
    <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// -2</span>
    <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// -2</span>
    <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span>
  <span class="token number">1</span> <span class="token comment">// -3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>【<strong>Tips</strong>】需要注意的是, 负数与正数不同, <strong>向上/向下取整</strong> 后结果的大小差异。</p></blockquote><h2 id="无符号右移运算符" tabindex="-1"><a class="header-anchor" href="#无符号右移运算符" aria-hidden="true">#</a> 无符号右移运算符（&gt;&gt;&gt;）</h2><p><strong>无符号右移运算符（&gt;&gt;&gt;）</strong>（零填充右移）将第一个操作数向右移动指定（二进制）位数。</p><ul><li><strong>正数:</strong> 与 <strong>带符号右移运算符(&gt;&gt;)</strong> 无差异。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">3</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span> <span class="token comment">// 1</span>
<span class="token number">4</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span> <span class="token comment">// 2</span>
<span class="token number">5</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>负数:</strong> 与 <strong>带符号右移运算符(&gt;&gt;)</strong> 差异较大, 直接超出数据大小了。<strong>最好不要用 !!!</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span> <span class="token operator">&gt;&gt;&gt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// 2147483646</span>
    <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span>
  <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token comment">// 2147483646</span>
    <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span>
  <span class="token number">1</span> <span class="token comment">// 2147483645</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2>`,18),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Left_shift",target:"_blank",rel:"noopener noreferrer"},_={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Right_shift",target:"_blank",rel:"noopener noreferrer"},f={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift",target:"_blank",rel:"noopener noreferrer"};function j(N,x){const s=m("ExternalLinkIcon");return k(),v("div",null,[b,n("ul",null,[n("li",null,[n("a",h,[a("左移 (<<) - JavaScript | MDN (mozilla.org)"),e(s)])]),n("li",null,[n("a",_,[a("右移 (>>) - JavaScript | MDN (mozilla.org)"),e(s)])]),n("li",null,[n("a",f,[a("无符号右移运算符（>>>） - JavaScript | MDN (mozilla.org)"),e(s)])])])])}const z=t(u,[["render",j],["__file","other03.html.vue"]]);export{z as default};
