const e=JSON.parse('{"key":"v-7382ddc0","path":"/Framework/mini-app-01.html","title":"小程序 Debug 宝典","lang":"zh-CN","frontmatter":{"title":"小程序 Debug 宝典","icon":"mini-app","date":"2023-02-07T00:00:00.000Z","category":["mini-app"],"tag":["mini-app"]},"headers":[],"git":{"createdTime":1688522669000,"updatedTime":1688522669000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.72,"words":217},"filePathRelative":"Framework/mini-app-01.md","localizedDate":"2023年2月7日","excerpt":"<ol>\\n<li>\\n<p>数据绑定： 在 <code>WXML</code> 中动态数据利用 <code>Mustache</code> 双括号语法将变量包裹起来，可以绑定动态内容及 组件 class 属性，需注意的是 <strong>控制的变量需要放在双括号内</strong>，才能生效。如：</p>\\n<div class=\\"language-HTML line-numbers-mode\\" data-ext=\\"HTML\\"><pre class=\\"language-HTML\\"><code>&lt;view wx:if=\\"{{value}}\\" &gt;&lt;/view&gt;\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>数据更新 <code>this.setData</code> :</p>\\n<p>小程序的渲染过程是逻辑层负责生产、处理数据，利用 <code>setData</code> 传递数据到渲染层。其中，从逻辑层传递到渲染层是 <strong>异步</strong> 的，而 <strong><code>this.data</code></strong> 的修改是 <strong>同步</strong> 的。因此，连续多次的调用 <code>this.setData</code> 会导致 JS 线程一直处于编译执行渲染阶段，造成卡顿。官方优化建议：</p>\\n<ul>\\n<li>避免频繁调用 <code>setData</code> ;</li>\\n<li>避免每次 <code>setData</code> 都传递大量数据;</li>\\n<li>在后台页面进行 <code>setData</code></li>\\n</ul>\\n</li>\\n</ol>"}');export{e as data};
