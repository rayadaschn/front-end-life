const e=JSON.parse('{"key":"v-d71d4596","path":"/OneMoreThing/interview06.html","title":"Interview -- DOM 和 BOM","lang":"zh-CN","frontmatter":{"title":"Interview -- DOM 和 BOM","date":"2023-08-10T00:00:00.000Z","category":["anonymous"],"tag":["note"],"star":false,"sticky":false},"headers":[{"level":2,"title":"DOM","slug":"dom","link":"#dom","children":[{"level":3,"title":"获取元素","slug":"获取元素","link":"#获取元素","children":[]},{"level":3,"title":"操作元素内容","slug":"操作元素内容","link":"#操作元素内容","children":[]},{"level":3,"title":"操作元素属性和样式","slug":"操作元素属性和样式","link":"#操作元素属性和样式","children":[]},{"level":3,"title":"创建和修改元素","slug":"创建和修改元素","link":"#创建和修改元素","children":[]},{"level":3,"title":"事件处理","slug":"事件处理","link":"#事件处理","children":[]},{"level":3,"title":"遍历和查找","slug":"遍历和查找","link":"#遍历和查找","children":[]}]},{"level":2,"title":"BOM","slug":"bom","link":"#bom","children":[{"level":3,"title":"window 对象","slug":"window-对象","link":"#window-对象","children":[]},{"level":3,"title":"navigator 对象","slug":"navigator-对象","link":"#navigator-对象","children":[]},{"level":3,"title":"screen 对象","slug":"screen-对象","link":"#screen-对象","children":[]},{"level":3,"title":"history 对象","slug":"history-对象","link":"#history-对象","children":[]},{"level":3,"title":"localStorage 和 sessionStorage","slug":"localstorage-和-sessionstorage","link":"#localstorage-和-sessionstorage","children":[]}]}],"git":{"createdTime":1691627476000,"updatedTime":1691713228000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":2.85,"words":854},"filePathRelative":"OneMoreThing/interview06.md","localizedDate":"2023年8月10日","excerpt":"<p>总结一下常用的 DOM 和 BOM 操作。</p>\\n<h2> DOM</h2>\\n<p>DOM 是指文档对象模型，常用的操作有获取元素、操作元素内容、创建和修改元素、事件处理和遍历查找。</p>\\n<h3> 获取元素</h3>\\n<ul>\\n<li>getElementById(id)：根据元素的 id 获取元素;</li>\\n<li>getElementsByTagName(tagName): 根据标签名获取元素<strong>集合</strong>，需要注意的是这里是 Element<strong>s</strong>，类名是可以重复的得到的元素不止一个！;</li>\\n<li>getElementsByClassName(className)：根据元素的 Class 类名获取元素<strong>集合</strong>；</li>\\n<li>querySelector(selector)：根据 CSS 选择器获取元素，返回第一个匹配的元素;\\n<blockquote>\\n<p>例如: <code>document.querySelector(\\"#demo\\");</code> 获取文档中 id=\\"demo\\" 的第一个元素。</p>\\n</blockquote>\\n</li>\\n<li>querySelectorAll(selector)：根据 CSS 选择器获取一组元素，返回所有匹配的元素<strong>集合</strong>。</li>\\n</ul>"}');export{e as data};
