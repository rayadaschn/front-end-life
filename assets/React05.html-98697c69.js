const e=JSON.parse('{"key":"v-6b57ee7f","path":"/Framework/React05.html","title":"React之路由管理","lang":"zh-CN","frontmatter":{"title":"React之路由管理","icon":"react","category":["框架"],"tag":["React"],"star":true,"sticky":false},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[{"level":3,"title":"URL 的 hash","slug":"url-的-hash","link":"#url-的-hash","children":[]},{"level":3,"title":"HTML5 的 History","slug":"html5-的-history","link":"#html5-的-history","children":[]}]},{"level":2,"title":"React 中的 React-router","slug":"react-中的-react-router","link":"#react-中的-react-router","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"路由映射配置","slug":"路由映射配置","link":"#路由映射配置","children":[]},{"level":3,"title":"路由配置和跳转","slug":"路由配置和跳转","link":"#路由配置和跳转","children":[]},{"level":3,"title":"Not Found 页面配置","slug":"not-found-页面配置","link":"#not-found-页面配置","children":[]},{"level":3,"title":"路由的嵌套","slug":"路由的嵌套","link":"#路由的嵌套","children":[]},{"level":3,"title":"手动路由的跳转","slug":"手动路由的跳转","link":"#手动路由的跳转","children":[]},{"level":3,"title":"路由参数传递","slug":"路由参数传递","link":"#路由参数传递","children":[]},{"level":3,"title":"统一配置文件","slug":"统一配置文件","link":"#统一配置文件","children":[]},{"level":3,"title":"路由的懒加载","slug":"路由的懒加载","link":"#路由的懒加载","children":[]}]}],"git":{"createdTime":1680572904000,"updatedTime":1680751445000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":15.05,"words":4515},"filePathRelative":"Framework/React05.md","localizedDate":"2023年4月4日","excerpt":"<h1> React之路由管理</h1>\\n<h2> 前言</h2>\\n<p>前端路由的核心是改变 URL，但是也没不进行整体的刷新。由此带来了俩种模式：Hash 和HTML5 的 History。</p>\\n<h3> URL 的 hash</h3>\\n<p><strong>URL的hash也就是锚点(#)</strong>，本质上是改变<code>window.location</code>的<code>href</code>属性；我们可以通过直接赋值<code>location.hash</code>来改变<code>href</code>，但是页面不发生刷新。</p>\\n<p>以下是最常用的用法，当用户点击页面中的链接时，可以使用 hash 来实现不同内容的展示，而不需要重新加载整个页面。以下是一个简单的 HTML 示例，演示了如何在页面中使用 hash：</p>"}');export{e as data};
