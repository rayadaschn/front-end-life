import{_ as t,X as e,Y as l,$ as a}from"./framework-97fa2d96.js";const n={},s=a,i=e,d=l,r=s(`<blockquote><p>本文记录一些常用的布局书写方式，以作查漏补缺。</p></blockquote><h2 id="容器" tabindex="-1"><a class="header-anchor" href="#容器" aria-hidden="true">#</a> 容器</h2><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Breakpoint</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;">container</td><td style="text-align:left;">None</td><td style="text-align:left;">width: 100%;</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">sm (640px)</td><td style="text-align:left;">max-width: 640px;</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">md (768px)</td><td style="text-align:left;">max-width: 768px;</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">lg (1024px)</td><td style="text-align:left;">max-width: 1024px;</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">xl (1280px)</td><td style="text-align:left;">max-width: 1280px;</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">2xl (1536px)</td><td style="text-align:left;">max-width: 1536px;</td></tr></tbody></table><ul><li><p>容器居中：mx-auto</p></li><li size=""><p>添加水平内边距：px-</p></li><li><p>响应式变体，如只在某个断点上表现出差异：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- Full-width fluid until the \`md\` breakpoint, then lock to container --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>md:container md:mx-auto<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>自定义容器在默认情况下居中。通过配置 <code>theme.container</code> 部分将 <code>center</code> 设置为 <code>true</code>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// tailwind.config.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">center</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="box-sizing" tabindex="-1"><a class="header-anchor" href="#box-sizing" aria-hidden="true">#</a> Box Sizing</h2><p>设置盒子类型会和原生有一点不同，由 box 开头：</p><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;">box-border</td><td style="text-align:left;">box-sizing: border-box;</td></tr><tr><td style="text-align:left;">box-content</td><td style="text-align:left;">box-sizing: content-box;</td></tr></tbody></table><h2 id="display-常用布局" tabindex="-1"><a class="header-anchor" href="#display-常用布局" aria-hidden="true">#</a> Display 常用布局</h2><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>block</strong></td><td style="text-align:left;"><strong>display: block;</strong></td></tr><tr><td style="text-align:left;"><strong>inline-block</strong></td><td style="text-align:left;"><strong>display: inline-block;</strong></td></tr><tr><td style="text-align:left;"><strong>inline</strong></td><td style="text-align:left;"><strong>display: inline;</strong></td></tr><tr><td style="text-align:left;"><strong>flex</strong></td><td style="text-align:left;"><strong>display: flex;</strong></td></tr><tr><td style="text-align:left;">inline-flex</td><td style="text-align:left;">display: inline-flex;</td></tr><tr><td style="text-align:left;">table</td><td style="text-align:left;">display: table;</td></tr><tr><td style="text-align:left;">inline-table</td><td style="text-align:left;">display: inline-table;</td></tr><tr><td style="text-align:left;">table-caption</td><td style="text-align:left;">display: table-caption;</td></tr><tr><td style="text-align:left;">table-cell</td><td style="text-align:left;">display: table-cell;</td></tr><tr><td style="text-align:left;">table-column</td><td style="text-align:left;">display: table-column;</td></tr><tr><td style="text-align:left;">table-column-group</td><td style="text-align:left;">display: table-column-group;</td></tr><tr><td style="text-align:left;">table-footer-group</td><td style="text-align:left;">display: table-footer-group;</td></tr><tr><td style="text-align:left;">table-header-group</td><td style="text-align:left;">display: table-header-group;</td></tr><tr><td style="text-align:left;">table-row-group</td><td style="text-align:left;">display: table-row-group;</td></tr><tr><td style="text-align:left;">table-row</td><td style="text-align:left;">display: table-row;</td></tr><tr><td style="text-align:left;">flow-root</td><td style="text-align:left;">display: flow-root;</td></tr><tr><td style="text-align:left;">grid</td><td style="text-align:left;">display: grid;</td></tr><tr><td style="text-align:left;">inline-grid</td><td style="text-align:left;">display: inline-grid;</td></tr><tr><td style="text-align:left;">contents</td><td style="text-align:left;">display: contents;</td></tr><tr><td style="text-align:left;">list-item</td><td style="text-align:left;">display: list-item;</td></tr><tr><td style="text-align:left;"><strong>hidden</strong></td><td style="text-align:left;"><strong>display: none;</strong></td></tr></tbody></table><h2 id="浮动" tabindex="-1"><a class="header-anchor" href="#浮动" aria-hidden="true">#</a> 浮动</h2><p>浮动在现代布局中用的较少了，但是也有其存在的必要。浮动较为好记，直接用 <code>-</code> 进行连接即可。</p><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;">float-right</td><td style="text-align:left;">float: right;</td></tr><tr><td style="text-align:left;">float-left</td><td style="text-align:left;">float: left;</td></tr><tr><td style="text-align:left;">float-none</td><td style="text-align:left;">float: none;</td></tr></tbody></table><p>有浮动，自然也有清除浮动，记忆方法同上，但一般都是用 <code>clear-both</code>：</p><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;">clear-left</td><td style="text-align:left;">clear: left;</td></tr><tr><td style="text-align:left;">clear-right</td><td style="text-align:left;">clear: right;</td></tr><tr><td style="text-align:left;">clear-both</td><td style="text-align:left;">clear: both;</td></tr><tr><td style="text-align:left;">clear-none</td><td style="text-align:left;">clear: none;</td></tr></tbody></table><h2 id="position-定位" tabindex="-1"><a class="header-anchor" href="#position-定位" aria-hidden="true">#</a> Position 定位</h2><p>Position 定位非常便捷，直接书写 potion 的值即可：</p><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;">static</td><td style="text-align:left;">position: static;</td></tr><tr><td style="text-align:left;">fixed</td><td style="text-align:left;">position: fixed;</td></tr><tr><td style="text-align:left;">absolute</td><td style="text-align:left;">position: absolute;</td></tr><tr><td style="text-align:left;">relative</td><td style="text-align:left;">position: relative;</td></tr><tr><td style="text-align:left;">sticky</td><td style="text-align:left;">position: sticky;</td></tr></tbody></table><h2 id="top-right-bottom-left" tabindex="-1"><a class="header-anchor" href="#top-right-bottom-left" aria-hidden="true">#</a> Top / Right / Bottom / Left</h2><p>控制定位元素的位置，这个类名较多一般是根据元素值去查表，推荐 VScode 插件来进行书写。</p><p>通用公式：<code>{top|right|bottom|left|inset}-{number}</code></p><p>若是负值，减号在类名前面：<code>-{top|right|bottom|left|inset}-{number|string}</code></p><h2 id="visibility-可见性" tabindex="-1"><a class="header-anchor" href="#visibility-可见性" aria-hidden="true">#</a> visibility 可见性</h2><p>同定位元素一样，直接书写 visibility 的值：</p><table><thead><tr><th style="text-align:left;">Class</th><th style="text-align:left;">Properties</th></tr></thead><tbody><tr><td style="text-align:left;">visible</td><td style="text-align:left;">visibility: visible;</td></tr><tr><td style="text-align:left;">invisible</td><td style="text-align:left;">visibility: hidden;</td></tr></tbody></table><p>区别于 <code>display: none</code>，DOM 元素依旧会存在但是不显示。</p><h2 id="z-index-层叠顺序" tabindex="-1"><a class="header-anchor" href="#z-index-层叠顺序" aria-hidden="true">#</a> z-index 层叠顺序</h2><p>层叠顺序也较好记忆：<code>z-{index}</code></p><h2 id="flex-弹性盒子" tabindex="-1"><a class="header-anchor" href="#flex-弹性盒子" aria-hidden="true">#</a> flex 弹性盒子</h2><p>如上文 Position 所写一样，首先父元素要先设置为 <code>fixed</code>，变为弹性盒子。</p><p>弹性盒子共分为俩部分，父元素控制整体布局，子元素控制元素细节。可见 <a href="FlexboxLayoutTechniques">《弹性布局 Flex》</a></p>`,30),o=[r];function p(c,g){return i(),d("div",null,o)}const y=t(n,[["render",p],["__file","TailwindCSS02.html.vue"]]);export{y as default};
