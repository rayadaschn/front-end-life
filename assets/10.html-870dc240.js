const e=JSON.parse('{"key":"v-ece60eae","path":"/OneMoreThing/interview/10.html","title":"Interview -- React 相关面试题","lang":"zh-CN","frontmatter":{"title":"Interview -- React 相关面试题","icon":"note","date":"2022-08-12T00:00:00.000Z","category":["anonymous"],"tag":["note"],"star":false,"sticky":false},"headers":[{"level":2,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[{"level":3,"title":"jsx 的基本使用","slug":"jsx-的基本使用","link":"#jsx-的基本使用","children":[]},{"level":3,"title":"事件","slug":"事件","link":"#事件","children":[]},{"level":3,"title":"setState","slug":"setstate","link":"#setstate","children":[]},{"level":3,"title":"组件的生命周期","slug":"组件的生命周期","link":"#组件的生命周期","children":[]}]},{"level":2,"title":"高级使用","slug":"高级使用","link":"#高级使用","children":[{"level":3,"title":"受控组件和非受控组件","slug":"受控组件和非受控组件","link":"#受控组件和非受控组件","children":[]},{"level":3,"title":"Protals","slug":"protals","link":"#protals","children":[]},{"level":3,"title":"context","slug":"context","link":"#context","children":[]},{"level":3,"title":"异步组件","slug":"异步组件","link":"#异步组件","children":[]},{"level":3,"title":"性能优化","slug":"性能优化","link":"#性能优化","children":[]},{"level":3,"title":"PureComponent 和 memo","slug":"purecomponent-和-memo","link":"#purecomponent-和-memo","children":[]},{"level":3,"title":"immutable.js","slug":"immutable-js","link":"#immutable-js","children":[]},{"level":3,"title":"组件公共逻辑的抽离","slug":"组件公共逻辑的抽离","link":"#组件公共逻辑的抽离","children":[]}]},{"level":2,"title":"redux","slug":"redux","link":"#redux","children":[{"level":3,"title":"Redux 的基本使用","slug":"redux-的基本使用","link":"#redux-的基本使用","children":[]},{"level":3,"title":"在组件中使用 react-redux","slug":"在组件中使用-react-redux","link":"#在组件中使用-react-redux","children":[]},{"level":3,"title":"同步和异步 action","slug":"同步和异步-action","link":"#同步和异步-action","children":[]}]},{"level":2,"title":"框架原理","slug":"框架原理","link":"#框架原理","children":[{"level":3,"title":"jsx 的本质是什么","slug":"jsx-的本质是什么","link":"#jsx-的本质是什么","children":[]},{"level":3,"title":"说一下 React 的合成事件机制","slug":"说一下-react-的合成事件机制","link":"#说一下-react-的合成事件机制","children":[]},{"level":3,"title":"说一下 setState 和 batchUpdate","slug":"说一下-setstate-和-batchupdate","link":"#说一下-setstate-和-batchupdate","children":[]},{"level":3,"title":"组件渲染和更新过程","slug":"组件渲染和更新过程","link":"#组件渲染和更新过程","children":[]},{"level":3,"title":"函数组件和 class 组件的区别","slug":"函数组件和-class-组件的区别","link":"#函数组件和-class-组件的区别","children":[]},{"level":3,"title":"react-router 如何配置懒加载","slug":"react-router-如何配置懒加载","link":"#react-router-如何配置懒加载","children":[]}]},{"level":2,"title":"React 性能优化","slug":"react-性能优化","link":"#react-性能优化","children":[]},{"level":2,"title":"React 和 Vue 的区别","slug":"react-和-vue-的区别","link":"#react-和-vue-的区别","children":[]},{"level":2,"title":"React Hooks","slug":"react-hooks","link":"#react-hooks","children":[{"level":3,"title":"useEffect 模拟生命周期","slug":"useeffect-模拟生命周期","link":"#useeffect-模拟生命周期","children":[]},{"level":3,"title":"为什么会有 React Hooks, 它解决了哪些问题?","slug":"为什么会有-react-hooks-它解决了哪些问题","link":"#为什么会有-react-hooks-它解决了哪些问题","children":[]},{"level":3,"title":"React Hooks 如何模拟生命周期?","slug":"react-hooks-如何模拟生命周期","link":"#react-hooks-如何模拟生命周期","children":[]},{"level":3,"title":"React Hooks 性能优化?","slug":"react-hooks-性能优化","link":"#react-hooks-性能优化","children":[]},{"level":3,"title":"使用 React Hooks 遇到哪些坑?","slug":"使用-react-hooks-遇到哪些坑","link":"#使用-react-hooks-遇到哪些坑","children":[]},{"level":3,"title":"Hook 相比 HOC 和 Render Props 有哪些优点?","slug":"hook-相比-hoc-和-render-props-有哪些优点","link":"#hook-相比-hoc-和-render-props-有哪些优点","children":[]}]}],"git":{"createdTime":1705126883000,"updatedTime":1708951517000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":4}]},"readingTime":{"minutes":14.62,"words":4387},"filePathRelative":"OneMoreThing/interview/10.md","localizedDate":"2022年8月12日","excerpt":"<p>同 vue 一样，React 框架类面试主要考察三个方面:</p>\\n<ul>\\n<li>框架的使用(基本使用, 高级特性, 周边插件)</li>\\n<li>框架的原理(基本原理的了解, 热门技术的深度和全面性)</li>\\n<li>框架的实际应用,即设计能力(组件结构和数据结构)</li>\\n</ul>\\n<h2> 基本使用</h2>\\n<h3> jsx 的基本使用</h3>\\n<ul>\\n<li>变量、表达式</li>\\n<li>class style</li>\\n<li>子元素和组件</li>\\n<li>条件判断: <code>if else</code>、三元表达式和 逻辑运算符<code>&amp;&amp;</code>与<code>||</code></li>\\n</ul>"}');export{e as data};
