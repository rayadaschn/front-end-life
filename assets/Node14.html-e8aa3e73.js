const e=JSON.parse('{"key":"v-07c49150","path":"/JavaScript/Node/Node14.html","title":"再论 Buffer","lang":"zh-CN","frontmatter":{"title":"再论 Buffer","icon":"nodeJS","date":"2025-06-09T00:00:00.000Z","category":["javascript"],"tag":["node"]},"headers":[{"level":2,"title":"关于字节","slug":"关于字节","link":"#关于字节","children":[]},{"level":2,"title":"常见的编码","slug":"常见的编码","link":"#常见的编码","children":[]},{"level":2,"title":"定义 Buffer 的三种方式","slug":"定义-buffer-的三种方式","link":"#定义-buffer-的三种方式","children":[]},{"level":2,"title":"buffer 常用方法","slug":"buffer-常用方法","link":"#buffer-常用方法","children":[]}],"git":{"createdTime":1749431509000,"updatedTime":1749482856000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":3.78,"words":1135},"filePathRelative":"JavaScript/Node/Node14.md","localizedDate":"2025年6月9日","excerpt":"<p>本文重新梳理一遍 Node.js 中的 Buffer 概念和使用方法。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">为什么需要 Buffer?</p>\\n<p>在 Node.js 中，Buffer 是处理二进制数据的核心对象。JavaScript 本身是基于 Unicode 的字符串处理，但在网络通信、文件操作等场景中，我们经常需要处理原始的二进制数据。Buffer 提供了一种高效的方式来存储和操作这些数据。(Blob 不能直接进行问卷的处理，ArrayBuffer 不能直接操作二进制数据，而 Buffer 则可以直接操作二进制数据)</p>\\n</div>"}');export{e as data};
