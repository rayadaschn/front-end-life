const e=JSON.parse('{"key":"v-ec79231c","path":"/JavaScript/JS/JS34.html","title":"Promise 的状态吸收","lang":"zh-CN","frontmatter":{"title":"Promise 的状态吸收","icon":"javascript","date":"2025-03-01T00:00:00.000Z","category":["javascript"],"tag":["javascript"],"sticky":false},"headers":[{"level":2,"title":"Promise 回顾","slug":"promise-回顾","link":"#promise-回顾","children":[]},{"level":2,"title":"Promise 的吸收机制","slug":"promise-的吸收机制","link":"#promise-的吸收机制","children":[]},{"level":2,"title":"深入理解","slug":"深入理解","link":"#深入理解","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1740798861000,"updatedTime":1740798861000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.62,"words":1086},"filePathRelative":"JavaScript/JS/JS34.md","localizedDate":"2025年3月1日","excerpt":"<p>一直一来，Promise 的状态吸收问题，我都没有理解，今天终于明白了，记录一下。</p>\\n<blockquote>\\n<p>由于对这块没有详细定义，因此这里的 Promise 处理机制均是基于 V8 引擎的。</p>\\n</blockquote>\\n<h2> Promise 回顾</h2>\\n<p>Promise 有三种状态：<code>pending</code>、<code>fulfilled</code>、<code>rejected</code>。当使用 <code>resolve</code> 或 <code>reject</code> 时，Promise 的状态会发生变化，但一旦状态发生变化，就不会再变。</p>"}');export{e as data};
