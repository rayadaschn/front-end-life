const l=JSON.parse('{"key":"v-092cc892","path":"/CSS/TailwindCSS01.html","title":"Tailwind 01 安装及入门","lang":"zh-CN","frontmatter":{"title":"Tailwind 01 安装及入门","date":"2023-06-21T00:00:00.000Z","icon":"style","category":["CSS"],"tag":["CSS"]},"headers":[{"level":2,"title":"安装和初始化配置","slug":"安装和初始化配置","link":"#安装和初始化配置","children":[]},{"level":2,"title":"编辑器配置","slug":"编辑器配置","link":"#编辑器配置","children":[]},{"level":2,"title":"响应式设计","slug":"响应式设计","link":"#响应式设计","children":[]},{"level":2,"title":"悬停、焦点和其他状态","slug":"悬停、焦点和其他状态","link":"#悬停、焦点和其他状态","children":[]},{"level":2,"title":"为自定义功能类生成变体","slug":"为自定义功能类生成变体","link":"#为自定义功能类生成变体","children":[]}],"git":{"createdTime":1687653747000,"updatedTime":1700631675000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":9}]},"readingTime":{"minutes":5.02,"words":1507},"filePathRelative":"CSS/TailwindCSS01.md","localizedDate":"2023年6月21日","excerpt":"<blockquote>\\n<p>在接触 Tailwind 的刚开始，并没有感受到它的好处，反而觉得这是一种非常繁琐的事情。入门了几次都以失败告终，非常不适应。但是这一次，终于有一点小感悟了，遂记录下来。\\nTailwindcss 系列可见<a href=\\"./README\\">《CSS 备忘录》</a></p>\\n</blockquote>\\n<p>利用 Tailwind 去构建 CSS 的一些实在的好处：</p>\\n<ul>\\n<li><strong>无需再为给类命名而浪费时间</strong>。觉得这个真的非常棒，这对于统一一代码规范非常友好，不用再纠结这个项目是 BEM(Block-Element-Modifier)的规范，而下一个项目是 SMACSS (Scalable and Modular Architecture for CSS)，因为想在全都是 Atomic CSS，全为 inline-style。</li>\\n<li>CSS 的代码不再增加。因为所有的 CSS 都是可复用的，所以在大部分情况下都无需再写新的 CSS 样式了。</li>\\n<li>改写样式更加安全。在以往的项目中，CSS 样式可能是全局的，所以一旦更改可能会对其它 HTML 造成破坏，从一部分情况上看，是降低了用户心智。</li>\\n</ul>"}');export{l as data};
