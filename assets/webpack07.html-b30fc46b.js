const a=JSON.parse(`{"key":"v-282dc871","path":"/Framework/Webpack/webpack07.html","title":"Webpack 性能优化之更多","lang":"zh-CN","frontmatter":{"title":"Webpack 性能优化之更多","icon":"build","date":"2023-05-09T00:00:00.000Z","category":["框架"],"tag":["webpack"],"star":false,"sticky":false},"headers":[{"level":2,"title":"开启 HappyPack 多进程打包","slug":"开启-happypack-多进程打包","link":"#开启-happypack-多进程打包","children":[]}],"git":{"createdTime":1712245602000,"updatedTime":1749566591000,"contributors":[{"name":"rayadaschn","email":"115447518+rayadaschn@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":0.93,"words":279},"filePathRelative":"Framework/Webpack/webpack07.md","localizedDate":"2023年5月9日","excerpt":"<h2> 开启 HappyPack 多进程打包</h2>\\n<p>Node 是单线程的，而 Webpack 又是基于 Node 构建的，所以 Webpack 也是单线程的。</p>\\n<p>开启 HappyPack 可以让 Webpack 同一时间处理多个任务（多进程），从而缩短 Webpack 的打包时间。</p>\\n<p>配置过程:</p>\\n<ol>\\n<li>\\n<p>首先，安装 HappyPack 插件及其依赖：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> happypack webpack@4 @happypack/core @happypack/loader --save-dev\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>在 webpack 配置文件中引入 HappyPack 插件：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> HappyPack <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'happypack'</span><span class=\\"token punctuation\\">)</span>\\n\\nmodule<span class=\\"token punctuation\\">.</span>exports <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 其他配置项...</span>\\n  <span class=\\"token literal-property property\\">plugins</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">HappyPack</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token literal-property property\\">id</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'babel'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 指定唯一的标识符 id 来处理对应的 loader</span>\\n      <span class=\\"token literal-property property\\">loaders</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'babel-loader'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 将要使用的 loader</span>\\n      <span class=\\"token literal-property property\\">threads</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 开启多线程</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">module</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">rules</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n      <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">test</span><span class=\\"token operator\\">:</span> <span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">\\\\.js$</span><span class=\\"token regex-delimiter\\">/</span></span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">// 指定使用 HappyPack 加载器处理匹配的文件</span>\\n        <span class=\\"token literal-property property\\">loader</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'happypack/loader?id=babel'</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token literal-property property\\">exclude</span><span class=\\"token operator\\">:</span> <span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">node_modules</span><span class=\\"token regex-delimiter\\">/</span></span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>"}`);export{a as data};
