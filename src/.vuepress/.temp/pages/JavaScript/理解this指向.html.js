export const data = JSON.parse("{\"key\":\"v-b2ec27e0\",\"path\":\"/JavaScript/%E7%90%86%E8%A7%A3this%E6%8C%87%E5%90%91.html\",\"title\":\"理解this指向\",\"lang\":\"en-US\",\"frontmatter\":{\"description\":\"理解this指向 this是JavaScript中的一个关键字，但是又一个相对比较特别的关键字，不像function、var、for、if这些关键字一样，可以很清楚的搞清楚它到底是如何使用的。 this会在执行上下文中绑定一个对象，但是是根据什么条件绑定的呢？在不同的执行条件下会绑定不同的对象，这也是让人捉摸不定的地方。 这一次，我们一起来彻底搞定this到底是如何绑定的吧！ 一. 理解this 1.1. 为什么使用this 在常见的编程语言中，几乎都有this这个关键字（Objective-C中使用的是self），但是JavaScript中的this和常见的面向对象语言中的this不太一样：\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/front-end-life/JavaScript/%E7%90%86%E8%A7%A3this%E6%8C%87%E5%90%91.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Huy's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"理解this指向\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"理解this指向 this是JavaScript中的一个关键字，但是又一个相对比较特别的关键字，不像function、var、for、if这些关键字一样，可以很清楚的搞清楚它到底是如何使用的。 this会在执行上下文中绑定一个对象，但是是根据什么条件绑定的呢？在不同的执行条件下会绑定不同的对象，这也是让人捉摸不定的地方。 这一次，我们一起来彻底搞定this到底是如何绑定的吧！ 一. 理解this 1.1. 为什么使用this 在常见的编程语言中，几乎都有this这个关键字（Objective-C中使用的是self），但是JavaScript中的this和常见的面向对象语言中的this不太一样：\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"理解this指向\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"一. 理解this\",\"slug\":\"一-理解this\",\"link\":\"#一-理解this\",\"children\":[{\"level\":3,\"title\":\"1.1. 为什么使用this\",\"slug\":\"_1-1-为什么使用this\",\"link\":\"#_1-1-为什么使用this\",\"children\":[]},{\"level\":3,\"title\":\"1.2. this指向什么\",\"slug\":\"_1-2-this指向什么\",\"link\":\"#_1-2-this指向什么\",\"children\":[]}]},{\"level\":2,\"title\":\"二. this绑定规则\",\"slug\":\"二-this绑定规则\",\"link\":\"#二-this绑定规则\",\"children\":[{\"level\":3,\"title\":\"2.1. 默认绑定\",\"slug\":\"_2-1-默认绑定\",\"link\":\"#_2-1-默认绑定\",\"children\":[]},{\"level\":3,\"title\":\"2.2. 隐式绑定\",\"slug\":\"_2-2-隐式绑定\",\"link\":\"#_2-2-隐式绑定\",\"children\":[]},{\"level\":3,\"title\":\"2.3. 显示绑定\",\"slug\":\"_2-3-显示绑定\",\"link\":\"#_2-3-显示绑定\",\"children\":[]},{\"level\":3,\"title\":\"2.4. new绑定\",\"slug\":\"_2-4-new绑定\",\"link\":\"#_2-4-new绑定\",\"children\":[]},{\"level\":3,\"title\":\"2.5. 规则优先级\",\"slug\":\"_2-5-规则优先级\",\"link\":\"#_2-5-规则优先级\",\"children\":[]}]},{\"level\":2,\"title\":\"三. this规则之外\",\"slug\":\"三-this规则之外\",\"link\":\"#三-this规则之外\",\"children\":[{\"level\":3,\"title\":\"3.1. 忽略显示绑定\",\"slug\":\"_3-1-忽略显示绑定\",\"link\":\"#_3-1-忽略显示绑定\",\"children\":[]},{\"level\":3,\"title\":\"3.2. 间接函数引用\",\"slug\":\"_3-2-间接函数引用\",\"link\":\"#_3-2-间接函数引用\",\"children\":[]},{\"level\":3,\"title\":\"3.3. ES6箭头函数\",\"slug\":\"_3-3-es6箭头函数\",\"link\":\"#_3-3-es6箭头函数\",\"children\":[]}]},{\"level\":2,\"title\":\"四. this面试题\",\"slug\":\"四-this面试题\",\"link\":\"#四-this面试题\",\"children\":[{\"level\":3,\"title\":\"4.1. 面试题一：\",\"slug\":\"_4-1-面试题一\",\"link\":\"#_4-1-面试题一\",\"children\":[]},{\"level\":3,\"title\":\"4.2. 面试题二：\",\"slug\":\"_4-2-面试题二\",\"link\":\"#_4-2-面试题二\",\"children\":[]},{\"level\":3,\"title\":\"4.3. 面试题三:\",\"slug\":\"_4-3-面试题三\",\"link\":\"#_4-3-面试题三\",\"children\":[]},{\"level\":3,\"title\":\"4.4. 面试题四：\",\"slug\":\"_4-4-面试题四\",\"link\":\"#_4-4-面试题四\",\"children\":[]}]}],\"readingTime\":{\"minutes\":16.65,\"words\":4995},\"filePathRelative\":\"JavaScript/理解this指向.md\",\"excerpt\":\"<h1> 理解this指向</h1>\\n<blockquote>\\n<p>this是JavaScript中的一个关键字，但是又一个相对比较特别的关键字，不像function、var、for、if这些关键字一样，可以很清楚的搞清楚它到底是如何使用的。</p>\\n<p>this会在执行上下文中绑定一个对象，但是是根据什么条件绑定的呢？在不同的执行条件下会绑定不同的对象，这也是让人捉摸不定的地方。</p>\\n<p>这一次，我们一起来彻底搞定this到底是如何绑定的吧！</p>\\n</blockquote>\\n<h2> 一. 理解this</h2>\\n<h3> 1.1. 为什么使用this</h3>\\n<p>在常见的编程语言中，几乎都有this这个关键字（Objective-C中使用的是self），但是JavaScript中的this和常见的面向对象语言中的this不太一样：</p>\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
