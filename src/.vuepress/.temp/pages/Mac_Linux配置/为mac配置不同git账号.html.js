export const data = JSON.parse("{\"key\":\"v-6efb869b\",\"path\":\"/Mac_Linux%E9%85%8D%E7%BD%AE/%E4%B8%BAmac%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%90%8Cgit%E8%B4%A6%E5%8F%B7.html\",\"title\":\"为 Mac 配置不同的 Git 账号\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"为 Mac 配置不同的 Git 账号\",\"index\":2,\"icon\":\"linux\",\"date\":\"2023-02-1\",\"category\":[\"linux\"],\"tag\":[\"linux\"],\"star\":true,\"sticky\":false,\"description\":\"为 Mac 配置不同的 Git 账号 [toc] 总结 【注】全文的用户环境为 MacOS，一些文件的目录有所不同。 检查配置 $: git config --list # 加 --global 为全局配置查看 // 配置全局git用户名 $: git config --global user.name \\\"zhangsan\\\" // 配置全局git提交邮箱 $: git config --global user.email \\\"emailA@gmail.com\\\" 创建本地秘钥 $: ssh-keygen -t rsa -C 'emailA.gmail.com' # 三次回车, 可以不设置相应存储密码。emailA 的秘钥为全局git通用 # 设置第二个邮箱 emailB@gmail.com $: ssh-keygen -t rsa -f ~/.ssh/id_rsa_emailB@gmail.com -C \\\"emailB@gmail.com\\\" 远程添加公钥 # 复制邮箱的公钥(默认全局私钥为: id_rsa) 到远程 $: pbcopy &lt; ~/.ssh/id_rsa.pub # 额外的第二个邮箱 emailB@gmail.com，复制公钥到远程 $: pbcopy &lt; ~/.ssh/id_rsa_emailB@gmail.com.pub 配置 config 文件 打开 git 配置文件所在文件夹： open ~/.ssh 创建 config 文件（没有后缀）： # 通用配置,解决git版本过高问题 Host * UseKeychain yes AddKeysToAgent yes IdentityFile ~/.ssh/id_rsa KexAlgorithms +diffie-hellman-group1-sha1 # 全局默认邮箱 Host gitlab.xxx.cn Hostname gitlab.xxx.cn IdentityFile ~/.ssh/id_rsa User company # gmail Host gmail.github.com Hostname github.com IdentityFile ~/.ssh/id_rsa_emailB@gmail.com User gmail 测试连接 格式： ssh -T git@{config里面的user}.{config里面的Hostname} # 全局默认的个人账户，若没有配置 config， 则直接 ssh -T git@gitlab.xxx.cn $: ssh -T git@company.gitlab.xxx.cn # 额外配置邮箱 &lt;User&gt; 为全局配置中的 User $: ssh -T git@gmail.github.com clone 使用 格式： git clone git@{config里面的user}.{config里面的Hostname}:{具体项目地址}.git # User 为 'gmail' $: git clone git@gmail.github.com:vuejs/vue.git 不同项目不同的邮箱 由于存在多个账户，为避免提交代码时使用个人邮箱，在每个项目前，最好进行git邮箱检查。 若 git config --list 局部本地配置与预期不符，则进行局部设置。 $: cd 项目名 # 设置该项目使用的git账号和邮箱 $: git config user.name 'AnotherName' $: git config user.email 'AnotherEmail' # 查看该项目git账号是否正确 $: git config --list\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/Mac_Linux%E9%85%8D%E7%BD%AE/%E4%B8%BAmac%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%90%8Cgit%E8%B4%A6%E5%8F%B7.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Huy's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"为 Mac 配置不同的 Git 账号\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"为 Mac 配置不同的 Git 账号 [toc] 总结 【注】全文的用户环境为 MacOS，一些文件的目录有所不同。 检查配置 $: git config --list # 加 --global 为全局配置查看 // 配置全局git用户名 $: git config --global user.name \\\"zhangsan\\\" // 配置全局git提交邮箱 $: git config --global user.email \\\"emailA@gmail.com\\\" 创建本地秘钥 $: ssh-keygen -t rsa -C 'emailA.gmail.com' # 三次回车, 可以不设置相应存储密码。emailA 的秘钥为全局git通用 # 设置第二个邮箱 emailB@gmail.com $: ssh-keygen -t rsa -f ~/.ssh/id_rsa_emailB@gmail.com -C \\\"emailB@gmail.com\\\" 远程添加公钥 # 复制邮箱的公钥(默认全局私钥为: id_rsa) 到远程 $: pbcopy &lt; ~/.ssh/id_rsa.pub # 额外的第二个邮箱 emailB@gmail.com，复制公钥到远程 $: pbcopy &lt; ~/.ssh/id_rsa_emailB@gmail.com.pub 配置 config 文件 打开 git 配置文件所在文件夹： open ~/.ssh 创建 config 文件（没有后缀）： # 通用配置,解决git版本过高问题 Host * UseKeychain yes AddKeysToAgent yes IdentityFile ~/.ssh/id_rsa KexAlgorithms +diffie-hellman-group1-sha1 # 全局默认邮箱 Host gitlab.xxx.cn Hostname gitlab.xxx.cn IdentityFile ~/.ssh/id_rsa User company # gmail Host gmail.github.com Hostname github.com IdentityFile ~/.ssh/id_rsa_emailB@gmail.com User gmail 测试连接 格式： ssh -T git@{config里面的user}.{config里面的Hostname} # 全局默认的个人账户，若没有配置 config， 则直接 ssh -T git@gitlab.xxx.cn $: ssh -T git@company.gitlab.xxx.cn # 额外配置邮箱 &lt;User&gt; 为全局配置中的 User $: ssh -T git@gmail.github.com clone 使用 格式： git clone git@{config里面的user}.{config里面的Hostname}:{具体项目地址}.git # User 为 'gmail' $: git clone git@gmail.github.com:vuejs/vue.git 不同项目不同的邮箱 由于存在多个账户，为避免提交代码时使用个人邮箱，在每个项目前，最好进行git邮箱检查。 若 git config --list 局部本地配置与预期不符，则进行局部设置。 $: cd 项目名 # 设置该项目使用的git账号和邮箱 $: git config user.name 'AnotherName' $: git config user.email 'AnotherEmail' # 查看该项目git账号是否正确 $: git config --list\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-02-09T07:00:38.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"linux\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-01-31T16:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-02-09T07:00:38.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"为 Mac 配置不同的 Git 账号\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-01-31T16:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-02-09T07:00:38.000Z\\\",\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]},{\"level\":2,\"title\":\"准备\",\"slug\":\"准备\",\"link\":\"#准备\",\"children\":[]},{\"level\":2,\"title\":\"添加全局默认 git 账号和邮箱, 用于每次提交代码\",\"slug\":\"添加全局默认-git-账号和邮箱-用于每次提交代码\",\"link\":\"#添加全局默认-git-账号和邮箱-用于每次提交代码\",\"children\":[]},{\"level\":2,\"title\":\"生成秘钥\",\"slug\":\"生成秘钥\",\"link\":\"#生成秘钥\",\"children\":[{\"level\":3,\"title\":\"检查秘钥\",\"slug\":\"检查秘钥\",\"link\":\"#检查秘钥\",\"children\":[]},{\"level\":3,\"title\":\"秘钥生成\",\"slug\":\"秘钥生成\",\"link\":\"#秘钥生成\",\"children\":[]},{\"level\":3,\"title\":\"小结\",\"slug\":\"小结\",\"link\":\"#小结\",\"children\":[]}]},{\"level\":2,\"title\":\"远程 Git 仓库 添加公钥\",\"slug\":\"远程-git-仓库-添加公钥\",\"link\":\"#远程-git-仓库-添加公钥\",\"children\":[]},{\"level\":2,\"title\":\"配置 config 文件\",\"slug\":\"配置-config-文件\",\"link\":\"#配置-config-文件\",\"children\":[]},{\"level\":2,\"title\":\"测试连接\",\"slug\":\"测试连接\",\"link\":\"#测试连接\",\"children\":[]},{\"level\":2,\"title\":\"使用 SSH 方法\",\"slug\":\"使用-ssh-方法\",\"link\":\"#使用-ssh-方法\",\"children\":[]},{\"level\":2,\"title\":\"为不同项目配置不同的 Git\",\"slug\":\"为不同项目配置不同的-git\",\"link\":\"#为不同项目配置不同的-git\",\"children\":[]}],\"git\":{\"createdTime\":1675694747000,\"updatedTime\":1675926038000,\"contributors\":[{\"name\":\"Huy\",\"email\":\"rayadaschn@gmail.com\",\"commits\":3}]},\"readingTime\":{\"minutes\":9.91,\"words\":2972},\"filePathRelative\":\"Mac&Linux配置/为mac配置不同git账号.md\",\"localizedDate\":\"February 1, 2023\",\"excerpt\":\"<h1> 为 Mac 配置不同的 Git 账号</h1>\\n<p>[toc]</p>\\n<h2> 总结</h2>\\n<p>【注】全文的用户环境为 MacOS，一些文件的目录有所不同。</p>\\n<ul>\\n<li>\\n<p>检查配置</p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code>$: <span class=\\\"token function\\\">git</span> config <span class=\\\"token parameter variable\\\">--list</span>  <span class=\\\"token comment\\\"># 加 --global 为全局配置查看  </span>\\n\\n// 配置全局git用户名\\n$: <span class=\\\"token function\\\">git</span> config <span class=\\\"token parameter variable\\\">--global</span> user.name <span class=\\\"token string\\\">\\\"zhangsan\\\"</span>\\n// 配置全局git提交邮箱\\n$: <span class=\\\"token function\\\">git</span> config <span class=\\\"token parameter variable\\\">--global</span> user.email <span class=\\\"token string\\\">\\\"emailA@gmail.com\\\"</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>创建本地秘钥</p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code>$: ssh-keygen <span class=\\\"token parameter variable\\\">-t</span> rsa <span class=\\\"token parameter variable\\\">-C</span> <span class=\\\"token string\\\">'emailA.gmail.com'</span>\\n<span class=\\\"token comment\\\"># 三次回车, 可以不设置相应存储密码。emailA 的秘钥为全局git通用</span>\\n\\n<span class=\\\"token comment\\\"># 设置第二个邮箱 emailB@gmail.com</span>\\n$: ssh-keygen <span class=\\\"token parameter variable\\\">-t</span> rsa <span class=\\\"token parameter variable\\\">-f</span> ~/.ssh/id_rsa_emailB@gmail.com <span class=\\\"token parameter variable\\\">-C</span> <span class=\\\"token string\\\">\\\"emailB@gmail.com\\\"</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>远程添加公钥</p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># 复制邮箱的公钥(默认全局私钥为: id_rsa) 到远程</span>\\n$: pbcopy <span class=\\\"token operator\\\">&lt;</span> ~/.ssh/id_rsa.pub\\n\\n<span class=\\\"token comment\\\"># 额外的第二个邮箱 emailB@gmail.com，复制公钥到远程</span>\\n$: pbcopy <span class=\\\"token operator\\\">&lt;</span> ~/.ssh/id_rsa_emailB@gmail.com.pub\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>配置 <strong>config</strong> 文件</p>\\n<p>打开 git 配置文件所在文件夹： <code>open ~/.ssh</code></p>\\n<p>创建 <code>config</code> 文件（没有后缀）：</p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># 通用配置,解决git版本过高问题</span>\\nHost *\\nUseKeychain <span class=\\\"token function\\\">yes</span>\\nAddKeysToAgent <span class=\\\"token function\\\">yes</span>\\nIdentityFile ~/.ssh/id_rsa\\nKexAlgorithms +diffie-hellman-group1-sha1\\n\\n<span class=\\\"token comment\\\"># 全局默认邮箱</span>\\nHost gitlab.xxx.cn\\nHostname gitlab.xxx.cn\\nIdentityFile ~/.ssh/id_rsa\\nUser company\\n\\n<span class=\\\"token comment\\\"># gmail</span>\\nHost gmail.github.com\\nHostname github.com\\nIdentityFile ~/.ssh/id_rsa_emailB@gmail.com\\nUser gmail\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>测试连接</p>\\n<p>格式： <code>ssh -T git@{config里面的user}.{config里面的Hostname}</code></p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># 全局默认的个人账户，若没有配置 config， 则直接 ssh -T git@gitlab.xxx.cn</span>\\n$: <span class=\\\"token function\\\">ssh</span> <span class=\\\"token parameter variable\\\">-T</span> git@company.gitlab.xxx.cn\\n\\n<span class=\\\"token comment\\\"># 额外配置邮箱 &lt;User&gt; 为全局配置中的 User</span>\\n$: <span class=\\\"token function\\\">ssh</span> <span class=\\\"token parameter variable\\\">-T</span> git@gmail.github.com\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>clone 使用</p>\\n<p>格式： <code>git clone git@{config里面的user}.{config里面的Hostname}:{具体项目地址}.git</code></p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code><span class=\\\"token comment\\\"># User 为 'gmail' </span>\\n$: <span class=\\\"token function\\\">git</span> clone git@gmail.github.com:vuejs/vue.git\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>不同项目不同的邮箱</p>\\n<p>由于存在多个账户，为避免提交代码时使用个人邮箱，在每个项目前，最好进行git邮箱检查。</p>\\n<p>若 <code>git config --list</code> 局部本地配置与预期不符，则进行局部设置。</p>\\n<div class=\\\"language-bash line-numbers-mode\\\" data-ext=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code>$: <span class=\\\"token builtin class-name\\\">cd</span> 项目名 \\n<span class=\\\"token comment\\\"># 设置该项目使用的git账号和邮箱</span>\\n$: <span class=\\\"token function\\\">git</span> config user.name <span class=\\\"token string\\\">'AnotherName'</span>\\n$: <span class=\\\"token function\\\">git</span> config user.email <span class=\\\"token string\\\">'AnotherEmail'</span>\\n<span class=\\\"token comment\\\"># 查看该项目git账号是否正确</span>\\n$: <span class=\\\"token function\\\">git</span> config <span class=\\\"token parameter variable\\\">--list</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n</ul>\",\"autoDesc\":true}")
